{
  "openapi": "3.0.0",
  "info": {
    "title": "PAY. Global Management System API's",
    "description": "A restful journey to your payments.",
    "termsOfService": "https://www.pay.nl/en/terms-conditions",
    "contact": {
      "email": "support@pay.nl"
    },
    "version": "v2.0"
  },
  "servers": [
    {
      "url": "https://rest.pay.nl/v2",
      "description": "PAY. API server"
    }
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate",
        "description": "Use your username and password from my.pay.nl to exchange your credentials for a bearer token. You will receive an access token and refresh token. Use the access token to make API calls and use the refresh token to refresh both of the tokens (See Authenticate:Refresh). The access token is valid for 1 hour, the refresh token is valid for 2 hours",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "success": {
                    "summary": "Successful token creation",
                    "value": {
                      "tokenType": "Bearer",
                      "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJBLTE1ODQtOTMxNyIsImlhdCI6MTY2OTEyOTg0OSwiZXhwIjoxNjY5MTM3MDQ5fQ.7g61s7PN58Ope8t70ysnvOqbcOjGDFzyWanZeFqx8cQ",
                      "refreshToken": "5fe027d96cded0c92b2337d4068a336dc41b956683a501c95d4896d9cb9f1103dc0b6d3388f17c1ef6a578ed9aa3c9d1c133355e9d9a4fa5dbb53d22e0aba0dc",
                      "accessTokenExpiresAt": "2022-11-22T16:10:49+01:00",
                      "refreshTokenExpiresAt": "2022-11-22T17:10:49+01:00"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/authenticationtokens/{authenticationTokenCode}": {
      "get": {
        "tags": [
          "AuthenticationTokens"
        ],
        "summary": "AuthenticationTokens:Get",
        "description": "Get the details of a specific authentication token. Note you need to have access to the merchant if the authentication token is not available under your own merchant registration",
        "parameters": [
          {
            "name": "authenticationTokenCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AT-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "secret",
                    "name",
                    "merchant",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AT-1234-4321"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "AuthenticationToken",
                  "x-readme-ref-name": "AuthenticationToken"
                },
                "examples": {
                  "success": {
                    "summary": "Specific authentication token",
                    "value": {
                      "code": "AT-1234-1234",
                      "secret": "21349ebda24393453sdfdfad",
                      "name": "token1",
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "INACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "url": "/authenticationtokens/AT-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "merchantCode: Invalid ID",
                      "violations": [
                        {
                          "propertyPath": "merchantCode",
                          "message": "Invalid ID",
                          "code": "PAY-2820"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "AuthenticationTokens"
        ],
        "summary": "AuthenticationTokens:Delete",
        "description": "Deletes an authentication token. Note you need to have access to the merchant if the authentication token is not available under your own merchant registration",
        "parameters": [
          {
            "name": "authenticationTokenCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AT-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "authenticationTokenCode: {}",
                      "violations": [
                        {
                          "propertyPath": "authenticationTokenCode",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/authenticationtokens": {
      "get": {
        "tags": [
          "AuthenticationTokens"
        ],
        "summary": "\tAuthenticationTokens:Browse",
        "description": "Get all authentication tokens. If you do not supply a merchantCode we return the authentication tokens that are available under your own merchant registration. If you supply a merchantCode you need to have access to that merchant",
        "parameters": [
          {
            "name": "merchant",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "authenticationTokens": {
                      "type": "array",
                      "items": {
                        "required": [
                          "code",
                          "secret",
                          "name",
                          "merchant",
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy",
                          "deletedAt",
                          "deletedBy"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "AT-1234-4321"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "merchant": {
                            "required": [
                              "code",
                              "name",
                              "status"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "name": {
                                "description": "The name of your merchant.",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 2,
                                "example": "CompanyName"
                              },
                              "status": {
                                "description": "Merchant state",
                                "type": "string",
                                "example": "ACTIVE"
                              }
                            },
                            "type": "object",
                            "title": "MerchantMinimal",
                            "x-readme-ref-name": "MerchantMinimal"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "AuthenticationToken",
                        "x-readme-ref-name": "AuthenticationToken"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "All authentication tokens",
                    "value": {
                      "total": 1,
                      "authenticationTokens": [
                        {
                          "code": "AT-1234-1234",
                          "secret": "21349ebda24393453sdfdfad",
                          "name": "token1",
                          "merchant": {
                            "code": "M-1234-4321",
                            "status": "INACTIVE",
                            "name": "CompanyName"
                          },
                          "createdAt": "2021-09-04T12:14:01+02:00",
                          "createdBy": "A-1234-4321",
                          "modifiedAt": null,
                          "modifiedBy": null,
                          "deletedAt": null,
                          "deletedBy": null,
                          "_links": [
                            {
                              "url": "/authenticationTokens/AT-1234-1234",
                              "rel": "self",
                              "type": "GET"
                            }
                          ]
                        }
                      ],
                      "_links": [
                        {
                          "url": "/authenticationTokens/",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "merchant: Invalid ID",
                      "violations": [
                        {
                          "propertyPath": "merchant",
                          "message": "Invalid ID",
                          "code": "PAY-2820"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "AuthenticationTokens"
        ],
        "summary": "AuthenticationTokens:Create",
        "description": "Creates a new authentication token under a merchant. You can also specify which authorisation groups needs to be linked to the token. You can also supply a merchantCode. If a merchantCode is supplied then you need to have access to that merchant. You need to authenticate with an AT-code as username and a token as password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "merchantCode",
                  "authenticationToken"
                ],
                "properties": {
                  "merchantCode": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "authenticationToken": {
                    "required": [
                      "description",
                      "authorisation",
                      "authorisationGroups"
                    ],
                    "properties": {
                      "description": {
                        "type": "string",
                        "example": "Default token"
                      },
                      "authorisation": {
                        "description": "Specify which kind of authorisation is applicable for the token.\n\nall: all merchant rights\nspecified: specify which authorisation groups should be enabled from the token. At least one authorisation group (in the authorisationGroups array) is mandatory",
                        "type": "string",
                        "enum": [
                          "all",
                          "specified"
                        ]
                      },
                      "authorisationGroups": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "AG-1234-4321"
                        }
                      },
                      "ipFilter": {
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "DENY_FROM_ALL"
                            ]
                          },
                          "exceptionList": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "213.126.82.230"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "authenticationToken": {
                  "summary": "Token",
                  "value": {
                    "merchantCode": "M-1234-4321",
                    "authenticationToken": {
                      "description": "token1",
                      "authorisation": "specified",
                      "authorisationGroups": [
                        "AG-1234-4321"
                      ],
                      "ipfilter": {
                        "type": "DENY_FROM_ALL",
                        "exceptionList": [
                          "192.168.1.2",
                          "192.168.1.3"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "secret",
                    "name",
                    "merchant",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AT-1234-4321"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "AuthenticationToken",
                  "x-readme-ref-name": "AuthenticationToken"
                },
                "examples": {
                  "success": {
                    "summary": "Created authentication token",
                    "value": {
                      "code": "AT-1234-1234",
                      "secret": "21349ebda24393453sdfdfad",
                      "name": "token1",
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "INACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "A-XXXX-XXXX",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "url": "/authenticationtokens/AT-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "merchantCode: Invalid ID",
                      "violations": [
                        {
                          "propertyPath": "merchantCode",
                          "message": "Invalid ID",
                          "code": "PAY-2820"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/authenticationtokens/{authenticationTokenCode}/undelete": {
      "post": {
        "tags": [
          "AuthenticationTokens"
        ],
        "summary": "AuthenticationTokens:Undelete",
        "description": "Undelete an authentication token that was recently deleted. This can only be done within a 15 minute time window",
        "parameters": [
          {
            "name": "authenticationTokenCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AT-1234-4321"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "secret",
                    "name",
                    "merchant",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AT-1234-4321"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "AuthenticationToken",
                  "x-readme-ref-name": "AuthenticationToken"
                },
                "examples": {
                  "success": {
                    "summary": "Specific authentication token",
                    "value": {
                      "code": "AT-1234-1234",
                      "secret": "21349ebda24393453sdfdfad",
                      "name": "token1",
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "INACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "url": "/authenticationtokens/AT-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "authenticationTokenCode: {}",
                      "violations": [
                        {
                          "propertyPath": "authenticationTokenCode",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Authentication token recovery window expired",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Authentication token recovery window expired",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/authorisationgroups": {
      "get": {
        "tags": [
          "AuthorisationGroups"
        ],
        "summary": "AuthorisationGroups",
        "description": "Get a list of all (public) authorisation groups. If your account has rights to create own groups we will also return the groups you have defined yourself",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "authorisationGroups": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Authorisation group identifier",
                            "type": "string",
                            "example": "AG-1234-4321"
                          },
                          "name": {
                            "description": "Name of the authorisation group",
                            "type": "string",
                            "example": "John Doe"
                          },
                          "description": {
                            "description": "Description of the authorisation group",
                            "type": "string",
                            "example": "John Doe of test company"
                          },
                          "purpose": {
                            "properties": {
                              "account": {
                                "type": "boolean",
                                "example": true
                              },
                              "token": {
                                "type": "boolean",
                                "example": true
                              },
                              "relation": {
                                "type": "boolean",
                                "example": true
                              },
                              "merchant": {
                                "type": "boolean",
                                "example": true
                              }
                            },
                            "type": "object"
                          },
                          "public": {
                            "description": "Indicate if the authorisation group is public",
                            "type": "boolean",
                            "example": true
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Authorisationgroup",
                        "x-readme-ref-name": "Authorisationgroup"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "List all authorisation groups",
                    "value": {
                      "total": 1,
                      "authorisationGroups": [
                        {
                          "code": "AG-1234-4321",
                          "name": "Webshop developer",
                          "description": "Webshop developer",
                          "purpose": {
                            "account": true,
                            "token": false,
                            "relation": false,
                            "merchant": true
                          },
                          "public": true,
                          "translations": {
                            "description": {
                              "en_GB": "Webshop developer",
                              "it_IT": "Sviluppatore webshop",
                              "nl_NL": "Toevoegen en wijzigen van verkooplocaties, bekijken van transacties (zonder refunds) en bekijken van de payment state log en de ondersteuningsmodule. Inzicht in Tokens"
                            },
                            "name": {
                              "en_GB": "Webshop developer",
                              "it_IT": "Sviluppatore webshop",
                              "nl_NL": "Webbouwer"
                            }
                          },
                          "createdAt": "2014-03-21T10:56:04+01:00",
                          "createdBy": "A-1234-4321",
                          "modifiedAt": "2021-04-09T09:13:38+02:00",
                          "modifiedBy": "A-1234-4321",
                          "deletedAt": null,
                          "deletedBy": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/authorisationgroups",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/balance": {
      "get": {
        "tags": [
          "Balance"
        ],
        "summary": "Balance:Dashboard",
        "description": "Gives an overview of the active balance of a merchant, including information about the next and the previous clearing. You can supply a merchant code. If you are a partner and you have access to that merchant code we will provide you the data. If no merchant code is provided your own balance information returned",
        "parameters": [
          {
            "name": "merchant",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "balance",
                        "invoices",
                        "costs",
                        "nextClearing",
                        "lastClearing"
                      ],
                      "properties": {
                        "balance": {
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "invoices": {
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "nullable": true
                        },
                        "costs": {
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "nullable": true
                        },
                        "availableBalance": {
                          "required": [
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "amount": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "turnoverGroups": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "amount": {
                                    "type": "integer"
                                  },
                                  "currency": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              }
                            }
                          },
                          "type": "object",
                          "nullable": true
                        },
                        "nextClearing": {
                          "required": [
                            "state",
                            "date",
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "state": {
                              "type": "string"
                            },
                            "date": {
                              "type": "integer",
                              "format": "date",
                              "nullable": true
                            },
                            "amount": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "lastClearing": {
                          "required": [
                            "date",
                            "amount",
                            "currency"
                          ],
                          "properties": {
                            "date": {
                              "type": "integer",
                              "format": "date",
                              "nullable": true
                            },
                            "amount": {
                              "type": "integer"
                            },
                            "currency": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object",
                      "title": "Balance",
                      "x-readme-ref-name": "Balance"
                    },
                    {
                      "required": [
                        "_links"
                      ],
                      "properties": {
                        "_links": {
                          "type": "array",
                          "items": {
                            "required": [
                              "href",
                              "rel",
                              "type"
                            ],
                            "properties": {
                              "href": {
                                "description": "",
                                "type": "string",
                                "readOnly": true,
                                "example": "",
                                "nullable": false
                              },
                              "rel": {
                                "description": "",
                                "type": "string",
                                "readOnly": true,
                                "example": "",
                                "nullable": false
                              },
                              "type": {
                                "description": "",
                                "type": "string",
                                "readOnly": true,
                                "example": "",
                                "nullable": false
                              }
                            },
                            "type": "object",
                            "title": "Link",
                            "x-readme-ref-name": "Link"
                          }
                        }
                      },
                      "type": "object"
                    }
                  ]
                },
                "examples": {
                  "success": {
                    "summary": "Get merchant balance",
                    "value": {
                      "balance": {
                        "amount": 9134455,
                        "currency": "EUR"
                      },
                      "invoices": {
                        "amount": 9134455,
                        "currency": "EUR"
                      },
                      "costs": {
                        "amount": 9134455,
                        "currency": "EUR"
                      },
                      "availableBalance": {
                        "amount": 5681,
                        "currency": "EUR",
                        "turnoverGroups": [
                          {
                            "code": "CT-1234-4321",
                            "name": "Standaard",
                            "amount": 5681,
                            "currency": "EUR"
                          }
                        ]
                      },
                      "nextClearing": {
                        "state": "active",
                        "date": "2023-12-12",
                        "amount": 1234,
                        "currency": "EUR"
                      },
                      "lastClearing": {
                        "date": "2023-12-12",
                        "amount": 1234,
                        "currency": "EUR"
                      },
                      "_links": [
                        {
                          "url": "/balance",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/billinglinetypes": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "BillingLineTypes",
        "description": "A Pay. invoice contains multiple billing lines which are grouped. This API returns all groups that we have available, including a description of the billing lines that can appear in that group",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "total",
                    "billingDataGroups",
                    "_links"
                  ],
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "billingDataGroups": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id",
                          "name",
                          "translations",
                          "billingLineTypes",
                          "createdAt",
                          "modifiedAt",
                          "deletedAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "billingLineTypes": {
                            "type": "array",
                            "items": {
                              "required": [
                                "id",
                                "name",
                                "translations",
                                "createdAt",
                                "modifiedAt",
                                "deletedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "translations": {
                                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                                  "type": "object",
                                  "uniqueItems": true,
                                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                                  "nullable": true,
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "LineType",
                              "x-readme-ref-name": "LineType"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "BillingDataGroup",
                        "x-readme-ref-name": "BillingDataGroup"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get billing line types",
                    "value": {
                      "total": 1,
                      "billingDataGroups": [
                        {
                          "id": 1,
                          "name": "Subscription",
                          "translations": {
                            "name": {
                              "nl_NL": "Abonnementsfee",
                              "en_GB": "Subscription"
                            }
                          },
                          "billingLineTypes": [
                            {
                              "id": "1519",
                              "name": "Pioneer",
                              "translations": {
                                "name": {
                                  "nl_NL": "Pioneer",
                                  "en_GB": "Pioneer"
                                }
                              },
                              "createdAt": "2022-03-18T14:35:21+02:00",
                              "modifiedAt": "2022-03-18T15:24:52+02:00",
                              "deletedAt": null
                            }
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "url": "/billinglinetypes",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/billingunittypes": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "BillingUnitTypes",
        "description": "A Pay. invoice contains multiple invoice lines, each invoice line can have his own unit (e.g. per quantity or per percentage). This API returns all units that are in use by Pay.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "total",
                    "billingUnitTypes",
                    "_links"
                  ],
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "billingUnitTypes": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id",
                          "name",
                          "createdAt",
                          "modifiedAt",
                          "deletedAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "BillingUnitType",
                        "x-readme-ref-name": "BillingUnitType"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get billing unit types",
                    "value": {
                      "total": 1,
                      "billingUnitTypes": [
                        {
                          "id": 1,
                          "name": "percentage",
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "url": "/billingUnitTypes",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/boarding/{merchantCode}/ready": {
      "patch": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchant:ToReview",
        "description": "When all documents for a merchant are delivered to Pay and the merchant data is ready to be reviewed by our boarding department you can call this endpoint to notify our boarding department to review your merchant. Note you need to have access to the merchant to call this endpoint",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/categories": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Categories",
        "description": "Get all categories that can be used to onboard new sales locations or \ncheck the Payment methods that are available for a specific category.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The category (code) identifier",
                            "type": "string",
                            "maxLength": 40,
                            "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                            "example": "CY-1234-4321"
                          },
                          "name": {
                            "description": "The category name.",
                            "type": "string",
                            "example": "Digitale diensten gambling (kansspelen)"
                          },
                          "description": {
                            "description": "The category's description.",
                            "type": "string",
                            "example": "Kansspelen"
                          },
                          "sequence": {
                            "description": "The sequence of the category.",
                            "type": "integer"
                          },
                          "available": {
                            "description": "The category's availability.",
                            "type": "boolean"
                          },
                          "initialMCC": {
                            "description": "The initial MCC of the category.",
                            "type": "integer",
                            "example": "General Contractors-Residential and Commercial",
                            "nullable": true
                          },
                          "initialRiskCategory": {
                            "description": "The initial risk category of the category.",
                            "type": "string",
                            "example": "Low risk"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "paymentMethods": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "The payment profile identifier.",
                                  "type": "integer",
                                  "example": "1630"
                                },
                                "name": {
                                  "description": "The name of the payment profile.",
                                  "type": "string",
                                  "example": "Pin (Maestro)"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Category",
                        "x-readme-ref-name": "Category"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get categories",
                    "value": {
                      "total": 1,
                      "categories": [
                        {
                          "code": "CY-####-####",
                          "name": "Overige consumenten aankopen",
                          "description": "Extra's",
                          "sequence": 10,
                          "available": true,
                          "initialMCC": 1234,
                          "initialRiskCategory": "LOW",
                          "translations": {
                            "name": {
                              "en_GB": "Other consumer sales",
                              "it_IT": "Altre vendite",
                              "nl_NL": "Overige consumenten aankopen"
                            },
                            "description": {
                              "en_GB": "Surplus",
                              "it_IT": "Extra",
                              "nl_NL": "Extra's"
                            }
                          },
                          "paymentMethods": [
                            {
                              "id": 1630,
                              "name": "Pin (Maestro)"
                            }
                          ],
                          "createdAt": "2007-10-02T12:11:20+02:00",
                          "modifiedAt": "2021-08-10T17:24:05+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/categories",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clearingaccounts/{clearingAccountCode}": {
      "get": {
        "tags": [
          "ClearingAccounts"
        ],
        "summary": "ClearingAccounts:Get",
        "description": "Get the details of a specific clearing account. Note you need to have access to the merchant if the clearing account is not available under your own merchant registration",
        "parameters": [
          {
            "name": "clearingAccountCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant bank account id of your company starting with BA.",
              "type": "string",
              "example": "BA-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant bank account id of your company starting with BA.",
                      "type": "string",
                      "example": "BA-1234-4321"
                    },
                    "status": {
                      "description": "The current check status of the clearing account.",
                      "type": "string",
                      "example": "NOT_CHECKED"
                    },
                    "method": {
                      "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                      "type": "string",
                      "example": "iban"
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "MerchantBankAccount",
                  "x-readme-ref-name": "MerchantBankAccount"
                },
                "examples": {
                  "success": {
                    "summary": "Get a Clearing Account",
                    "value": {
                      "code": "BA-1234-4321",
                      "status": "NOT_CHECKED",
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      },
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/clearingaccounts/BA-1234-4321",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ClearingAccounts"
        ],
        "summary": "ClearingAccounts:Delete",
        "description": "Deletes a clearing account. Note you need to have access to the merchant if the clearing account is not available under your own merchant registration",
        "parameters": [
          {
            "name": "clearingAccountCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant bank account id of your company starting with BA.",
              "type": "string",
              "example": "BA-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "ClearingAccounts"
        ],
        "summary": "ClearingAccounts:Update",
        "description": "Updates a clearing account under a merchant. You can only update the clearing account if the account is not yet approved by our boarding department. You can also update a clearing account for your merchant, but you need to have access to that merchant.",
        "parameters": [
          {
            "name": "clearingAccountCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant bank account id of your company starting with BA.",
              "type": "string",
              "example": "BA-1234-4321"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "method": {
                    "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                    "type": "string",
                    "example": "iban"
                  },
                  "iban": {
                    "required": [
                      "iban",
                      "bic",
                      "owner"
                    ],
                    "properties": {
                      "iban": {
                        "description": "The International Bank Account Number (IBAN).",
                        "type": "string",
                        "example": "NL69INGB0123456789"
                      },
                      "bic": {
                        "description": "Business Identifier Codes (BIC/SWIFT).",
                        "type": "string",
                        "example": "INGBNL2A"
                      },
                      "owner": {
                        "description": "The owner of the bank account.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John Doe"
                      }
                    },
                    "type": "object",
                    "title": "BankAccount",
                    "x-readme-ref-name": "BankAccount"
                  },
                  "documents": {
                    "required": [
                      "fileName",
                      "files"
                    ],
                    "properties": {
                      "fileName": {
                        "description": "The filename for the document file, which can be a PDF, PNG, GIF or JP(E)G",
                        "type": "string",
                        "example": "proof_for_merchant.jpg"
                      },
                      "files": {
                        "description": "An array of (base64 encoded) content (strings) of the files for the document",
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "example": [
                          "",
                          ""
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "ClearingAccountsUpdatePayload": {
                  "summary": "ClearingAccount Updated with Merchant Code",
                  "value": {
                    "method": "iban",
                    "iban": {
                      "iban": "NL69INGB0123456789",
                      "bic": "INGBNL2A",
                      "owner": "John Doe"
                    },
                    "documents": {
                      "fileName": "proof_for_merchant.jpg",
                      "files": [
                        "",
                        "JVBERi0xLjUKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDMgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nDPQM1Qo5ypUMFAw0DMwslAwtTTVMzI3VbAwMdSzMDNUKErlCtdSyIOoAMKidC6nEC5TMz0LBXNzYz1LC0uFkBQFfTdDBUMjhZC0aBsDQzsjGwMjEGFspwskTexiQ7y4XEO4ArkCFQAX4ReqCmVuZHN0cmVhbQplbmRvYmoKCjMgMCBvYmoKMTA5CmVuZG9iagoKNSAwIG9iago8PC9MZW5ndGggNiAwIFIvRmlsdGVyL0ZsYXRlRGVjb2RlL0xlbmd0aDEgODE1Mj4+CnN0cmVhbQp4nOU4fXAbVX6/tyvZsq1YkmMrJkqipyxO4siW/BFDnMRYsS3Zjp1Y/gIpIbHW0tpSYkuqpDgEjsHXFsgopMmFKzSQOWinZbgbOllj2pobSsxdae/aXjlKmSsHKZm5u+kfJU3KwfXmaOz+3tu144QA007/69rv7e/7+613ncscVcAM0yCCLzopp8uNBgEA/h6AlEWncrSlr2InwpcBhH8cS49PPvMX938CYHgFoPCV8YnjY3989jezAOY4gKjGFTl2uqHZDWCtRBt3xZHQs3C8EPEg4nfGJ3MP/EAYXo14DvHyiVRUBnGAIH4CcfOk/EDaZWhG/9ZvIk6T8qTy629+P4Y4+ivJplPZXAxOLAKs28L46YyS7n1m9E3Eu9D/GaQR/GGXGcEChguiAf4/X8ZTUAFdxhawQJrvN13iS3AHnANY/IhhN/aF3sXf/F9GYdJufwAvwCtwCt6DgzojAEFIwFGkrLzegLeRyq4g7IfvQP4LzL4Ec8jX5CJwmmVy2ysIT8Ms/M1NXoIwCQ9hLH8G75F6+CGOSgo+Jib4OryJVj9G2t7bmRJKcRvj4NgK6vvwrHAS9gg/R+Qc4whewQp/BefJIbScwzxPLWe863NGH4eHcR+EOEwhzC9jy3/9FIoWf4lZPQx74LdhN0ys0HiNPCcWY/+G4Dms6Ruc5l1iFnaJh4U/F4TrTyLyDRjHJRPMXTgl7v6CCv2PL3EYVpFqsQqKbscVtoFl4TdCw+In4p1QDMOL15Zoiz2LvxTlhaRhxLDO2GL4uy/zUfANwyRqw+IvFh5aiBn3GV/Abr0I4Os8sD8cGh4aHOgP9u3b29uzp7urM+DvaG/b7Wu9p2XXzh3N2+++q6m+zuuprdmyeVPVndJGl7Oy3Ga1lK4qKS4yFRYYDaJAoIaqJOJXxSpqC8iSX5K7amuovzLeUVvjlwIRlcpUxZthk9TVxUmSrNIIVTfhTV5Bjqg+lBy7RdKnSfqWJYmV7oJdzIVE1R91SHSO7O8PIXyqQwpT9QqH93LYsIkjqxBxuVCDR8WipX41MBXP+yMYI5kpKW6X2pXi2hqYKS5BsAQhdYuUniFb7iEcELb4d8wIYFrF3GKmfjmmBvtD/g6HyxWurelWS6UOzoJ2blItaFcLuUmaYKHDSTpTM59/Ys4KoxG3OSbF5PtDqiijbl705/OPqza3Wi11qNUP/rwSM1fUGqnDr7qZ1Z6BZT89N1wS1VhllWj+U8B0pCsf3UyRdUpBlfVTYKAqtKtkIORilyOAtc7nAxIN5CN5eW5xelSiVik/Yzbn034sNwRDaGJu8bsnHWrgibBqjcTJjrCeemCgR13dfyCkClUBGpeRgr+tkmu7w2Vblgl+ERuwLFgcrLDLxcpwcs4Ho4io0/0hDacw6ngZfF53WBUijDO/xKkYZpzpJc6yekTC3vYMhvKqoao7Jvmx4idldXoUp+swa4xkVUt/5XBJ+TIbbfaGuSzFqLpjCaoaN2GRUGulAs4NU8lbOVL6K+12xYEONtnKaLOEZpgdv+SP6L9T8Uo0QLHQXW5tEIZCqq8DAZ+sd8w/U+dFDTmCDUt08GaqXimtlktty91lYfkTgyGuoqup5e0qRKK6lur183NF/flIhxYCsyX1h16FxsXLM9uoY7YRtkG4gwnb23HKNvnzodiY6ow4YnjuxmjI4VJ9YexwWAopYTZ2WKHqyw4+HGE+K0OhnkGpp39/aLseiMZg5gxV/lvMSCGHZgYHUDVVmWhIcIhhFLQigQYQkNp24a4WVplwWbHgnMoGt20XDREHLEljGGo19SsduhzDbzJqZOPU3rVkrYChaKe9y+EKu7SrtkZANtUdo4aJFbVriYWPKWSYcD7buziJ1bKSDT0NSYoUluJU9QVDLDdWHl5lvRi85nqvhm7CVhQLywQuZC8hrJhqwO1YWVy1k+PLaNct7O4lNs2bpJ7BPDMu6QYBI+9WgY2wb7vNwZ8F7EBL+OylVjzS/EDnZ3w+dpjjO5gRqTuWlwZDu7g0Pk8edjzIfJVBD+kZaqutwUdb24xETvTP+MiJwf2hV634XnhiKPSyQIT2SFt45k7khV6l+EeDUwVGZUSGUIYwSwOImLi841UfwDTnGjiB49E5ApxmWqIRiM4JGs2qOdrEHflAQI5B4/iWpA1IM2m0aU7j1wywkvmKjT6Tr8hnFlYJjhnCSC8j5bv4HltEYNZMVhHHDGoNcPIcmZ4p8jk0iWmU8GkRnhi+4Xp4f2jWjH+dHXxHR23swnGpjGOz8c+Kn8bYoHwtHM9HwuywgR1bg79EJdI92CbpHgykwKwWS0qbWiK1MXoro7dq9AJGL8QRJXaC6tPY+6BK2AQcCLnwSNK1P3TkrVdYp8L4UMlbf1GLFavC74Y38B20nOzyXSoTSgSTWGE3g4kUiSZTkU0sEiPhIrFMAGEkDGWtdmKxk8t2ctFOTtvJI3YyYidIpJx+5JqdvGUnz3Ne2k767MTJGRpdtZPnOCvF1Xx2UscFwE4+5NxpTq/jlJ2L3I+mdpoz+jjvGqerSz40Bcp1rnFD89zNNOdiaN4lHweXr99aujL6degW+uc4jAetbhs0VvLd1ljpHTl0sNFWRtY02xrr61xNd9ukjRYi2Vw2abOHuIltTQXZ+W7j9YOOdsP5DseGv32g/t0mh+Hp8rfJzoU33y4s+eyIo4m9UBHAbznDw9gDByR9AXN5ObmjwEIM69abV0fCI+aUWag1ExHMVrNQZDSbDQ5HeSTsICNhR5mhJBI2YGcM4uX15Pn1JL2eBNcT33otWYzYDRiw21YGzTzgkYMH3XrMLOpWYtvcxALehPG67m5EyGVz0VbSKLp2vvSS+O9tNP1P75PDTp/PufAUMREh2Ny2+rO3MY9vrW1auPhe6fVPnl+I/dH1S9ZfL3yL5zK0+JHwjvgmbIGwb5ursHztKiiH6q2rXOKaNRuCYccaq1gSDBeK9umtJL2VRLaS4FZCt5ILW8nIVtK3lSz1AVobWfCNPPhmDBq3RowawyblBdLGTZubGtfYGxuatnmJR2jadldjw5oKzETaWFBRbl+zQRTemfnTwLfraut7HvjeubByf8O3z4w/693alOkf3rvvyf2tEjE9cWZ92b/+TscLD25b7+qIBr522vmjSW+wo3nf2gZP+708n3LMp9bwdbBDp29zcWlp4WpRXFNpMJeYg+GiwhJLOYCtPwz25yqJWklaK4m3kqWQWZqWxkY+Lxh+WXNDAyu6ceOmJpvUhEWuaKyQbOWYw90VpYTsi4w89LDS+pOf7KzbMSj9bnlmXHiydvO77w5df2R3m3V3pZPHg6/sd5x74sVowYhl16fg1L7hftDx43+48Ya++BE/0ewDT9BJqFfoWvDDfctC5JbXemNBM07hz6AK105xPQwJzdg4dn2PbCFnyD9zDSNU65oCWPHb5n4Evi/+NYicuoEkl+3eu+yDoOS9y1qF+B2mwSLO+6QOG1DmhA4bYRV+k2pwAX4b/4kOF8KD+J2qwSZ8Xnl0uAhKSZsOF5MkCepwCawTXl/+z4NH+KkOr4Im0aTDpbBWbGHRG9gX00vifTpMgBpEHRag1CDpsAh3Gep12IAy4zpshLWGx3W4ADYY/lCHC+ETw0UdNsEW46wOF8E64/s6XCx8YPxPHS6B7aZ3dNgM9xeV6PAqOFy05KsUthW93ZEYT+QSDyoxGpNzMo2m0sczifF4jm6JVtOGuvo62plKjU8otD2VSacyci6RSnqK228Va6ADaKJLztXQ7mTU05sYVTRZOqhkEmMDyvjRCTmzOxtVkjElQ2vprRK34vcqmSxDGjz1nrobzFtlE1n8istl5JgyKWeO0NTYzXHQjDKeyOaUDBITSTrsGfTQoJxTkjkqJ2N0aFmxb2wsEVU4MapkcjIKp3JxjPTw0UwiG0tEmbesZzmBFdUYzClTCt0r53JKNpVsk7PoCyMbSiRT2Rp6LJ6IxukxOUtjSjYxnkTm6HF6sw5Froy5JJOpKTQ5pdRg3GMZJRtPJMdplqWsa9NcXM6xpCeVXCYRlScmjmPLJtOoNYo9OpbIxdHxpJKl+5RjdCA1KSe/49FCwdqMYU1pYjKdSU3xGGuz0YyiJNGZHJNHExOJHFqLyxk5ihXDsiWiWV4RLARNy8la/9FMKq1gpPd19t4QxAC1amZTE1PomUknFSXGPGLYU8oEKqHjiVTqCMtnLJXBQGO5eO2KyMdSyRyqpqgci2HiWK1U9Ogk6xOWObcUnBzNpJCXnpBzaGUy64nncukdXu+xY8c8st6aKHbGg5a9X8bLHU8rej8yzMrkRC+2P8lad5T3lyUx2N1L+9JYnwAGR3WBGro0mfWeet0FljGRzmU92cSEJ5UZ9/YFeqEDEjCOK4frQVAgBhSXjLiMUBRSkIbjkOFScaRS/EMXxYcihQaog3pcFDpRKoX8CdSn0I5wBrXYLnO7KUiCB4o558utNSA0oEfRxbVrEOpG/Sha6EW9UeSutEthkFMS+JhlmuNwFOOQkbIbsqiloEyMS1CoxfVVNr6Kfy+HssucBoyrHlfdbTW/ym4CLVFe6RznsEgnefRHkJZCvS+rB0U5hXcvixyFYzFuldkeRolBLhXkmqwSOe4tyaWGbuOxDz2OoX6Ud3JJMspts4nQLKcQjus1PYz1zvAIYlxvKbcsev58B24/G4M8uinucy+nMzzLeW2IZ/W8tJoN8ShSSGW1OIaRML9xDsu8njGuzWYsqWuO4tTRL/VDdV1Z70uS+5jSo2Q6NXq9x/ie5X6T6IPy+LQu3+yb8jrJvOpapyeRm+OyUaRP4M9x/ZRNYlU0X6P6OTrGT2Vcz3iS26WwD+/H+FSkeN+Sro28xzeqos3NmD6nlOumEU7xLJbqWMt7wzJReKQMkvnJH0WNCe5biy3Op0PmvVX0Xud4Bkv1iumZsqjTnFILfj4X7Lwrek3vw+dE720tahVcOZusJxM83uwK20kebWw5R63aTGpC96RlPMGfR0eW+zPG502raIxbq/2Cmo/x2uR0rykeUQx/tI5rs5VC3aO8H9p50qY597nKyby+KV0vzZ9KOT2WSX4+4nwC07ADXyy9GB378fA5XHlqovqZ8egxe//XeiyuNK/gyvORWY5lEmPs1U9/cvnUHV1xfpc6MYjPoF7+vEjr8xPQK0dvscBOza3PzHr+zLw5C20aE4jneDxZXksPz2Ec+X3ooZe9Q2tv/I9iSLe5ZoqCu0eJAoTEyTisBieJwD4yAsNkN7QQH959yGvDezvi7O4hLTCNci1IvwfxXUjfic9OJ+6tuPpwncZlwKVJ1KGEF+9eHa9FvAY13sKd8MWorUhl9z2Id+G9U78HkO7Hu1/HuxHHO0RIIb6Et/L9IjH4Zsnl6+St64ReJ498RoKfkemPz3ws/Me1aueFaxevCX1XR65euCrWXSWWq8QEV6xXglciV9JXnr9SUGz5iJjh34jtZ5e3Oz9suTT8Ly0fDMMlzOxS3aXgpelL6iXjJSIOfyDandZ5Ol83n56fnv/x/OX5a/Om6dfPvC785Wtep+U152uCc7Zv9pFZMfIisbzofFEIPht5VjhznljOO897z4vPnPM4z3VucD791Gbn5aeuPSXMLc7PPrXKFniN9JFeaMEa7psVF50XdleQvZiWBXcnLi+uPlwpXKdx4TcPijtxeUmvb7s48vuk5KzjrPvsQ2dPnjWmH5t+7Mxj4vSjZx4VLkxdnBKywWpnKul2Jju3Ou9orBwubBSHC9ANevd1j1ZtCURGfM4RFDqwv865v7PaubqxbNiICRtQ0CI6xVaxT0yJp8WLYqFpILjB2Y/rcvBaUPAFi8wBS5+zz9snzi1e9ik9LrS2J71neo/YHah2dnVud1o6nZ3ezrc6P+y82lkw0kmew9/AhcDFgOgLVHsDvsAGV2Bdl2PY3lgxbCOWYWujZVgg2OhGGPZaFi2CxTJiecQiWqAVhGk7MZI5cmZmaNDt7pkrXBzoUU3BAyo5oVYNst3Xv18tOKHC8P4DoRlCfi/86KlT0La+R20YDKmR9eEeNYaAjwHTCFjXz9ihLZzN5tz8Im43wkdxB/dRNxIPZTUqLPPBnSVZfERluRJxMwENJ7i7GQ8JTI+g9qEssI0x3ZoS087q5riytnGg8tB/AzKCFaoKZW5kc3RyZWFtCmVuZG9iagoKNiAwIG9iago0NjE3CmVuZG9iagoKNyAwIG9iago8PC9UeXBlL0ZvbnREZXNjcmlwdG9yL0ZvbnROYW1lL0JBQUFBQStMaWJlcmF0aW9uU2VyaWYKL0ZsYWdzIDQKL0ZvbnRCQm94Wy01NDMgLTMwMyAxMjc3IDk4MV0vSXRhbGljQW5nbGUgMAovQXNjZW50IDg5MQovRGVzY2VudCAtMjE2Ci9DYXBIZWlnaHQgOTgxCi9TdGVtViA4MAovRm9udEZpbGUyIDUgMCBSCj4+CmVuZG9iagoKOCAwIG9iago8PC9MZW5ndGggMjQwL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nF1Qu2rEMBDs9RVbXopDsk9HGmMIFw5c5EGcfIAsrR1BLAlZLvz3WcmXBFJIzDA7w+zyS/fYOZv4a/S6xwSjdSbi4teoEQacrGNVDcbqdGPl17MKjJO335aEc+dG3zSMv5G2pLjB4cH4Ae8Yf4kGo3UTHD4uPfF+DeELZ3QJBGtbMDhSzpMKz2pGXlzHzpBs03Yky9/A+xYQ6sKrvYr2BpegNEblJmSNEC0012vL0Jl/mtwdw6g/VaTJiiaFOMuWcF2wPGd8Kvj+lLHcsSx5N2dOzqv/NAa9xkhty31KzVzQOvw9YfAhu8r7BrbPdGAKZW5kc3RyZWFtCmVuZG9iagoKOSAwIG9iago8PC9UeXBlL0ZvbnQvU3VidHlwZS9UcnVlVHlwZS9CYXNlRm9udC9CQUFBQUErTGliZXJhdGlvblNlcmlmCi9GaXJzdENoYXIgMAovTGFzdENoYXIgNAovV2lkdGhzWzc3NyA2MTAgNjEwIDM4OSAyNzcgXQovRm9udERlc2NyaXB0b3IgNyAwIFIKL1RvVW5pY29kZSA4IDAgUgo+PgplbmRvYmoKCjEwIDAgb2JqCjw8L0YxIDkgMCBSCj4+CmVuZG9iagoKMTEgMCBvYmoKPDwvRm9udCAxMCAwIFIKL1Byb2NTZXRbL1BERi9UZXh0XQo+PgplbmRvYmoKCjEgMCBvYmoKPDwvVHlwZS9QYWdlL1BhcmVudCA0IDAgUi9SZXNvdXJjZXMgMTEgMCBSL01lZGlhQm94WzAgMCA1OTUuMzAzOTM3MDA3ODc0IDg0MS44ODk3NjM3Nzk1MjhdL0dyb3VwPDwvUy9UcmFuc3BhcmVuY3kvQ1MvRGV2aWNlUkdCL0kgdHJ1ZT4+L0NvbnRlbnRzIDIgMCBSPj4KZW5kb2JqCgo0IDAgb2JqCjw8L1R5cGUvUGFnZXMKL1Jlc291cmNlcyAxMSAwIFIKL01lZGlhQm94WyAwIDAgNTk1IDg0MSBdCi9LaWRzWyAxIDAgUiBdCi9Db3VudCAxPj4KZW5kb2JqCgoxMiAwIG9iago8PC9UeXBlL0NhdGFsb2cvUGFnZXMgNCAwIFIKL09wZW5BY3Rpb25bMSAwIFIgL1hZWiBudWxsIG51bGwgMF0KL0xhbmcoZW4tVVMpCj4+CmVuZG9iagoKMTMgMCBvYmoKPDwvQ3JlYXRvcjxGRUZGMDA1NzAwNzIwMDY5MDA3NDAwNjUwMDcyPgovUHJvZHVjZXI8RkVGRjAwNEMwMDY5MDA2MjAwNzIwMDY1MDA0RjAwNjYwMDY2MDA2OTAwNjMwMDY1MDAyMDAwMzYwMDJFMDAzND4KL0NyZWF0aW9uRGF0ZShEOjIwMjMwMTEwMTUzNTIzKzAxJzAwJyk+PgplbmRvYmoKCnhyZWYKMCAxNAowMDAwMDAwMDAwIDY1NTM1IGYgCjAwMDAwMDU3MDcgMDAwMDAgbiAKMDAwMDAwMDAxOSAwMDAwMCBuIAowMDAwMDAwMTk5IDAwMDAwIG4gCjAwMDAwMDU4NzYgMDAwMDAgbiAKMDAwMDAwMDIxOSAwMDAwMCBuIAowMDAwMDA0OTIwIDAwMDAwIG4gCjAwMDAwMDQ5NDEgMDAwMDAgbiAKMDAwMDAwNTEzNiAwMDAwMCBuIAowMDAwMDA1NDQ1IDAwMDAwIG4gCjAwMDAwMDU2MjAgMDAwMDAgbiAKMDAwMDAwNTY1MiAwMDAwMCBuIAowMDAwMDA1OTc1IDAwMDAwIG4gCjAwMDAwMDYwNzIgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDE0L1Jvb3QgMTIgMCBSCi9JbmZvIDEzIDAgUgovSUQgWyA8RUNDNTE3RDJDRTgzQzNEOEFGRERFNjE1RjY1QTRBMDc+CjxFQ0M1MTdEMkNFODNDM0Q4QUZEREU2MTVGNjVBNEEwNz4gXQovRG9jQ2hlY2tzdW0gLzg2MjA2MzEwNjExREE0RjBDMUI5MUY4QzhCOTA3NEJBCj4+CnN0YXJ0eHJlZgo2MjQ3CiUlRU9GCg=="
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant bank account id of your company starting with BA.",
                      "type": "string",
                      "example": "BA-1234-4321"
                    },
                    "status": {
                      "description": "The current check status of the clearing account.",
                      "type": "string",
                      "example": "NOT_CHECKED"
                    },
                    "method": {
                      "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                      "type": "string",
                      "example": "iban"
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "MerchantBankAccount",
                  "x-readme-ref-name": "MerchantBankAccount"
                },
                "examples": {
                  "updated": {
                    "summary": "ClearingAccount Updated",
                    "value": {
                      "code": "BA-1234-4321",
                      "status": "NOT_CHECKED",
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      },
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/clearingaccounts",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://tools.ietf.org/html/rfc2616#section-10",
                      "title": "An error occurred",
                      "detail": "documents: Error adding file",
                      "violations": [
                        {
                          "propertyPath": "documents",
                          "message": "Error adding file",
                          "code": "PAY-3000"
                        },
                        {
                          "propertyPath": "clearingAccount",
                          "message": "Invalid clearing code",
                          "code": "PAY-2827"
                        },
                        {
                          "propertyPath": "iban",
                          "message": "Invalid IBAN",
                          "code": "PAY-2813"
                        },
                        {
                          "propertyPath": "bic",
                          "message": "Invalid BIC code",
                          "code": "PAY-2840"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "",
                    "value": {
                      "type": "https://tools.ietf.org/html/rfc2616#section-10",
                      "title": "An error occurred",
                      "detail": "Error adding file",
                      "violations": [
                        {
                          "propertyPath": "documents",
                          "message": "Error adding file",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clearingaccounts": {
      "get": {
        "tags": [
          "ClearingAccounts"
        ],
        "summary": "ClearingAccounts:Browse",
        "description": "Get all clearing accounts. If you do not supply a merchantCode we return the clearing accounts that are available under your own merchant registration. If you supply a merchantCode you need to have access to that merchant",
        "parameters": [
          {
            "name": "merchant",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "clearingAccounts": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The merchant bank account id of your company starting with BA.",
                            "type": "string",
                            "example": "BA-1234-4321"
                          },
                          "status": {
                            "description": "The current check status of the clearing account.",
                            "type": "string",
                            "example": "NOT_CHECKED"
                          },
                          "method": {
                            "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                            "type": "string",
                            "example": "iban"
                          },
                          "iban": {
                            "required": [
                              "iban",
                              "bic",
                              "owner"
                            ],
                            "properties": {
                              "iban": {
                                "description": "The International Bank Account Number (IBAN).",
                                "type": "string",
                                "example": "NL69INGB0123456789"
                              },
                              "bic": {
                                "description": "Business Identifier Codes (BIC/SWIFT).",
                                "type": "string",
                                "example": "INGBNL2A"
                              },
                              "owner": {
                                "description": "The owner of the bank account.",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John Doe"
                              }
                            },
                            "type": "object",
                            "title": "BankAccount",
                            "x-readme-ref-name": "BankAccount"
                          },
                          "merchant": {
                            "required": [
                              "code",
                              "name",
                              "status"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "name": {
                                "description": "The name of your merchant.",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 2,
                                "example": "CompanyName"
                              },
                              "status": {
                                "description": "Merchant state",
                                "type": "string",
                                "example": "ACTIVE"
                              }
                            },
                            "type": "object",
                            "title": "MerchantMinimal",
                            "x-readme-ref-name": "MerchantMinimal"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "MerchantBankAccount",
                        "x-readme-ref-name": "MerchantBankAccount"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Browse Clearing Accounts",
                    "value": {
                      "total": 1,
                      "clearingAccounts": [
                        {
                          "code": "BA-1234-4321",
                          "status": "NOT_CHECKED",
                          "method": "iban",
                          "iban": {
                            "iban": "NL69INGB0123456789",
                            "bic": "INGBNL2A",
                            "owner": "John Doe"
                          },
                          "merchant": {
                            "code": "M-1234-4321",
                            "status": "ACTIVE",
                            "name": "CompanyName"
                          },
                          "createdAt": "2016-06-04T08:15:00+01:00",
                          "createdBy": "A-1234-4321",
                          "modifiedAt": null,
                          "modifiedBy": null,
                          "deletedAt": null,
                          "deletedBy": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/clearingaccounts",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ClearingAccounts"
        ],
        "summary": "ClearingAccounts:Create",
        "description": "Creates a new clearing account for a merchant. The clearing accounts needs to be a business clearing account, private accounts are not accepted. You can also supply a merchantCode. If a merchantCode is supplied then you need to have access to that merchant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "merchantCode": {
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "clearingAccount": {
                    "required": [
                      "method",
                      "iban"
                    ],
                    "properties": {
                      "method": {
                        "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                        "type": "string",
                        "example": "iban"
                      },
                      "iban": {
                        "required": [
                          "iban",
                          "bic",
                          "owner"
                        ],
                        "properties": {
                          "iban": {
                            "description": "The International Bank Account Number (IBAN).",
                            "type": "string",
                            "example": "NL69INGB0123456789"
                          },
                          "bic": {
                            "description": "Business Identifier Codes (BIC/SWIFT).",
                            "type": "string",
                            "example": "INGBNL2A"
                          },
                          "owner": {
                            "description": "The owner of the bank account.",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "John Doe"
                          }
                        },
                        "type": "object",
                        "title": "BankAccount",
                        "x-readme-ref-name": "BankAccount"
                      },
                      "documents": {
                        "required": [
                          "fileName",
                          "files"
                        ],
                        "properties": {
                          "fileName": {
                            "description": "The filename for the document file, which can be a PDF, PNG, GIF or JP(E)G",
                            "type": "string",
                            "example": "proof_for_merchant.jpg"
                          },
                          "files": {
                            "description": "An array of (base64 encoded) content (strings) of the files for the document",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "",
                              ""
                            ]
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "createWithMerchantCode": {
                  "summary": "ClearingAccount Create with Merchant Code",
                  "value": {
                    "merchantCode": "M-1234-4321",
                    "clearingAccount": {
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      },
                      "documents": {
                        "fileName": "proof_for_merchant.jpg",
                        "files": [
                          "",
                          ""
                        ]
                      }
                    }
                  }
                },
                "createWithoutMerchantCode": {
                  "summary": "ClearingAccount Create without Merchant Code",
                  "value": {
                    "clearingAccount": {
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      },
                      "documents": {
                        "fileName": "proof_for_merchant.jpg",
                        "files": [
                          "",
                          ""
                        ]
                      }
                    }
                  }
                },
                "createWithoutDocuments": {
                  "summary": "ClearingAccount Create without documents",
                  "value": {
                    "merchantCode": "M-1234-4321",
                    "clearingAccount": {
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant bank account id of your company starting with BA.",
                      "type": "string",
                      "example": "BA-1234-4321"
                    },
                    "status": {
                      "description": "The current check status of the clearing account.",
                      "type": "string",
                      "example": "NOT_CHECKED"
                    },
                    "method": {
                      "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                      "type": "string",
                      "example": "iban"
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "MerchantBankAccount",
                  "x-readme-ref-name": "MerchantBankAccount"
                },
                "examples": {
                  "created": {
                    "summary": "ClearingAccount Created",
                    "value": {
                      "code": "BA-1234-4321",
                      "status": "NOT_CHECKED",
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      },
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/clearingaccounts",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occured",
                      "detail": "clearingAccount.method: Not equal\\nclearingAccount.iban.iban: Invalid IBAN\\nclearingAccount.iban.bic: Invalid BIC code",
                      "violations": [
                        {
                          "propertyPath": "clearingAccount.method",
                          "message": "Not equal",
                          "code": "PAY-2827"
                        },
                        {
                          "propertyPath": "clearingAccount.iban.iban",
                          "message": "Invalid IBAN",
                          "code": "PAY-2813"
                        },
                        {
                          "propertyPath": "clearingAccount.iban.bic",
                          "message": "Invalid BIC code",
                          "code": "PAY-2840"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occured",
                      "detail": "Error adding file",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Error adding file",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clearingaccounts/{clearingAccountCode}/undelete": {
      "post": {
        "tags": [
          "ClearingAccounts"
        ],
        "summary": "ClearingAccounts:Undelete",
        "description": "Undelete a clearing account that was recently deleted. This can only be done within a 15 minute time window.",
        "parameters": [
          {
            "name": "clearingAccountCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant bank account id of your company starting with BA.",
              "type": "string",
              "example": "BA-1234-4321"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant bank account id of your company starting with BA.",
                      "type": "string",
                      "example": "BA-1234-4321"
                    },
                    "status": {
                      "description": "The current check status of the clearing account.",
                      "type": "string",
                      "example": "NOT_CHECKED"
                    },
                    "method": {
                      "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                      "type": "string",
                      "example": "iban"
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "MerchantBankAccount",
                  "x-readme-ref-name": "MerchantBankAccount"
                },
                "examples": {
                  "restored": {
                    "summary": "ClearingAccount Undeleted",
                    "value": {
                      "code": "BA-1234-4321",
                      "status": "NOT_CHECKED",
                      "method": "iban",
                      "iban": {
                        "iban": "NL69INGB0123456789",
                        "bic": "INGBNL2A",
                        "owner": "John Doe"
                      },
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/clearingaccounts/BA-1234-4321/undelete",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "clearingAccountCode: The clearing account can not be found.",
                      "violations": [
                        {
                          "propertyPath": "clearingAccountCode",
                          "message": "The clearing account can not be found.",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/clearinglines": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Clearing:Lines",
        "description": "A Pay. clearing contains multiple clearing lines. This API returns all clearing lines for a specified period. If you are a partner and you have rights to your merchants you can retrieve the clearing lines also for your merchants",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the returned records. If not supplied we will default to 100 records",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Indicate which page you want in your result set. If not supplied we will default to page 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Indicate in which period the transactions are done",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gt": {
                  "description": "Get results that are greater than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gte": {
                  "description": "Get results that are greater than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lt": {
                  "description": "Get results that are less than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lte": {
                  "description": "Get results that are less than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "processedDate",
            "in": "query",
            "description": "Indicate for which period you want to retrieve the clearing lines",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gt": {
                  "description": "Get results that are greater than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gte": {
                  "description": "Get results that are greater than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lt": {
                  "description": "Get results that are less than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lte": {
                  "description": "Get results that are less than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "merchant",
            "in": "query",
            "description": "If you are a partner you can indicate for which merchants you want to retrieve the clearing lines. If you do not supply a merchant we will return the clearing lines for all your merchants",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "example": "M-1234-4321"
                },
                "neq": {
                  "description": "Get results that do not equal the given value",
                  "type": "string",
                  "example": "M-1234-4321"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "clearingLineType",
            "in": "query",
            "description": "You can indicate which lineType you want to retrieve. See for more information the BillingLineTypes API (https://developer.pay.nl/reference/get_billinglinetypes)",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": 10
                }
              },
              "type": "object"
            }
          },
          {
            "name": "turnoverGroup",
            "in": "query",
            "description": "You can indicate for which turnover group you want to retrieve the clearing lines. If not supplied we will return the clearing lines for all turnover groups",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": "CT-1234-4321"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "A clearing line has a state. By providing a state you will only retrieve clearing lines in that state",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "enum": [
                    "PROCESSED",
                    "CLEARED",
                    "SETTLED"
                  ],
                  "example": "PROCESSED"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "clearingID",
            "in": "query",
            "description": "A clearing line is available on a clearing. By providing a clearing ID you will only retrieve clearing lines for that clearing",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": "CLEARING-12345"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "total",
                    "count",
                    "clearingLines",
                    "_links"
                  ],
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "clearingLines": {
                      "type": "array",
                      "items": {
                        "required": [
                          "code",
                          "merchant",
                          "turnoverGroup",
                          "clearingLineType",
                          "unitType",
                          "amount",
                          "valueDate",
                          "clearingDate",
                          "settlementDate",
                          "processedDate",
                          "state",
                          "clearingID"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "merchant": {
                            "required": [
                              "code",
                              "contractPackage"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "contractPackage": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "turnoverGroup": {
                            "required": [
                              "code",
                              "name"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "nullable": true
                          },
                          "clearingLineType": {
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "nullable": true
                          },
                          "unitType": {
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "nullable": true
                          },
                          "amount": {
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "description": "The amount in cents.",
                                "type": "integer",
                                "minimum": 1,
                                "example": 10
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object",
                            "title": "Amount",
                            "x-readme-ref-name": "Amount"
                          },
                          "valueDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "clearingDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "settlementDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "processedDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "PROCESSED",
                              "CLEARED",
                              "SETTLED"
                            ]
                          },
                          "clearingID": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "ClearingLine",
                        "x-readme-ref-name": "ClearingLine"
                      }
                    },
                    "_links": {
                      "properties": {
                        "first": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "previous": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "next": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "last": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "rel": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "type": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get clearing lines",
                    "value": {
                      "total": 1,
                      "clearingLines": [
                        {
                          "code": "FT-1234-4321-1234",
                          "merchant": {
                            "code": "M-1234-4321",
                            "contractPackage": "Corporate"
                          },
                          "turnoverGroup": {
                            "code": "CT-1234-4321",
                            "name": "Ecommerce"
                          },
                          "clearingLineType": {
                            "id": 706,
                            "name": "Visa Mastercard"
                          },
                          "unitType": {
                            "id": 12,
                            "name": "percentage"
                          },
                          "amount": {
                            "value": 20,
                            "currency": "EUR"
                          },
                          "valueDate": "2021-10-04",
                          "clearingDate": "2021-10-09",
                          "settlementDate": null,
                          "processedDate": "2021-10-09",
                          "state": "CLEARED",
                          "clearingID": "CLEARING-20222997580"
                        }
                      ],
                      "_links": {
                        "self": {
                          "href": "/clearinglines?limit=1&page=1",
                          "rel": "self",
                          "type": "GET"
                        },
                        "first": {
                          "href": "/clearinglines?limit=1&page=1"
                        },
                        "previous": {
                          "href": "/clearinglines?limit=1&page=1"
                        },
                        "next": {
                          "href": "/clearinglines?limit=1&page=2"
                        },
                        "last": {
                          "href": "/clearinglines?limit=1&page=4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/clearinglinetypes": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "ClearingLineTypes",
        "description": "A Pay. clearing contains multiple clearing lines which are grouped. This API returns all groups that we have available, including a description of the clearing lines that can appear in that group",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "total",
                    "clearingDataGroups",
                    "_links"
                  ],
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "clearingDataGroups": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id",
                          "name",
                          "translations",
                          "clearingLineTypes",
                          "createdAt",
                          "modifiedAt",
                          "deletedAt"
                        ],
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "clearingLineTypes": {
                            "type": "array",
                            "items": {
                              "required": [
                                "id",
                                "name",
                                "translations",
                                "createdAt",
                                "modifiedAt",
                                "deletedAt"
                              ],
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "translations": {
                                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                                  "type": "object",
                                  "uniqueItems": true,
                                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                                  "nullable": true,
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "LineType",
                              "x-readme-ref-name": "LineType"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "ClearingDataGroup",
                        "x-readme-ref-name": "ClearingDataGroup"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get clearing line types",
                    "value": {
                      "total": 1,
                      "clearingDataGroups": [
                        {
                          "id": 1,
                          "name": "Transaction processing",
                          "translations": {
                            "name": {
                              "nl_NL": "Transactionverwerking",
                              "en_GB": "Transaction processing"
                            }
                          },
                          "clearingLineTypes": [
                            {
                              "id": "10",
                              "name": "iDeal",
                              "translations": {
                                "name": {
                                  "nl_NL": "iDeal",
                                  "en_GB": "iDeal"
                                }
                              },
                              "createdAt": "2022-03-18T14:35:21+02:00",
                              "modifiedAt": "2022-03-18T15:24:52+02:00",
                              "deletedAt": null
                            }
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "url": "/clearinglinetypes",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/companytypes": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "CompanyTypes",
        "description": "Get all company types",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "companyTypes": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the company type.",
                            "type": "string"
                          },
                          "countryCode": {
                            "description": "Country where company type exists for.",
                            "type": "string"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "CompanyType",
                        "x-readme-ref-name": "CompanyType"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get companytypes",
                    "value": {
                      "total": 1,
                      "companyTypes": [
                        {
                          "id": 1,
                          "name": "Private Limited Liability Company",
                          "countryCode": "NL",
                          "translations": {
                            "name": {
                              "nl_NL": "BV (Besloten Vennootschap)"
                            }
                          },
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/companytypes",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/contactmethods/{contactMethodCode}": {
      "get": {
        "tags": [
          "ContactMethods"
        ],
        "summary": "ContactMethods:Get",
        "description": "Get the details of a specific contact method. Note you need to have access to the merchant if the contact method is not available under your own merchant registration",
        "parameters": [
          {
            "name": "contactMethodCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The contact method ID of your company starting with CM.",
              "type": "string",
              "example": "CM-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "description": "The contact method ID of your company starting with CM.",
                          "type": "string",
                          "example": "CM-1234-4321"
                        },
                        "type": {
                          "description": "The type of contact method.",
                          "type": "string",
                          "enum": [
                            "email",
                            "email_support",
                            "phone",
                            "phone_helpdesk",
                            "phone_off_hours",
                            "url",
                            "email_msnskype"
                          ],
                          "example": "The type of contact method."
                        },
                        "value": {
                          "description": "The value of the contact method.",
                          "type": "string",
                          "example": "088-88 666 22"
                        },
                        "description": {
                          "description": "The description of the contact method.",
                          "type": "string"
                        },
                        "public": {
                          "description": "Is the contact method public accessible",
                          "type": "boolean",
                          "example": "true"
                        },
                        "notifications": {
                          "description": "Does the contact method needs to receive notifications",
                          "type": "boolean",
                          "example": "false"
                        }
                      },
                      "type": "object",
                      "title": "ContactMethod",
                      "x-readme-ref-name": "ContactMethod"
                    },
                    {
                      "properties": {
                        "merchant": {
                          "required": [
                            "code",
                            "name",
                            "status"
                          ],
                          "properties": {
                            "code": {
                              "description": "The merchant id of your company starting with M.",
                              "type": "string",
                              "example": "M-1234-4321"
                            },
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 2,
                              "example": "CompanyName"
                            },
                            "status": {
                              "description": "Merchant state",
                              "type": "string",
                              "example": "ACTIVE"
                            }
                          },
                          "type": "object",
                          "title": "MerchantMinimal",
                          "x-readme-ref-name": "MerchantMinimal"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "MerchantContactMethod",
                  "x-readme-ref-name": "MerchantContactMethod"
                },
                "examples": {
                  "success": {
                    "summary": "ContactMethod",
                    "value": {
                      "code": "CM-1234-4321",
                      "type": "phone_helpdesk",
                      "value": "088-88 666 22",
                      "description": "Support desk",
                      "public": "true",
                      "notifications": "false",
                      "merchant": {
                        "code": "M-1234-4321",
                        "name": "CompanyName",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": "2016-06-04T08:15:00+01:00",
                      "modifiedBy": "A-1234-4321",
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/contactmethods/CM-1234-4321",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "contactMethodCode: {}",
                      "violations": [
                        {
                          "propertyPath": "contactMethodCode",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "ContactMethods"
        ],
        "summary": "ContactMethods:Delete",
        "description": "Deletes a contact method. Note you need to have access to the merchant if the contact method is not available under your own merchant registration",
        "parameters": [
          {
            "name": "contactMethodCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The contact method ID of your company starting with CM.",
              "type": "string",
              "example": "CM-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "contactMethodCode: {}",
                      "violations": [
                        {
                          "propertyPath": "contactMethodCode",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "ContactMethods"
        ],
        "summary": "ContactMethods:Update",
        "description": "Updates a contact method for a merchant. All fields for the request are optional. Note you need to have access to the merchant if the contact method that you want to update is not available under your own merchant registration",
        "parameters": [
          {
            "name": "contactMethodCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The contact method ID of your company starting with CM.",
              "type": "string",
              "example": "CM-1234-4321"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "type": {
                    "description": "The type of contact method.",
                    "type": "string",
                    "enum": [
                      "email",
                      "email_support",
                      "phone",
                      "phone_helpdesk",
                      "phone_off_hours",
                      "url",
                      "email_msnskype"
                    ],
                    "example": "The type of contact method."
                  },
                  "value": {
                    "description": "The value of the contact method.",
                    "type": "string",
                    "example": "088-88 666 22"
                  },
                  "description": {
                    "description": "The description of the contact method.",
                    "type": "string"
                  },
                  "public": {
                    "description": "Is the contact method public accessible",
                    "type": "boolean",
                    "example": "true"
                  },
                  "notifications": {
                    "description": "Does the contact method needs to receive notifications",
                    "type": "boolean",
                    "example": "false"
                  }
                },
                "type": "object"
              },
              "examples": {
                "updateTypeAndValue": {
                  "summary": "Update ContactMethod type and value",
                  "value": {
                    "type": "phone_helpdesk",
                    "value": "088-88 666 22"
                  }
                },
                "setPublic": {
                  "summary": "Update ContactMethod set public",
                  "value": {
                    "public": "true"
                  }
                },
                "enableNotifications": {
                  "summary": "Update ContactMethod enable notifications",
                  "value": {
                    "notifications": true
                  }
                },
                "full": {
                  "summary": "Update ContactMethod full",
                  "value": {
                    "type": "phone_helpdesk",
                    "value": "088-88 666 22",
                    "description": "Support desk",
                    "public": "true",
                    "notifications": "false"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "description": "The contact method ID of your company starting with CM.",
                          "type": "string",
                          "example": "CM-1234-4321"
                        },
                        "type": {
                          "description": "The type of contact method.",
                          "type": "string",
                          "enum": [
                            "email",
                            "email_support",
                            "phone",
                            "phone_helpdesk",
                            "phone_off_hours",
                            "url",
                            "email_msnskype"
                          ],
                          "example": "The type of contact method."
                        },
                        "value": {
                          "description": "The value of the contact method.",
                          "type": "string",
                          "example": "088-88 666 22"
                        },
                        "description": {
                          "description": "The description of the contact method.",
                          "type": "string"
                        },
                        "public": {
                          "description": "Is the contact method public accessible",
                          "type": "boolean",
                          "example": "true"
                        },
                        "notifications": {
                          "description": "Does the contact method needs to receive notifications",
                          "type": "boolean",
                          "example": "false"
                        }
                      },
                      "type": "object",
                      "title": "ContactMethod",
                      "x-readme-ref-name": "ContactMethod"
                    },
                    {
                      "properties": {
                        "merchant": {
                          "required": [
                            "code",
                            "name",
                            "status"
                          ],
                          "properties": {
                            "code": {
                              "description": "The merchant id of your company starting with M.",
                              "type": "string",
                              "example": "M-1234-4321"
                            },
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 2,
                              "example": "CompanyName"
                            },
                            "status": {
                              "description": "Merchant state",
                              "type": "string",
                              "example": "ACTIVE"
                            }
                          },
                          "type": "object",
                          "title": "MerchantMinimal",
                          "x-readme-ref-name": "MerchantMinimal"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "MerchantContactMethod",
                  "x-readme-ref-name": "MerchantContactMethod"
                },
                "examples": {
                  "success": {
                    "summary": "ContactMethod Updated",
                    "value": {
                      "code": "CM-1234-4321",
                      "type": "phone_helpdesk",
                      "value": "088-88 666 22",
                      "description": "Support desk",
                      "public": "true",
                      "notifications": "false",
                      "merchant": {
                        "code": "M-1234-4321",
                        "name": "CompanyName",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": "2016-06-04T08:15:00+01:00",
                      "modifiedBy": "A-1234-4321",
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/contactmethods/CM-1234-4321",
                          "rel": "self",
                          "type": "PATCH"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "ContactMethod Update containing errors",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "type: Not one of the allowed values\\ndescription: Invalid string\\npublic: Not a boolean",
                      "violations": [
                        {
                          "propertyPath": "type",
                          "message": "Not one of the allowed values",
                          "code": "PAY-2831"
                        },
                        {
                          "propertyPath": "description",
                          "message": "Invalid string",
                          "code": "PAY-2825"
                        },
                        {
                          "propertyPath": "public",
                          "message": "Not a boolean",
                          "code": "PAY-2806"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "ContactMethod Update containing errors",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Error updating contact method",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Error updating contact method",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/contactmethods": {
      "get": {
        "tags": [
          "ContactMethods"
        ],
        "summary": "ContactMethods:Browse",
        "description": "Get all contact methods. If you do not supply a merchantCode we return the contact methods that are available under your own merchant registration. If you supply a merchantCode you need to have access to that merchant",
        "parameters": [
          {
            "name": "merchant",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "contactMethods": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "description": "The contact method ID of your company starting with CM.",
                                "type": "string",
                                "example": "CM-1234-4321"
                              },
                              "type": {
                                "description": "The type of contact method.",
                                "type": "string",
                                "enum": [
                                  "email",
                                  "email_support",
                                  "phone",
                                  "phone_helpdesk",
                                  "phone_off_hours",
                                  "url",
                                  "email_msnskype"
                                ],
                                "example": "The type of contact method."
                              },
                              "value": {
                                "description": "The value of the contact method.",
                                "type": "string",
                                "example": "088-88 666 22"
                              },
                              "description": {
                                "description": "The description of the contact method.",
                                "type": "string"
                              },
                              "public": {
                                "description": "Is the contact method public accessible",
                                "type": "boolean",
                                "example": "true"
                              },
                              "notifications": {
                                "description": "Does the contact method needs to receive notifications",
                                "type": "boolean",
                                "example": "false"
                              }
                            },
                            "type": "object",
                            "title": "ContactMethod",
                            "x-readme-ref-name": "ContactMethod"
                          },
                          {
                            "properties": {
                              "merchant": {
                                "required": [
                                  "code",
                                  "name",
                                  "status"
                                ],
                                "properties": {
                                  "code": {
                                    "description": "The merchant id of your company starting with M.",
                                    "type": "string",
                                    "example": "M-1234-4321"
                                  },
                                  "name": {
                                    "description": "The name of your merchant.",
                                    "type": "string",
                                    "maxLength": 128,
                                    "minLength": 2,
                                    "example": "CompanyName"
                                  },
                                  "status": {
                                    "description": "Merchant state",
                                    "type": "string",
                                    "example": "ACTIVE"
                                  }
                                },
                                "type": "object",
                                "title": "MerchantMinimal",
                                "x-readme-ref-name": "MerchantMinimal"
                              },
                              "createdAt": {
                                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": false
                              },
                              "createdBy": {
                                "description": "The reference to an account or token whom created the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": false
                              },
                              "modifiedAt": {
                                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": true
                              },
                              "modifiedBy": {
                                "description": "The reference to an account or token whom modified the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": true
                              },
                              "deletedAt": {
                                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": true
                              },
                              "deletedBy": {
                                "description": "The reference to an account or token whom deleted the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": true
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "title": "MerchantContactMethod",
                        "x-readme-ref-name": "MerchantContactMethod"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Browse Contact Methods",
                    "value": {
                      "total": 1,
                      "contactMethods": [
                        {
                          "code": "CM-1234-4321",
                          "type": "phone_helpdesk",
                          "value": "088-88 666 22",
                          "description": "Support desk",
                          "public": "true",
                          "notifications": "false",
                          "merchant": {
                            "code": "M-1234-4321",
                            "name": "CompanyName",
                            "status": "ACTIVE"
                          },
                          "createdAt": "2016-06-04T08:15:00+01:00",
                          "createdBy": "A-1234-4321",
                          "modifiedAt": "2016-06-04T08:15:00+01:00",
                          "modifiedBy": "A-1234-4321",
                          "deletedAt": null,
                          "deletedBy": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/contactmethods",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "ContactMethods"
        ],
        "summary": "ContactMethods:Create",
        "description": "Creates a new contact method for a merchant. You can indicate per contact method if the contact details are public. If they are public they can be used in communication with end users. You can also supply a merchantCode. If a merchantCode is supplied then you need to have access to that merchant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "merchantCode": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "contactMethod": {
                    "required": [
                      "type",
                      "value",
                      "public",
                      "notifications"
                    ],
                    "properties": {
                      "type": {
                        "description": "The type of contact method.",
                        "type": "string",
                        "enum": [
                          "email",
                          "email_support",
                          "phone",
                          "phone_helpdesk",
                          "phone_off_hours",
                          "url",
                          "email_msnskype"
                        ],
                        "example": "The type of contact method."
                      },
                      "value": {
                        "description": "The value of the contact method.",
                        "type": "string",
                        "example": "088-88 666 22"
                      },
                      "description": {
                        "description": "The description of the contact method.",
                        "type": "string"
                      },
                      "public": {
                        "description": "Is the contact method public accessible",
                        "type": "boolean",
                        "example": "true"
                      },
                      "notifications": {
                        "description": "Does the contact method needs to receive notifications",
                        "type": "boolean",
                        "example": "false"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "createWithMerchantCode": {
                  "summary": "ContactMethod Create with Merchant Code",
                  "value": {
                    "merchantCode": "M-1234-4321",
                    "contactMethod": {
                      "type": "phone_helpdesk",
                      "value": "088-88 666 22",
                      "description": "Support desk",
                      "public": "true",
                      "notifications": "false"
                    }
                  }
                },
                "createWithoutMerchantCode": {
                  "summary": "ContactMethod Create without Merchant Code",
                  "value": {
                    "contactMethod": {
                      "type": "phone_helpdesk",
                      "value": "088-88 666 22",
                      "description": "Support desk",
                      "public": "true",
                      "notifications": "false"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "description": "The contact method ID of your company starting with CM.",
                          "type": "string",
                          "example": "CM-1234-4321"
                        },
                        "type": {
                          "description": "The type of contact method.",
                          "type": "string",
                          "enum": [
                            "email",
                            "email_support",
                            "phone",
                            "phone_helpdesk",
                            "phone_off_hours",
                            "url",
                            "email_msnskype"
                          ],
                          "example": "The type of contact method."
                        },
                        "value": {
                          "description": "The value of the contact method.",
                          "type": "string",
                          "example": "088-88 666 22"
                        },
                        "description": {
                          "description": "The description of the contact method.",
                          "type": "string"
                        },
                        "public": {
                          "description": "Is the contact method public accessible",
                          "type": "boolean",
                          "example": "true"
                        },
                        "notifications": {
                          "description": "Does the contact method needs to receive notifications",
                          "type": "boolean",
                          "example": "false"
                        }
                      },
                      "type": "object",
                      "title": "ContactMethod",
                      "x-readme-ref-name": "ContactMethod"
                    },
                    {
                      "properties": {
                        "merchant": {
                          "required": [
                            "code",
                            "name",
                            "status"
                          ],
                          "properties": {
                            "code": {
                              "description": "The merchant id of your company starting with M.",
                              "type": "string",
                              "example": "M-1234-4321"
                            },
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 2,
                              "example": "CompanyName"
                            },
                            "status": {
                              "description": "Merchant state",
                              "type": "string",
                              "example": "ACTIVE"
                            }
                          },
                          "type": "object",
                          "title": "MerchantMinimal",
                          "x-readme-ref-name": "MerchantMinimal"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "MerchantContactMethod",
                  "x-readme-ref-name": "MerchantContactMethod"
                },
                "examples": {
                  "created": {
                    "summary": "ContactMethod Created",
                    "value": {
                      "code": "CM-1234-4321",
                      "type": "phone_helpdesk",
                      "value": "088-88 666 22",
                      "description": "Support desk",
                      "public": "true",
                      "notifications": "false",
                      "merchant": {
                        "code": "M-1234-4321",
                        "name": "CompanyName",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/contactmethods",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "ContactMethod Create containing errors",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "contactMethod.type: Not one of the allowed values\\ncontactMethod.description: Invalid string\\ncontactMethod.public: Not a boolean",
                      "violations": [
                        {
                          "propertyPath": "contactMethod.type",
                          "message": "Not one of the allowed values",
                          "code": "PAY-2831"
                        },
                        {
                          "propertyPath": "contactMethod.description",
                          "message": "Invalid string",
                          "code": "PAY-2825"
                        },
                        {
                          "propertyPath": "contactMethod.public",
                          "message": "Not a boolean",
                          "code": "PAY-2806"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "ContactMethod Create containing errors",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Error creating contact method",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Error creating contact method",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred."
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/contactmethods/{contactMethodCode}/undelete": {
      "post": {
        "tags": [
          "ContactMethods"
        ],
        "summary": "ContactMethods:Undelete",
        "description": "Undelete a contact method that was recently deleted. This can only be done within a 15 minute time window",
        "parameters": [
          {
            "name": "contactMethodCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The contact method ID of your company starting with CM.",
              "type": "string",
              "example": "CM-1234-4321"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The contact method ID of your company starting with CM.",
                      "type": "string",
                      "example": "CM-1234-4321"
                    },
                    "type": {
                      "description": "The type of contact method.",
                      "type": "string",
                      "enum": [
                        "email",
                        "email_support",
                        "phone",
                        "phone_helpdesk",
                        "phone_off_hours",
                        "url",
                        "email_msnskype"
                      ],
                      "example": "The type of contact method."
                    },
                    "value": {
                      "description": "The value of the contact method.",
                      "type": "string",
                      "example": "088-88 666 22"
                    },
                    "description": {
                      "description": "The description of the contact method.",
                      "type": "string"
                    },
                    "public": {
                      "description": "Is the contact method public accessible",
                      "type": "boolean",
                      "example": "true"
                    },
                    "notifications": {
                      "description": "Does the contact method needs to receive notifications",
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object",
                  "title": "ContactMethod",
                  "x-readme-ref-name": "ContactMethod"
                },
                "examples": {
                  "success": {
                    "summary": "ContactMethod undelete",
                    "value": {
                      "code": "CM-1234-4321",
                      "type": "phone_helpdesk",
                      "value": "088-88 666 22",
                      "description": "Support desk",
                      "public": "true",
                      "notifications": "false",
                      "merchant": {
                        "code": "M-1234-4321",
                        "name": "CompanyName",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": "2016-06-04T08:15:00+01:00",
                      "modifiedBy": "A-1234-4321",
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/contactmethods/CM-1234-4321",
                          "rel": "self",
                          "type": "PATCH"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Countries",
        "description": "Get a list of countries",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "countries": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of the country",
                            "type": "string"
                          },
                          "isoNumber": {
                            "description": "Iso number of the country",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Name of the country",
                            "type": "string"
                          },
                          "nationality": {
                            "type": "string",
                            "nullable": true
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "locales": {
                            "description": "Country locales",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "phonePrefix": {
                            "description": "International phone prefix of country",
                            "type": "integer"
                          },
                          "signupAllowed": {
                            "description": "Sign up allowed",
                            "type": "boolean"
                          },
                          "inEU": {
                            "description": "Country is in EU",
                            "type": "boolean"
                          },
                          "highRisk": {
                            "description": "High Risk country",
                            "type": "boolean"
                          },
                          "ibanLength": {
                            "description": "iBan lenght of country",
                            "type": "integer"
                          },
                          "image": {
                            "description": "Image of the country flag",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Country",
                        "x-readme-ref-name": "Country"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get countries",
                    "value": {
                      "total": 1,
                      "countries": [
                        {
                          "code": "NL",
                          "isoNumber": 528,
                          "name": "The Netherlands",
                          "nationality": "Dutch",
                          "translations": {
                            "name": {
                              "en_GB": "The Netherlands",
                              "nl_NL": "Nederland"
                            },
                            "nationality": {
                              "en_GB": "Dutch",
                              "nl_NL": "Nederlandse"
                            }
                          },
                          "locales": [
                            "nl_BE",
                            "nl_NL"
                          ],
                          "phonePrefix": 31,
                          "signupAllowed": true,
                          "inEU": true,
                          "highRisk": false,
                          "ibanLength": 18,
                          "image": "/countries/nl.svg",
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T14:35:21+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "url": "/countries",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Currencies",
        "description": "Get all currencies.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "currencies": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "Id of the currency.",
                            "type": "integer"
                          },
                          "tag": {
                            "description": "The currency in ISO-4217 format.",
                            "type": "string",
                            "example": "EUR"
                          },
                          "name": {
                            "description": "Full name of the currency.",
                            "type": "string",
                            "example": "Euro."
                          },
                          "isoCurrencyNumber": {
                            "description": "ISO number of the currency.",
                            "type": "integer"
                          },
                          "symbol": {
                            "description": "Symbol of the currency.",
                            "type": "string"
                          },
                          "exchangeRate": {
                            "description": "Exchange rate of the currency.",
                            "type": "number"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Currency",
                        "x-readme-ref-name": "Currency"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get currencies",
                    "value": {
                      "total": 1,
                      "currencies": [
                        {
                          "id": 1,
                          "tag": "EUR",
                          "name": "Euro",
                          "isoCurrencyNumber": 935,
                          "symbol": "€",
                          "exchangeRate": 1.1,
                          "createdAt": "2007-10-02T12:11:20+02:00",
                          "modifiedAt": "2021-08-10T17:24:05+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/currencies",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/directdebits/{incassoOrderId}/debits": {
      "post": {
        "tags": [
          "Directdebits"
        ],
        "summary": "Create a recurring debit.",
        "parameters": [
          {
            "name": "incassoOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The direct debit identifier.",
              "type": "string",
              "example": "IL-####-####-####"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "amount"
                ],
                "properties": {
                  "isLastOrder": {
                    "description": "Indicate whether this is the last direct debit for this mandateId.",
                    "type": "boolean"
                  },
                  "description": {
                    "description": "The description of the direct debit.",
                    "type": "string"
                  },
                  "processDate": {
                    "description": "The ISO date at which this entity will be processed",
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-01-01T12:00:00+02:00"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mandate": {
                      "properties": {
                        "id": {
                          "description": "The direct debit identifier.",
                          "type": "string",
                          "example": "IL-####-####-####"
                        },
                        "type": {
                          "description": "The type of direct debit. One of: single, mandate, recurring.",
                          "type": "string",
                          "example": "single"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "description": {
                          "description": "The description of the direct debit.",
                          "type": "string"
                        },
                        "statistics": {
                          "properties": {
                            "info": {
                              "description": "The used info code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Campagne 99"
                            },
                            "tool": {
                              "description": "The used tool code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Google"
                            },
                            "object": {
                              "description": "The object which can be tracked in stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1
                            },
                            "extra1": {
                              "description": "The first free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Customer 6985615"
                            },
                            "extra2": {
                              "description": "The second free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Invoice 21.3695"
                            },
                            "extra3": {
                              "description": "The third free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Shop Amsterdam"
                            },
                            "domainId": {
                              "description": "The ID of the duplicate content URL",
                              "type": "string",
                              "example": "WU-####-####"
                            }
                          },
                          "type": "object",
                          "title": "Stats",
                          "x-readme-ref-name": "Stats"
                        },
                        "customer": {
                          "properties": {
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "type": {
                              "description": "Either B for business or C for consumer.",
                              "type": "string",
                              "enum": [
                                "B",
                                "C"
                              ]
                            },
                            "ip": {
                              "description": "An ip address",
                              "type": "string",
                              "example": "213.126.82.230"
                            },
                            "birthDate": {
                              "description": "Date of birth as defined in ISO-8601.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "gender": {
                              "description": "The subject's gender. Choose either M for male or F for female.",
                              "type": "string",
                              "example": "M"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                              "type": "string",
                              "enum": [
                                "NL",
                                "EN",
                                "DE",
                                "FR",
                                "IT",
                                "ES"
                              ],
                              "example": "NL"
                            },
                            "trust": {
                              "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                              "type": "integer",
                              "maximum": 10,
                              "minimum": -10,
                              "example": -5
                            },
                            "reference": {
                              "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]{1,64}$",
                              "example": "NL87654321"
                            },
                            "bankAccount": {
                              "required": [
                                "iban",
                                "bic",
                                "owner"
                              ],
                              "properties": {
                                "iban": {
                                  "description": "The International Bank Account Number (IBAN).",
                                  "type": "string",
                                  "example": "NL69INGB0123456789"
                                },
                                "bic": {
                                  "description": "Business Identifier Codes (BIC/SWIFT).",
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "description": "The owner of the bank account.",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John Doe"
                                }
                              },
                              "type": "object",
                              "title": "BankAccount",
                              "x-readme-ref-name": "BankAccount"
                            },
                            "company": {
                              "properties": {
                                "name": {
                                  "description": "The name of your merchant.",
                                  "type": "string",
                                  "example": "CompanyName"
                                },
                                "coc": {
                                  "description": "Your Chamber of commerce registration number. This format differs per country.",
                                  "type": "string",
                                  "example": "12345678"
                                },
                                "vat": {
                                  "description": "Value added tax identification number (VAT identification number).",
                                  "type": "string",
                                  "example": "NL807960147B01"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Company",
                              "x-readme-ref-name": "Company"
                            }
                          },
                          "type": "object",
                          "title": "Customer",
                          "x-readme-ref-name": "Customer"
                        },
                        "interval": {
                          "properties": {
                            "period": {
                              "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "trimester",
                                "halfyear",
                                "year",
                                "manual"
                              ]
                            },
                            "quantity": {
                              "description": "Indicated the number of times this order should be executed.",
                              "type": "integer",
                              "example": 1
                            },
                            "value": {
                              "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "type": "object",
                          "title": "Interval",
                          "x-readme-ref-name": "Interval"
                        },
                        "state": {
                          "description": "State of the order. Options are: first, active, last, deleted, single.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "title": "Mandate",
                      "x-readme-ref-name": "Mandate"
                    },
                    "directdebits": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The direct debit identifier.",
                            "type": "string",
                            "example": "IL-####-####-####"
                          },
                          "paymentSessionId": {
                            "description": "The payment session identifier.",
                            "type": "string",
                            "example": 100000000
                          },
                          "processDate": {
                            "description": "The ISO date at which this entity will be processed",
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-01-01T12:00:00+02:00"
                          },
                          "type": {
                            "description": "The type of direct debit. One of: single, mandate, recurring.",
                            "type": "string",
                            "example": "single"
                          },
                          "amount": {
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "description": "The amount in cents.",
                                "type": "integer",
                                "minimum": 1,
                                "example": 10
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object",
                            "title": "Amount",
                            "x-readme-ref-name": "Amount"
                          },
                          "declined": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "status": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "description": {
                            "description": "The description of the direct debit.",
                            "type": "string",
                            "maxLength": 32
                          },
                          "bankAccount": {
                            "required": [
                              "iban",
                              "bic",
                              "owner"
                            ],
                            "properties": {
                              "iban": {
                                "description": "The International Bank Account Number (IBAN).",
                                "type": "string",
                                "example": "NL69INGB0123456789"
                              },
                              "bic": {
                                "description": "Business Identifier Codes (BIC/SWIFT).",
                                "type": "string",
                                "example": "INGBNL2A"
                              },
                              "owner": {
                                "description": "The owner of the bank account.",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John Doe"
                              }
                            },
                            "type": "object",
                            "title": "BankAccount",
                            "x-readme-ref-name": "BankAccount"
                          },
                          "exchangeUrl": {
                            "description": "The exchange URL to call.",
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "type": "object",
                        "title": "Directdebit",
                        "x-readme-ref-name": "Directdebit"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/directdebits/{incassoOrderId}": {
      "get": {
        "tags": [
          "Directdebits"
        ],
        "summary": "Fetch a directdebit order.",
        "parameters": [
          {
            "name": "incassoOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The direct debit identifier.",
              "type": "string",
              "example": "IL-####-####-####"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mandate": {
                      "properties": {
                        "id": {
                          "description": "The direct debit identifier.",
                          "type": "string",
                          "example": "IL-####-####-####"
                        },
                        "type": {
                          "description": "The type of direct debit. One of: single, mandate, recurring.",
                          "type": "string",
                          "example": "single"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "description": {
                          "description": "The description of the direct debit.",
                          "type": "string"
                        },
                        "statistics": {
                          "properties": {
                            "info": {
                              "description": "The used info code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Campagne 99"
                            },
                            "tool": {
                              "description": "The used tool code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Google"
                            },
                            "object": {
                              "description": "The object which can be tracked in stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1
                            },
                            "extra1": {
                              "description": "The first free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Customer 6985615"
                            },
                            "extra2": {
                              "description": "The second free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Invoice 21.3695"
                            },
                            "extra3": {
                              "description": "The third free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Shop Amsterdam"
                            },
                            "domainId": {
                              "description": "The ID of the duplicate content URL",
                              "type": "string",
                              "example": "WU-####-####"
                            }
                          },
                          "type": "object",
                          "title": "Stats",
                          "x-readme-ref-name": "Stats"
                        },
                        "customer": {
                          "properties": {
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "type": {
                              "description": "Either B for business or C for consumer.",
                              "type": "string",
                              "enum": [
                                "B",
                                "C"
                              ]
                            },
                            "ip": {
                              "description": "An ip address",
                              "type": "string",
                              "example": "213.126.82.230"
                            },
                            "birthDate": {
                              "description": "Date of birth as defined in ISO-8601.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "gender": {
                              "description": "The subject's gender. Choose either M for male or F for female.",
                              "type": "string",
                              "example": "M"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                              "type": "string",
                              "enum": [
                                "NL",
                                "EN",
                                "DE",
                                "FR",
                                "IT",
                                "ES"
                              ],
                              "example": "NL"
                            },
                            "trust": {
                              "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                              "type": "integer",
                              "maximum": 10,
                              "minimum": -10,
                              "example": -5
                            },
                            "reference": {
                              "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]{1,64}$",
                              "example": "NL87654321"
                            },
                            "bankAccount": {
                              "required": [
                                "iban",
                                "bic",
                                "owner"
                              ],
                              "properties": {
                                "iban": {
                                  "description": "The International Bank Account Number (IBAN).",
                                  "type": "string",
                                  "example": "NL69INGB0123456789"
                                },
                                "bic": {
                                  "description": "Business Identifier Codes (BIC/SWIFT).",
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "description": "The owner of the bank account.",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John Doe"
                                }
                              },
                              "type": "object",
                              "title": "BankAccount",
                              "x-readme-ref-name": "BankAccount"
                            },
                            "company": {
                              "properties": {
                                "name": {
                                  "description": "The name of your merchant.",
                                  "type": "string",
                                  "example": "CompanyName"
                                },
                                "coc": {
                                  "description": "Your Chamber of commerce registration number. This format differs per country.",
                                  "type": "string",
                                  "example": "12345678"
                                },
                                "vat": {
                                  "description": "Value added tax identification number (VAT identification number).",
                                  "type": "string",
                                  "example": "NL807960147B01"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Company",
                              "x-readme-ref-name": "Company"
                            }
                          },
                          "type": "object",
                          "title": "Customer",
                          "x-readme-ref-name": "Customer"
                        },
                        "interval": {
                          "properties": {
                            "period": {
                              "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "trimester",
                                "halfyear",
                                "year",
                                "manual"
                              ]
                            },
                            "quantity": {
                              "description": "Indicated the number of times this order should be executed.",
                              "type": "integer",
                              "example": 1
                            },
                            "value": {
                              "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "type": "object",
                          "title": "Interval",
                          "x-readme-ref-name": "Interval"
                        },
                        "state": {
                          "description": "State of the order. Options are: first, active, last, deleted, single.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "title": "Mandate",
                      "x-readme-ref-name": "Mandate"
                    },
                    "directdebits": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The direct debit identifier.",
                            "type": "string",
                            "example": "IL-####-####-####"
                          },
                          "paymentSessionId": {
                            "description": "The payment session identifier.",
                            "type": "string",
                            "example": 100000000
                          },
                          "processDate": {
                            "description": "The ISO date at which this entity will be processed",
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-01-01T12:00:00+02:00"
                          },
                          "type": {
                            "description": "The type of direct debit. One of: single, mandate, recurring.",
                            "type": "string",
                            "example": "single"
                          },
                          "amount": {
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "description": "The amount in cents.",
                                "type": "integer",
                                "minimum": 1,
                                "example": 10
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object",
                            "title": "Amount",
                            "x-readme-ref-name": "Amount"
                          },
                          "declined": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "status": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "description": {
                            "description": "The description of the direct debit.",
                            "type": "string",
                            "maxLength": 32
                          },
                          "bankAccount": {
                            "required": [
                              "iban",
                              "bic",
                              "owner"
                            ],
                            "properties": {
                              "iban": {
                                "description": "The International Bank Account Number (IBAN).",
                                "type": "string",
                                "example": "NL69INGB0123456789"
                              },
                              "bic": {
                                "description": "Business Identifier Codes (BIC/SWIFT).",
                                "type": "string",
                                "example": "INGBNL2A"
                              },
                              "owner": {
                                "description": "The owner of the bank account.",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John Doe"
                              }
                            },
                            "type": "object",
                            "title": "BankAccount",
                            "x-readme-ref-name": "BankAccount"
                          },
                          "exchangeUrl": {
                            "description": "The exchange URL to call.",
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "type": "object",
                        "title": "Directdebit",
                        "x-readme-ref-name": "Directdebit"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Directdebits"
        ],
        "summary": "Delete a directdebit order.",
        "parameters": [
          {
            "name": "incassoOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The direct debit identifier.",
              "type": "string",
              "example": "IL-####-####-####"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Directdebits"
        ],
        "summary": "Update a directdebit order.",
        "parameters": [
          {
            "name": "incassoOrderId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The direct debit identifier.",
              "type": "string",
              "example": "IL-####-####-####"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "amount"
                ],
                "properties": {
                  "description": {
                    "description": "The description of the direct debit.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "processDate": {
                    "description": "The ISO date at which this entity will be processed",
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-01-01T12:00:00+02:00"
                  },
                  "customer": {
                    "properties": {
                      "ip": {
                        "description": "An ip address",
                        "type": "string",
                        "example": "213.126.82.230"
                      },
                      "email": {
                        "description": "An email address.",
                        "type": "string",
                        "format": "email",
                        "example": "sandbox@pay.nl"
                      },
                      "bankAccount": {
                        "required": [
                          "iban",
                          "bic",
                          "owner"
                        ],
                        "properties": {
                          "iban": {
                            "description": "The International Bank Account Number (IBAN).",
                            "type": "string",
                            "example": "NL69INGB0123456789"
                          },
                          "bic": {
                            "description": "Business Identifier Codes (BIC/SWIFT).",
                            "type": "string",
                            "example": "INGBNL2A"
                          },
                          "owner": {
                            "description": "The owner of the bank account.",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "John Doe"
                          }
                        },
                        "type": "object",
                        "title": "BankAccount",
                        "x-readme-ref-name": "BankAccount"
                      }
                    },
                    "type": "object"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "interval": {
                    "properties": {
                      "period": {
                        "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "trimester",
                          "halfyear",
                          "year",
                          "manual"
                        ]
                      },
                      "quantity": {
                        "description": "Indicated the number of times this order should be executed.",
                        "type": "integer",
                        "example": 1
                      },
                      "value": {
                        "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "type": "object",
                    "title": "Interval",
                    "x-readme-ref-name": "Interval"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mandate": {
                      "properties": {
                        "id": {
                          "description": "The direct debit identifier.",
                          "type": "string",
                          "example": "IL-####-####-####"
                        },
                        "type": {
                          "description": "The type of direct debit. One of: single, mandate, recurring.",
                          "type": "string",
                          "example": "single"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "description": {
                          "description": "The description of the direct debit.",
                          "type": "string"
                        },
                        "statistics": {
                          "properties": {
                            "info": {
                              "description": "The used info code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Campagne 99"
                            },
                            "tool": {
                              "description": "The used tool code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Google"
                            },
                            "object": {
                              "description": "The object which can be tracked in stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1
                            },
                            "extra1": {
                              "description": "The first free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Customer 6985615"
                            },
                            "extra2": {
                              "description": "The second free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Invoice 21.3695"
                            },
                            "extra3": {
                              "description": "The third free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Shop Amsterdam"
                            },
                            "domainId": {
                              "description": "The ID of the duplicate content URL",
                              "type": "string",
                              "example": "WU-####-####"
                            }
                          },
                          "type": "object",
                          "title": "Stats",
                          "x-readme-ref-name": "Stats"
                        },
                        "customer": {
                          "properties": {
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "type": {
                              "description": "Either B for business or C for consumer.",
                              "type": "string",
                              "enum": [
                                "B",
                                "C"
                              ]
                            },
                            "ip": {
                              "description": "An ip address",
                              "type": "string",
                              "example": "213.126.82.230"
                            },
                            "birthDate": {
                              "description": "Date of birth as defined in ISO-8601.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "gender": {
                              "description": "The subject's gender. Choose either M for male or F for female.",
                              "type": "string",
                              "example": "M"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                              "type": "string",
                              "enum": [
                                "NL",
                                "EN",
                                "DE",
                                "FR",
                                "IT",
                                "ES"
                              ],
                              "example": "NL"
                            },
                            "trust": {
                              "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                              "type": "integer",
                              "maximum": 10,
                              "minimum": -10,
                              "example": -5
                            },
                            "reference": {
                              "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]{1,64}$",
                              "example": "NL87654321"
                            },
                            "bankAccount": {
                              "required": [
                                "iban",
                                "bic",
                                "owner"
                              ],
                              "properties": {
                                "iban": {
                                  "description": "The International Bank Account Number (IBAN).",
                                  "type": "string",
                                  "example": "NL69INGB0123456789"
                                },
                                "bic": {
                                  "description": "Business Identifier Codes (BIC/SWIFT).",
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "description": "The owner of the bank account.",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John Doe"
                                }
                              },
                              "type": "object",
                              "title": "BankAccount",
                              "x-readme-ref-name": "BankAccount"
                            },
                            "company": {
                              "properties": {
                                "name": {
                                  "description": "The name of your merchant.",
                                  "type": "string",
                                  "example": "CompanyName"
                                },
                                "coc": {
                                  "description": "Your Chamber of commerce registration number. This format differs per country.",
                                  "type": "string",
                                  "example": "12345678"
                                },
                                "vat": {
                                  "description": "Value added tax identification number (VAT identification number).",
                                  "type": "string",
                                  "example": "NL807960147B01"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Company",
                              "x-readme-ref-name": "Company"
                            }
                          },
                          "type": "object",
                          "title": "Customer",
                          "x-readme-ref-name": "Customer"
                        },
                        "interval": {
                          "properties": {
                            "period": {
                              "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "trimester",
                                "halfyear",
                                "year",
                                "manual"
                              ]
                            },
                            "quantity": {
                              "description": "Indicated the number of times this order should be executed.",
                              "type": "integer",
                              "example": 1
                            },
                            "value": {
                              "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "type": "object",
                          "title": "Interval",
                          "x-readme-ref-name": "Interval"
                        },
                        "state": {
                          "description": "State of the order. Options are: first, active, last, deleted, single.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "title": "Mandate",
                      "x-readme-ref-name": "Mandate"
                    },
                    "directdebits": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The direct debit identifier.",
                            "type": "string",
                            "example": "IL-####-####-####"
                          },
                          "paymentSessionId": {
                            "description": "The payment session identifier.",
                            "type": "string",
                            "example": 100000000
                          },
                          "processDate": {
                            "description": "The ISO date at which this entity will be processed",
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-01-01T12:00:00+02:00"
                          },
                          "type": {
                            "description": "The type of direct debit. One of: single, mandate, recurring.",
                            "type": "string",
                            "example": "single"
                          },
                          "amount": {
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "description": "The amount in cents.",
                                "type": "integer",
                                "minimum": 1,
                                "example": 10
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object",
                            "title": "Amount",
                            "x-readme-ref-name": "Amount"
                          },
                          "declined": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "status": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "description": {
                            "description": "The description of the direct debit.",
                            "type": "string",
                            "maxLength": 32
                          },
                          "bankAccount": {
                            "required": [
                              "iban",
                              "bic",
                              "owner"
                            ],
                            "properties": {
                              "iban": {
                                "description": "The International Bank Account Number (IBAN).",
                                "type": "string",
                                "example": "NL69INGB0123456789"
                              },
                              "bic": {
                                "description": "Business Identifier Codes (BIC/SWIFT).",
                                "type": "string",
                                "example": "INGBNL2A"
                              },
                              "owner": {
                                "description": "The owner of the bank account.",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John Doe"
                              }
                            },
                            "type": "object",
                            "title": "BankAccount",
                            "x-readme-ref-name": "BankAccount"
                          },
                          "exchangeUrl": {
                            "description": "The exchange URL to call.",
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "type": "object",
                        "title": "Directdebit",
                        "x-readme-ref-name": "Directdebit"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/directdebits": {
      "post": {
        "tags": [
          "Directdebits"
        ],
        "summary": "Create a new directdebit order. After creation the newly created order needs to be set to to allow recurring in the admin panel.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "serviceId",
                  "amount"
                ],
                "properties": {
                  "serviceId": {
                    "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                    "type": "string",
                    "example": "SL-####-####"
                  },
                  "description": {
                    "description": "The description of the direct debit.",
                    "type": "string",
                    "maxLength": 32
                  },
                  "processDate": {
                    "description": "The ISO date at which this entity will be processed",
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-01-01T12:00:00+02:00"
                  },
                  "customer": {
                    "properties": {
                      "ipAddress": {
                        "description": "An ip address",
                        "type": "string",
                        "example": "213.126.82.230"
                      },
                      "email": {
                        "description": "An email address.",
                        "type": "string",
                        "format": "email",
                        "example": "sandbox@pay.nl"
                      },
                      "bankAccount": {
                        "required": [
                          "iban",
                          "bic",
                          "owner"
                        ],
                        "properties": {
                          "iban": {
                            "description": "The International Bank Account Number (IBAN).",
                            "type": "string",
                            "example": "NL69INGB0123456789"
                          },
                          "bic": {
                            "description": "Business Identifier Codes (BIC/SWIFT).",
                            "type": "string",
                            "example": "INGBNL2A"
                          },
                          "owner": {
                            "description": "The owner of the bank account.",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "John Doe"
                          }
                        },
                        "type": "object",
                        "title": "BankAccount",
                        "x-readme-ref-name": "BankAccount"
                      }
                    },
                    "type": "object"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "interval": {
                    "properties": {
                      "period": {
                        "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                        "type": "string",
                        "enum": [
                          "day",
                          "week",
                          "month",
                          "trimester",
                          "halfyear",
                          "year",
                          "manual"
                        ]
                      },
                      "quantity": {
                        "description": "Indicated the number of times this order should be executed.",
                        "type": "integer",
                        "example": 1
                      },
                      "value": {
                        "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                        "type": "integer",
                        "example": 1
                      }
                    },
                    "type": "object",
                    "title": "Interval",
                    "x-readme-ref-name": "Interval"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  },
                  "exchangeUrl": {
                    "description": "The exchange URL to call.",
                    "type": "string",
                    "format": "uri"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "mandate": {
                      "properties": {
                        "id": {
                          "description": "The direct debit identifier.",
                          "type": "string",
                          "example": "IL-####-####-####"
                        },
                        "type": {
                          "description": "The type of direct debit. One of: single, mandate, recurring.",
                          "type": "string",
                          "example": "single"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "description": {
                          "description": "The description of the direct debit.",
                          "type": "string"
                        },
                        "statistics": {
                          "properties": {
                            "info": {
                              "description": "The used info code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Campagne 99"
                            },
                            "tool": {
                              "description": "The used tool code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Google"
                            },
                            "object": {
                              "description": "The object which can be tracked in stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1
                            },
                            "extra1": {
                              "description": "The first free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Customer 6985615"
                            },
                            "extra2": {
                              "description": "The second free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Invoice 21.3695"
                            },
                            "extra3": {
                              "description": "The third free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Shop Amsterdam"
                            },
                            "domainId": {
                              "description": "The ID of the duplicate content URL",
                              "type": "string",
                              "example": "WU-####-####"
                            }
                          },
                          "type": "object",
                          "title": "Stats",
                          "x-readme-ref-name": "Stats"
                        },
                        "customer": {
                          "properties": {
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "type": {
                              "description": "Either B for business or C for consumer.",
                              "type": "string",
                              "enum": [
                                "B",
                                "C"
                              ]
                            },
                            "ip": {
                              "description": "An ip address",
                              "type": "string",
                              "example": "213.126.82.230"
                            },
                            "birthDate": {
                              "description": "Date of birth as defined in ISO-8601.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "gender": {
                              "description": "The subject's gender. Choose either M for male or F for female.",
                              "type": "string",
                              "example": "M"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                              "type": "string",
                              "enum": [
                                "NL",
                                "EN",
                                "DE",
                                "FR",
                                "IT",
                                "ES"
                              ],
                              "example": "NL"
                            },
                            "trust": {
                              "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                              "type": "integer",
                              "maximum": 10,
                              "minimum": -10,
                              "example": -5
                            },
                            "reference": {
                              "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]{1,64}$",
                              "example": "NL87654321"
                            },
                            "bankAccount": {
                              "required": [
                                "iban",
                                "bic",
                                "owner"
                              ],
                              "properties": {
                                "iban": {
                                  "description": "The International Bank Account Number (IBAN).",
                                  "type": "string",
                                  "example": "NL69INGB0123456789"
                                },
                                "bic": {
                                  "description": "Business Identifier Codes (BIC/SWIFT).",
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "description": "The owner of the bank account.",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John Doe"
                                }
                              },
                              "type": "object",
                              "title": "BankAccount",
                              "x-readme-ref-name": "BankAccount"
                            },
                            "company": {
                              "properties": {
                                "name": {
                                  "description": "The name of your merchant.",
                                  "type": "string",
                                  "example": "CompanyName"
                                },
                                "coc": {
                                  "description": "Your Chamber of commerce registration number. This format differs per country.",
                                  "type": "string",
                                  "example": "12345678"
                                },
                                "vat": {
                                  "description": "Value added tax identification number (VAT identification number).",
                                  "type": "string",
                                  "example": "NL807960147B01"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Company",
                              "x-readme-ref-name": "Company"
                            }
                          },
                          "type": "object",
                          "title": "Customer",
                          "x-readme-ref-name": "Customer"
                        },
                        "interval": {
                          "properties": {
                            "period": {
                              "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                              "type": "string",
                              "enum": [
                                "day",
                                "week",
                                "month",
                                "trimester",
                                "halfyear",
                                "year",
                                "manual"
                              ]
                            },
                            "quantity": {
                              "description": "Indicated the number of times this order should be executed.",
                              "type": "integer",
                              "example": 1
                            },
                            "value": {
                              "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                              "type": "integer",
                              "example": 1
                            }
                          },
                          "type": "object",
                          "title": "Interval",
                          "x-readme-ref-name": "Interval"
                        },
                        "state": {
                          "description": "State of the order. Options are: first, active, last, deleted, single.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "title": "Mandate",
                      "x-readme-ref-name": "Mandate"
                    },
                    "directdebits": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The direct debit identifier.",
                            "type": "string",
                            "example": "IL-####-####-####"
                          },
                          "paymentSessionId": {
                            "description": "The payment session identifier.",
                            "type": "string",
                            "example": 100000000
                          },
                          "processDate": {
                            "description": "The ISO date at which this entity will be processed",
                            "type": "string",
                            "format": "date-time",
                            "example": "2019-01-01T12:00:00+02:00"
                          },
                          "type": {
                            "description": "The type of direct debit. One of: single, mandate, recurring.",
                            "type": "string",
                            "example": "single"
                          },
                          "amount": {
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "description": "The amount in cents.",
                                "type": "integer",
                                "minimum": 1,
                                "example": 10
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object",
                            "title": "Amount",
                            "x-readme-ref-name": "Amount"
                          },
                          "declined": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "status": {
                            "properties": {
                              "code": {
                                "description": "The status code.",
                                "type": "integer"
                              },
                              "action": {
                                "description": "The state in which the transaction resides",
                                "type": "string",
                                "example": "PAID"
                              },
                              "phase": {
                                "description": "The current phase in the transaction state",
                                "type": "string",
                                "example": "APPROVED"
                              }
                            },
                            "type": "object",
                            "title": "Status",
                            "x-readme-ref-name": "Status"
                          },
                          "description": {
                            "description": "The description of the direct debit.",
                            "type": "string",
                            "maxLength": 32
                          },
                          "bankAccount": {
                            "required": [
                              "iban",
                              "bic",
                              "owner"
                            ],
                            "properties": {
                              "iban": {
                                "description": "The International Bank Account Number (IBAN).",
                                "type": "string",
                                "example": "NL69INGB0123456789"
                              },
                              "bic": {
                                "description": "Business Identifier Codes (BIC/SWIFT).",
                                "type": "string",
                                "example": "INGBNL2A"
                              },
                              "owner": {
                                "description": "The owner of the bank account.",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John Doe"
                              }
                            },
                            "type": "object",
                            "title": "BankAccount",
                            "x-readme-ref-name": "BankAccount"
                          },
                          "exchangeUrl": {
                            "description": "The exchange URL to call.",
                            "type": "string",
                            "format": "uri"
                          }
                        },
                        "type": "object",
                        "title": "Directdebit",
                        "x-readme-ref-name": "Directdebit"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/documents": {
      "post": {
        "tags": [
          "Merchants"
        ],
        "summary": "Documents:Add",
        "description": "Upload a (compliance) document as base64. Uploading is done based on a document code, the content of the document needs to be encoded to base64. You can also specify the filename.\n\nYou need to authenticate with an AT code (as username) and the corresponding token (as password) or you can authenticate with an AL code (as username) and the corresponding secret (as password)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "code": {
                    "description": "Code of the acceptance document.",
                    "type": "string",
                    "example": "D-1234-1234"
                  },
                  "fileName": {
                    "description": "Name of the file.",
                    "type": "string",
                    "example": "nice_pdf.pdf"
                  },
                  "documentFile": {
                    "description": "Base64 encoding of the file.",
                    "type": "string"
                  },
                  "files": {
                    "description": "Array of base64 encoded files.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "type": "object"
              },
              "examples": {
                "single": {
                  "summary": "Singe file upload",
                  "value": {
                    "code": "D-1234-1234",
                    "fileName": "document.pdf",
                    "documentFile": ""
                  }
                },
                "multiple": {
                  "summary": "Multiple file upload",
                  "value": {
                    "code": "D-1234-1234",
                    "fileName": "document.pdf",
                    "files": [
                      "",
                      ""
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "Code of the acceptance document.",
                      "type": "string",
                      "example": "D-1234-1234"
                    },
                    "type": {
                      "description": "Type of the acceptance document.",
                      "type": "string",
                      "example": "identification"
                    },
                    "status": {
                      "description": "Status of the acceptance document.",
                      "type": "string",
                      "example": "UPLOADED"
                    }
                  },
                  "type": "object",
                  "title": "Document",
                  "x-readme-ref-name": "Document"
                },
                "examples": {
                  "success": {
                    "summary": "Add document",
                    "value": {
                      "document": {
                        "code": "D-1234-1234",
                        "type": "account",
                        "status": "UPLOADED"
                      },
                      "_links": [
                        {
                          "href": "/documents",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "errors": {
                        "code": {
                          "message": "Is empty",
                          "code": "PAY-2828"
                        },
                        "fileName": {
                          "message": "Is empty",
                          "code": "PAY-2828"
                        },
                        "documentFile": {
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      },
                      "_links": [
                        {
                          "href": "/documents",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Something went wrong.",
                    "value": {
                      "errors": {
                        "general": {
                          "code": "PAY-3000",
                          "message": "Something went wrong."
                        }
                      },
                      "_links": [
                        {
                          "href": "/documents",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/documents/{documentId}/veriff": {
      "post": {
        "tags": [
          "Merchants"
        ],
        "summary": "Documents:AddVeriffSession",
        "description": "Attach a veriff session id to a onboarding document.",
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "Code of the acceptance document.",
              "type": "string",
              "example": "D-1234-1234"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "sessionId": {}
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "success": {
                    "summary": "Add veriff session id to a document",
                    "value": {
                      "_links": [
                        {
                          "href": "/documents/D-1234-1234/veriff",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "errors": {
                        "sessionId": {
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      },
                      "_links": [
                        {
                          "href": "/documents/D-1234-1234/veriff",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Something went wrong.",
                    "value": []
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Integrations",
        "description": "Get all integrations.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "integrations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "A code for this integration",
                            "type": "string",
                            "example": "PL-0000-0000"
                          },
                          "name": {
                            "description": "An integration name.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the integration.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the integration.",
                            "type": "string"
                          },
                          "image": {
                            "description": "Image of the integration.",
                            "type": "string"
                          },
                          "url": {
                            "description": "Url to the integration.",
                            "type": "string"
                          },
                          "urlInfo": {
                            "description": "Url to more information in the documentation about this integration.",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "versions": {
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "A code for this integration version",
                                  "type": "string",
                                  "example": "PV-0000-0000"
                                },
                                "version": {
                                  "description": "Integration version.",
                                  "type": "string"
                                },
                                "developer": {
                                  "description": "Developer of the integration version.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Status of the integration.",
                                  "type": "string"
                                },
                                "urlDownload": {
                                  "description": "Url to download.",
                                  "type": "string"
                                },
                                "urlManual": {
                                  "description": "Url to manual.",
                                  "type": "string"
                                },
                                "urlShopDemo": {
                                  "description": "Url to shopDemo.",
                                  "type": "string"
                                },
                                "urlGithub": {
                                  "description": "Url to github.",
                                  "type": "string"
                                },
                                "urlImage": {
                                  "description": "Url to image.",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "IntegrationPluginVersion",
                              "x-readme-ref-name": "IntegrationPluginVersion"
                            }
                          }
                        },
                        "type": "object",
                        "title": "IntegrationPlugin",
                        "x-readme-ref-name": "IntegrationPlugin"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get integrations",
                    "value": {
                      "total": 1,
                      "integrations": [
                        {
                          "code": "PL-XXXX-XXXX",
                          "name": "Plugin",
                          "description": "Plugin",
                          "versions": [
                            {
                              "code": "PV-XXXX-XXXX",
                              "version": "all",
                              "developer": "Plugin",
                              "status": "ACTIVE",
                              "urlDownload": null,
                              "urlManual": null,
                              "urlShopDemo": null,
                              "urlGithub": null,
                              "urlImage": null,
                              "createdAt": "2021-11-29T13:22:28+01:00",
                              "modifiedAt": null,
                              "deletedAt": null
                            }
                          ],
                          "status": "PHASED_OUT",
                          "image": null,
                          "href": null,
                          "urlInfo": "https://www.my-plugin.nl",
                          "createdAt": "2021-11-29T13:21:30+01:00",
                          "modifiedAt": "2021-11-29T13:22:49+01:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/integrations",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/invoicelines": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Invoice:Lines",
        "description": "A Pay. invoice contains multiple invoice lines. This API returns all invoice lines for a specified period. If you are a partner and you have rights to your merchants you can retrieve the invoice lines also for your merchants",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the returned records. If not supplied we will default to 100 records",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Indicate which page you want in your result set. If not supplied we will default to page 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Indicate in which period when the transactions are done",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gt": {
                  "description": "Get results that are greater than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gte": {
                  "description": "Get results that are greater than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lt": {
                  "description": "Get results that are less than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lte": {
                  "description": "Get results that are less than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "processedDate",
            "in": "query",
            "description": "Indicate for which period you want to retrieve the invoice lines",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gt": {
                  "description": "Get results that are greater than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gte": {
                  "description": "Get results that are greater than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lt": {
                  "description": "Get results that are less than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lte": {
                  "description": "Get results that are less than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "merchant",
            "in": "query",
            "description": "If you are a partner you can indicate for which merchants you want to retrieve the invoice lines. If you do not supply a merchant we will return the invoice lines for all your merchants",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "example": "M-1234-4321"
                },
                "neq": {
                  "description": "Get results that do not equal the given value",
                  "type": "string",
                  "example": "M-1234-4321"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "billingLineType",
            "in": "query",
            "description": "You can indicate which lineType you want to retrieve. See for more information the BillingLineTypes API (https://developer.pay.nl/reference/get_billinglinetypes)",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": 10
                }
              },
              "type": "object"
            }
          },
          {
            "name": "turnoverGroup",
            "in": "query",
            "description": "You can indicate for which turnover group you want to retrieve the invoice lines. If not supplied we will return the invoice lines for all turnover groups",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": "CT-1234-4321"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "A invoice line has a state. By providing a state you will only retrieve invoice lines in that state",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "enum": [
                    "OPEN",
                    "PAYABLE",
                    "PAID"
                  ],
                  "example": "PROCESSED"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "invoiceID",
            "in": "query",
            "description": "A invoice line is available on a invoice. By providing a invoice ID you will only retrieve invoice lines for that invoice",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": "INVOICE-12345"
                }
              },
              "type": "object"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of invoice line. Can either be SELL or BUY.",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "integer",
                  "example": "BUY"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "total",
                    "count",
                    "invoiceLines",
                    "_links"
                  ],
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "invoiceLines": {
                      "type": "array",
                      "items": {
                        "required": [
                          "code",
                          "merchant",
                          "turnoverGroup",
                          "billingLineType",
                          "unitType",
                          "amount",
                          "vatPercentage",
                          "date",
                          "valueDate",
                          "paymentDate",
                          "processedDate",
                          "state",
                          "invoiceID"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "merchant": {
                            "description": "The corresponding merchant for the invoice line",
                            "required": [
                              "code",
                              "contractPackage"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "contractPackage": {
                                "description": "The merchant's package type",
                                "type": "string",
                                "example": "Business"
                              }
                            },
                            "type": "object"
                          },
                          "turnoverGroup": {
                            "description": "The turnover group for the invoice line",
                            "required": [
                              "code",
                              "name"
                            ],
                            "properties": {
                              "code": {
                                "description": "The turnover group code",
                                "type": "string",
                                "example": "CT-1234-4321"
                              },
                              "name": {
                                "description": "The turnover group name",
                                "type": "string",
                                "example": "Ecommerce"
                              }
                            },
                            "type": "object",
                            "nullable": true
                          },
                          "billingLineType": {
                            "description": "The type of billing used for the invoice, c.q. payment method",
                            "required": [
                              "id",
                              "name"
                            ],
                            "properties": {
                              "id": {
                                "description": "ID of the billing type",
                                "type": "integer",
                                "example": "706"
                              },
                              "name": {
                                "description": "The name for the corresponding billing type",
                                "type": "string",
                                "example": "Visa Mastercard"
                              }
                            },
                            "type": "object",
                            "nullable": true
                          },
                          "volume": {
                            "description": "The volume of the invoice line",
                            "properties": {
                              "amount": {
                                "description": "Amount of the volume as decimal",
                                "type": "number",
                                "example": "3.80"
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object"
                          },
                          "totalCosts": {
                            "description": "The total costs per invoice line",
                            "type": "array",
                            "items": {
                              "properties": {
                                "totalCosts": {
                                  "description": "$totalCosts",
                                  "properties": {
                                    "type": {
                                      "description": "The type of total costs",
                                      "type": "string",
                                      "example": "BUY"
                                    },
                                    "totalCosts": {
                                      "description": "The total costs amount as decimal",
                                      "type": "number",
                                      "example": "0.23"
                                    },
                                    "currency": {
                                      "description": "The currency in ISO-4217 format.",
                                      "type": "string",
                                      "example": "EUR"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "transactions": {
                            "type": "integer"
                          },
                          "payers": {
                            "type": "integer"
                          },
                          "vatPercentage": {
                            "type": "number"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "valueDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "paymentDate": {
                            "type": "string",
                            "format": "date",
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "enum": [
                              "OPEN",
                              "PAYABLE",
                              "PAID"
                            ],
                            "nullable": true
                          },
                          "invoiceID": {
                            "type": "string",
                            "nullable": true
                          },
                          "lines": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "type": {
                                  "description": "The type of invoice line. Can either be SELL or BUY.",
                                  "type": "string",
                                  "enum": [
                                    "BUY",
                                    "SELL"
                                  ]
                                },
                                "unitType": {
                                  "description": "The specification for the unit's type",
                                  "required": [
                                    "id",
                                    "name"
                                  ],
                                  "properties": {
                                    "id": {
                                      "description": "The unit type ID",
                                      "type": "integer",
                                      "example": "12"
                                    },
                                    "name": {
                                      "description": "The unit type's name",
                                      "type": "string",
                                      "example": "percentage"
                                    }
                                  },
                                  "type": "object",
                                  "nullable": true
                                },
                                "amount": {
                                  "type": "number"
                                },
                                "costs": {
                                  "description": "The costs revue per financial transaction with the corresponding currency",
                                  "properties": {
                                    "revenue": {
                                      "description": "The revenue for the costs as a decimal (/float)",
                                      "type": "number",
                                      "example": "23.45"
                                    },
                                    "currency": {
                                      "description": "The currency in ISO-4217 format.",
                                      "type": "string",
                                      "example": "EUR"
                                    }
                                  },
                                  "type": "object"
                                },
                                "processedDate": {
                                  "type": "string",
                                  "format": "date",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "FinanceTransactionLine",
                              "x-readme-ref-name": "FinanceTransactionLine"
                            }
                          }
                        },
                        "type": "object",
                        "title": "InvoiceLine",
                        "x-readme-ref-name": "InvoiceLine"
                      }
                    },
                    "_links": {
                      "properties": {
                        "first": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "previous": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "next": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "last": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "rel": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "type": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get invoice lines",
                    "value": {
                      "total": 1,
                      "count": 1,
                      "invoiceLines": [
                        {
                          "code": "2021-10-04_CT-1234-4321-706",
                          "merchant": {
                            "code": "M-1234-4321",
                            "contractPackage": "Corporate"
                          },
                          "turnoverGroup": {
                            "code": "CT-1234-4321",
                            "name": "Ecommerce"
                          },
                          "billingLineType": {
                            "id": 706,
                            "name": "Visa Mastercard"
                          },
                          "volume": {
                            "amount": 20,
                            "currency": "EUR"
                          },
                          "totalCosts": [
                            {
                              "type": "SELL",
                              "totalCosts": 0.39,
                              "currency": "EUR"
                            },
                            {
                              "type": "BUY",
                              "totalCosts": 0,
                              "currency": "EUR"
                            }
                          ],
                          "transactions": 1,
                          "payers": 1,
                          "vatPercentage": 21,
                          "date": "2021-10-04",
                          "paymentDate": null,
                          "state": "PAYABLE",
                          "invoiceID": "INVOICE-20222997580",
                          "lines": [
                            {
                              "code": "FT-1234-1234-1234",
                              "type": "SELL",
                              "unitType": {
                                "id": 12,
                                "name": "percentage"
                              },
                              "amount": 20,
                              "costs": {
                                "revenue": 0.0195,
                                "currency": "EUR"
                              },
                              "processedDate": "2021-10-09"
                            }
                          ]
                        }
                      ],
                      "_links": {
                        "self": {
                          "href": "/invoicelines?limit=1&page=1",
                          "rel": "self",
                          "type": "GET"
                        },
                        "first": {
                          "href": "/invoicelines?limit=1&page=1"
                        },
                        "previous": {
                          "href": "/invoicelines?limit=1&page=1"
                        },
                        "next": {
                          "href": "/invoicelines?limit=1&page=2"
                        },
                        "last": {
                          "href": "/invoicelines?limit=1&page=4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ipaddresses": {
      "get": {
        "tags": [
          "IpAddresses"
        ],
        "summary": "IpAddresses",
        "description": "Get all IP addresses that are in use by Pay.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "success": {
                    "summary": "Get all IP addresses that are in use by Pay.",
                    "value": {
                      "total": 7,
                      "ipaddresses": [
                        "192.168.200.200",
                        "192.168.20.101",
                        "10.50.0.20",
                        "127.0.0.1",
                        "185.21.191.185",
                        "213.126.82.230",
                        "213.126.82.229"
                      ],
                      "_links": [
                        {
                          "href": "/ipaddresses",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/ispay/ip": {
      "get": {
        "tags": [
          "IpAddresses"
        ],
        "summary": "IsPay",
        "description": "Return status 200 if the ip provided is an ip owned by Pay, otherwise it will return a 404.",
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "description": "An ip address",
              "type": "string",
              "example": "213.126.82.230"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "errors": {
                        "value": {
                          "name": {
                            "message": "Invalid IP address",
                            "code": "PAY-2815"
                          }
                        }
                      },
                      "_links": [
                        {
                          "href": "/ispay/ip?value=192.168.200.999",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "IP address not in use"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/issuers": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Issuers",
        "description": "Get all issuers.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "issuers": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The identifier for this issuer",
                            "type": "integer",
                            "example": "1"
                          },
                          "code": {
                            "description": "A code for this issuer",
                            "type": "string",
                            "example": "PB-0000-0000"
                          },
                          "name": {
                            "description": "The issuer name.",
                            "type": "string"
                          },
                          "bic": {
                            "description": "The Bank Identifier Code.",
                            "type": "string"
                          },
                          "issuerId": {
                            "description": "ID of the issuer.",
                            "type": "string"
                          },
                          "available": {
                            "description": "Is available.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "Status.",
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive"
                            ]
                          },
                          "image": {
                            "description": "Image of the integration.",
                            "type": "string"
                          },
                          "paymentMethod": {
                            "required": [
                              "id"
                            ],
                            "properties": {
                              "id": {
                                "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                                "type": "integer",
                                "example": "10"
                              },
                              "name": {
                                "description": "The name of the payment method.",
                                "type": "string",
                                "example": "ideal"
                              }
                            },
                            "type": "object",
                            "title": "IssuerPaymentMethod",
                            "x-readme-ref-name": "IssuerPaymentMethod"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Issuer",
                        "x-readme-ref-name": "Issuer"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get issuers",
                    "value": {
                      "total": 1,
                      "issuers": [
                        {
                          "id": 1,
                          "code": "PB-9060-1000",
                          "name": "ABN Amro",
                          "bic": "ABNANL2A",
                          "issuerId": "0031",
                          "available": true,
                          "status": "active",
                          "image": "/issuers/1.svg",
                          "paymentMethod": {
                            "id": 10,
                            "name": "iDEAL"
                          },
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/issuers",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/languages": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Languages",
        "description": "Get all languages",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The language code",
                            "type": "string",
                            "example": "en_US"
                          },
                          "name": {
                            "description": "The language name.",
                            "type": "string"
                          },
                          "adminLanguageAvailable": {
                            "description": "Language is available in the administration panel.",
                            "type": "boolean"
                          },
                          "hostedPaymentPageLanguageAvailable": {
                            "description": "Language is available on a hosted payment page.",
                            "type": "boolean"
                          },
                          "payerCommunicationLanguageAvailable": {
                            "description": "Language is available for communication to the payer.",
                            "type": "boolean"
                          },
                          "contractLanguageAvailable": {
                            "description": "Language is available for contracts.",
                            "type": "boolean"
                          },
                          "image": {
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Language",
                        "x-readme-ref-name": "Language"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get languages",
                    "value": {
                      "total": 1,
                      "languages": [
                        {
                          "code": "nl_BE",
                          "name": "Dutch (Belgium)",
                          "adminLanguageAvailable": true,
                          "hostedPaymentPageLanguageAvailable": false,
                          "payerCommunicationLanguageAvailable": false,
                          "contractLanguageAvailable": false,
                          "image": "/countries/nl.svg",
                          "createdAt": "2022-06-02T15:53:17+02:00",
                          "modifiedAt": "2022-06-02T17:00:46+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/languages",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/licenses/{licenseCode}": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "Licenses:Get",
        "description": "Get a specific license linked to a merchant.",
        "parameters": [
          {
            "name": "licenseCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "License code.",
              "type": "string",
              "example": "AL-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "License code.",
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "name": {
                      "description": "Name of the license.",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "example": "NL"
                    },
                    "complianceData": {
                      "properties": {
                        "authorizedToSign": {
                          "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                          "type": "string",
                          "enum": [
                            "no",
                            "alone",
                            "shared"
                          ],
                          "example": "shared"
                        },
                        "pep": {
                          "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                          "type": "boolean",
                          "example": "true"
                        },
                        "pepDescription": {
                          "description": "Describe in your own words why this person is a PEP.",
                          "type": "string",
                          "example": "The person is active as an alderman in the municipality where he lives."
                        },
                        "ubo": {
                          "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                          "type": "string",
                          "enum": [
                            "no",
                            "direct",
                            "indirect",
                            "pseudo"
                          ],
                          "example": "direct"
                        },
                        "uboPercentage": {
                          "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                          "type": "integer",
                          "example": "25"
                        },
                        "relationshipDescription": {
                          "description": "Describe in your own words the relation the person has with this company.",
                          "type": "string",
                          "example": "John Doe of test company"
                        }
                      }
                    },
                    "notificationGroup": {
                      "properties": {
                        "technical": {
                          "type": "boolean"
                        },
                        "financial": {
                          "type": "boolean"
                        },
                        "operations": {
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "NotificationGroup",
                      "x-readme-ref-name": "NotificationGroup"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "platform": {
                      "properties": {
                        "loginAccount": {
                          "type": "boolean"
                        },
                        "loginTpa": {
                          "type": "boolean"
                        },
                        "authorisation": {
                          "type": "string",
                          "enum": [
                            "all",
                            "specified"
                          ]
                        },
                        "authorisationGroups": {
                          "type": "array",
                          "items": {
                            "description": "Authorisation group identifier",
                            "type": "string",
                            "example": "AG-1234-4321"
                          }
                        }
                      },
                      "type": "object",
                      "title": "Platform",
                      "x-readme-ref-name": "Platform"
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of the acceptance document.",
                            "type": "string",
                            "example": "D-1234-1234"
                          },
                          "type": {
                            "description": "Type of the acceptance document.",
                            "type": "string",
                            "example": "identification"
                          },
                          "status": {
                            "description": "Status of the acceptance document.",
                            "type": "string",
                            "example": "UPLOADED"
                          }
                        },
                        "type": "object",
                        "title": "Document",
                        "x-readme-ref-name": "Document"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "PersonLicense",
                  "x-readme-ref-name": "PersonLicense"
                },
                "examples": {
                  "success": {
                    "summary": "Get license",
                    "value": {
                      "code": "AL-1234-1234",
                      "name": null,
                      "language": "nl_NL",
                      "complianceData": {
                        "authorizedToSign": "shared",
                        "pep": false,
                        "pepDescription": "The person is active as an alderman in the municipality where he lives.",
                        "ubo": "direct",
                        "uboPercentage": 15,
                        "relationshipDescription": null
                      },
                      "notificationGroup": {
                        "technical": false,
                        "financial": true,
                        "operations": false
                      },
                      "platform": {
                        "loginAccount": true,
                        "loginTpa": false,
                        "authorisation": "all",
                        "authorisationGroups": []
                      },
                      "merchant": {
                        "code": "M-1234-1234",
                        "name": "Mijn B.V.",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2023-06-19T11:23:17+02:00",
                      "createdBy": "AT-1234-1234",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/licenses/AL-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Licenses"
        ],
        "summary": "Licenses:Delete",
        "description": "Remove a license from a merchant. You can unsuspend within a 15 minute time window.",
        "parameters": [
          {
            "name": "licenseCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "License code.",
              "type": "string",
              "example": "AL-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "license: {}",
                      "violations": [
                        {
                          "propertyPath": "license",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "409": {
            "description": "Indicates a request conflict with the current state of the target resource"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Licenses"
        ],
        "summary": "Licenses:Update",
        "description": "Updates a license under a merchant. You can indicate if the license is authorized to sign or an UBO and you can indicate which rights the account should have. You need to have access to that merchant to update the license. You need to authenticate with an AT-code as username and a token as password.",
        "parameters": [
          {
            "name": "licenseCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "License code.",
              "type": "string",
              "example": "AL-1234-4321"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "language": {
                    "type": "string",
                    "example": "nl_NL"
                  },
                  "notificationGroup": {
                    "properties": {
                      "technical": {
                        "type": "boolean"
                      },
                      "financial": {
                        "type": "boolean"
                      },
                      "operations": {
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "platform": {
                    "properties": {
                      "loginAccount": {
                        "type": "boolean"
                      },
                      "loginTpa": {
                        "type": "boolean"
                      },
                      "authorisation": {
                        "type": "string",
                        "enum": [
                          "all",
                          "specified"
                        ]
                      },
                      "authorisationGroups": {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "example": "AG-1234-4321"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "complianceData": {
                    "properties": {
                      "pep": {
                        "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                        "type": "boolean",
                        "example": "true"
                      },
                      "pepDescription": {
                        "description": "Describe in your own words why this person is a PEP.",
                        "type": "string",
                        "example": "The person is active as an alderman in the municipality where he lives."
                      },
                      "authorizedToSign": {
                        "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                        "type": "string",
                        "enum": [
                          "no",
                          "alone",
                          "shared"
                        ],
                        "example": "shared"
                      },
                      "dateOfBirth": {
                        "description": "Date of birth of the person.",
                        "type": "string",
                        "format": "date-time",
                        "example": "1999-12-12"
                      },
                      "nationality": {
                        "description": "Nationality of the person.",
                        "type": "string",
                        "example": "NL"
                      },
                      "ubo": {
                        "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                        "type": "string",
                        "enum": [
                          "no",
                          "direct",
                          "indirect",
                          "pseudo"
                        ],
                        "example": "direct"
                      },
                      "uboPercentage": {
                        "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                        "type": "integer",
                        "example": "25"
                      },
                      "relationshipDescription": {
                        "description": "Describe in your own words the relation the person has with this company.",
                        "type": "string",
                        "example": "John Doe of test company"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "UpdateAUserAccountPayload": {
                  "summary": "Update a user account",
                  "value": {
                    "name": "John Doe",
                    "notificationGroup": {
                      "technical": true,
                      "financial": true
                    },
                    "platform": {
                      "loginTpa": true
                    }
                  }
                },
                "UpdateAUboAuthorizedUserAccountPayload": {
                  "summary": "Update a ubo/authorized to sign user",
                  "value": {
                    "name": "John Doe",
                    "complianceData": {
                      "dateOfBirth": "1982-01-01",
                      "nationality": "NL",
                      "authorizedToSign": "alone",
                      "pep": true,
                      "pepDescription": "The person is active as an alderman in the municipality where he lives.",
                      "ubo": "direct",
                      "uboPercentage": 33,
                      "relationshipDescription": ""
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "License code.",
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "name": {
                      "description": "Name of the license.",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "example": "NL"
                    },
                    "notificationGroup": {
                      "properties": {
                        "technical": {
                          "type": "boolean"
                        },
                        "financial": {
                          "type": "boolean"
                        },
                        "operations": {
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "NotificationGroup",
                      "x-readme-ref-name": "NotificationGroup"
                    },
                    "platform": {
                      "properties": {
                        "loginAccount": {
                          "type": "boolean"
                        },
                        "loginTpa": {
                          "type": "boolean"
                        },
                        "authorisation": {
                          "type": "string",
                          "enum": [
                            "all",
                            "specified"
                          ]
                        },
                        "authorisationGroups": {
                          "type": "array",
                          "items": {
                            "description": "Authorisation group identifier",
                            "type": "string",
                            "example": "AG-1234-4321"
                          }
                        }
                      },
                      "type": "object",
                      "title": "Platform",
                      "x-readme-ref-name": "Platform"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of the acceptance document.",
                            "type": "string",
                            "example": "D-1234-1234"
                          },
                          "type": {
                            "description": "Type of the acceptance document.",
                            "type": "string",
                            "example": "identification"
                          },
                          "status": {
                            "description": "Status of the acceptance document.",
                            "type": "string",
                            "example": "UPLOADED"
                          }
                        },
                        "type": "object",
                        "title": "Document",
                        "x-readme-ref-name": "Document"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get license",
                    "value": {
                      "code": "AL-1234-1234",
                      "name": null,
                      "language": "nl_NL",
                      "notificationGroup": {
                        "technical": false,
                        "financial": true,
                        "operations": false
                      },
                      "platform": {
                        "loginAccount": true,
                        "loginTpa": false,
                        "authorisation": "all",
                        "authorisationGroups": []
                      },
                      "merchant": {
                        "code": "M-1234-1234",
                        "name": "Mijn B.V.",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2023-06-19T11:23:17+02:00",
                      "createdBy": "AT-1234-1234",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/licenses/AL-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "license: {}",
                      "violations": [
                        {
                          "propertyPath": "license",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/licenses": {
      "get": {
        "tags": [
          "Licenses"
        ],
        "summary": "Licenses:Browse",
        "description": "Get all licenses linked to a merchant.",
        "parameters": [
          {
            "name": "merchant",
            "in": "query",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "licenses": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "License code.",
                            "type": "string",
                            "example": "AL-1234-4321"
                          },
                          "name": {
                            "description": "Name of the license.",
                            "type": "string",
                            "example": "John Doe"
                          },
                          "language": {
                            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                            "type": "string",
                            "example": "NL"
                          },
                          "complianceData": {
                            "properties": {
                              "authorizedToSign": {
                                "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                                "type": "string",
                                "enum": [
                                  "no",
                                  "alone",
                                  "shared"
                                ],
                                "example": "shared"
                              },
                              "pep": {
                                "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                "type": "boolean",
                                "example": "true"
                              },
                              "pepDescription": {
                                "description": "Describe in your own words why this person is a PEP.",
                                "type": "string",
                                "example": "The person is active as an alderman in the municipality where he lives."
                              },
                              "ubo": {
                                "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                                "type": "string",
                                "enum": [
                                  "no",
                                  "direct",
                                  "indirect",
                                  "pseudo"
                                ],
                                "example": "direct"
                              },
                              "uboPercentage": {
                                "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                                "type": "integer",
                                "example": "25"
                              },
                              "relationshipDescription": {
                                "description": "Describe in your own words the relation the person has with this company.",
                                "type": "string",
                                "example": "John Doe of test company"
                              }
                            }
                          },
                          "notificationGroup": {
                            "properties": {
                              "technical": {
                                "type": "boolean"
                              },
                              "financial": {
                                "type": "boolean"
                              },
                              "operations": {
                                "type": "boolean"
                              }
                            },
                            "type": "object",
                            "title": "NotificationGroup",
                            "x-readme-ref-name": "NotificationGroup"
                          },
                          "merchant": {
                            "required": [
                              "code",
                              "name",
                              "status"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "name": {
                                "description": "The name of your merchant.",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 2,
                                "example": "CompanyName"
                              },
                              "status": {
                                "description": "Merchant state",
                                "type": "string",
                                "example": "ACTIVE"
                              }
                            },
                            "type": "object",
                            "title": "MerchantMinimal",
                            "x-readme-ref-name": "MerchantMinimal"
                          },
                          "platform": {
                            "properties": {
                              "loginAccount": {
                                "type": "boolean"
                              },
                              "loginTpa": {
                                "type": "boolean"
                              },
                              "authorisation": {
                                "type": "string",
                                "enum": [
                                  "all",
                                  "specified"
                                ]
                              },
                              "authorisationGroups": {
                                "type": "array",
                                "items": {
                                  "description": "Authorisation group identifier",
                                  "type": "string",
                                  "example": "AG-1234-4321"
                                }
                              }
                            },
                            "type": "object",
                            "title": "Platform",
                            "x-readme-ref-name": "Platform"
                          },
                          "documents": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "Code of the acceptance document.",
                                  "type": "string",
                                  "example": "D-1234-1234"
                                },
                                "type": {
                                  "description": "Type of the acceptance document.",
                                  "type": "string",
                                  "example": "identification"
                                },
                                "status": {
                                  "description": "Status of the acceptance document.",
                                  "type": "string",
                                  "example": "UPLOADED"
                                }
                              },
                              "type": "object",
                              "title": "Document",
                              "x-readme-ref-name": "Document"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "PersonLicense",
                        "x-readme-ref-name": "PersonLicense"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Browse licenses",
                    "value": {
                      "total": 1,
                      "licenses": [
                        {
                          "code": "AL-1234-1234",
                          "name": null,
                          "language": "nl_NL",
                          "complianceData": {
                            "authorizedToSign": "shared",
                            "pep": false,
                            "pepDescription": "The person is active as an alderman in the municipality where he lives.",
                            "ubo": "direct",
                            "uboPercentage": 15,
                            "relationshipDescription": null
                          },
                          "notificationGroup": {
                            "technical": false,
                            "financial": true,
                            "operations": false
                          },
                          "platform": {
                            "loginAccount": true,
                            "loginTpa": false,
                            "authorisation": "all",
                            "authorisationGroups": []
                          },
                          "merchant": {
                            "code": "M-1234-1234",
                            "name": "Mijn B.V.",
                            "status": "ACTIVE"
                          },
                          "createdAt": "2023-06-19T11:23:17+02:00",
                          "createdBy": "AT-1234-1234",
                          "modifiedAt": null,
                          "modifiedBy": null,
                          "deletedAt": null,
                          "deletedBy": null,
                          "_links": [
                            {
                              "href": "/licenses/AL-1234-1234",
                              "rel": "self",
                              "type": "GET"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Licenses"
        ],
        "summary": "Licenses:Create",
        "description": "Create a new license and a Pay account under a merchant. You can indicate if the license is authorized to sign or an UBO and you can indicate which rights the account should have. You can also supply a merchant. If a merchant is supplied then you need to have access to that merchant. You need to authenticate with an AT-code as username and a token as password.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "person"
                ],
                "properties": {
                  "merchantCode": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "person": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John",
                        "nullable": true
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "email": {
                        "description": "An email address.",
                        "type": "string",
                        "format": "email",
                        "example": "sandbox@pay.nl"
                      },
                      "language": {
                        "type": "string",
                        "example": "nl_NL"
                      },
                      "phone": {
                        "description": "The subject's phone number. Optionally prepended with a + and country code",
                        "type": "string",
                        "example": "0031612345678"
                      },
                      "newsletter": {
                        "type": "boolean"
                      },
                      "gender": {
                        "type": "string",
                        "enum": [
                          "M",
                          "F"
                        ],
                        "example": "M"
                      },
                      "visitAddress": {
                        "required": [
                          "streetName",
                          "streetNumber",
                          "zipCode",
                          "city",
                          "countryCode"
                        ],
                        "properties": {
                          "streetName": {
                            "description": "The name of the street",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Visitlane"
                          },
                          "streetNumber": {
                            "description": "The street number",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "13"
                          },
                          "zipCode": {
                            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                            "type": "string",
                            "maxLength": 16,
                            "minLength": 1,
                            "example": "5678CD"
                          },
                          "city": {
                            "description": "The name of a city",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Amsterdam"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "NL"
                          }
                        },
                        "type": "object"
                      },
                      "notificationGroup": {
                        "properties": {
                          "technical": {
                            "type": "boolean"
                          },
                          "financial": {
                            "type": "boolean"
                          },
                          "operations": {
                            "type": "boolean"
                          }
                        },
                        "type": "object"
                      },
                      "platform": {
                        "properties": {
                          "loginAccount": {
                            "type": "boolean"
                          },
                          "loginTpa": {
                            "type": "boolean"
                          },
                          "authorisation": {
                            "type": "string",
                            "enum": [
                              "all",
                              "specified"
                            ]
                          },
                          "authorisationGroups": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "AG-1234-4321"
                            }
                          }
                        },
                        "type": "object"
                      },
                      "complianceData": {
                        "properties": {
                          "pep": {
                            "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                            "type": "boolean",
                            "example": "true"
                          },
                          "pepDescription": {
                            "description": "Describe in your own words why this person is a PEP.",
                            "type": "string",
                            "example": "The person is active as an alderman in the municipality where he lives."
                          },
                          "authorizedToSign": {
                            "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                            "type": "string",
                            "enum": [
                              "no",
                              "alone",
                              "shared"
                            ],
                            "example": "shared"
                          },
                          "dateOfBirth": {
                            "description": "Date of birth of the person.",
                            "type": "string",
                            "format": "date-time",
                            "example": "1999-12-12"
                          },
                          "nationality": {
                            "description": "Nationality of the person.",
                            "type": "string",
                            "example": "NL"
                          },
                          "ubo": {
                            "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                            "type": "string",
                            "enum": [
                              "no",
                              "direct",
                              "indirect",
                              "pseudo"
                            ],
                            "example": "direct"
                          },
                          "uboPercentage": {
                            "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                            "type": "integer",
                            "example": "25"
                          },
                          "relationshipDescription": {
                            "description": "Describe in your own words the relation the person has with this company.",
                            "type": "string",
                            "example": "John Doe of test company"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "AddAnUserAccountPayload": {
                  "summary": "Add an user account",
                  "value": {
                    "merchantCode": "M-1234-1234",
                    "person": {
                      "name": "John Doe",
                      "gender": "M",
                      "firstName": "John",
                      "lastName": "Doe",
                      "email": "johndoe@pay.nl",
                      "language": "nl_NL",
                      "phone": "0031612345678",
                      "newsletter": false,
                      "visitAddress": {
                        "streetName": "Visitlane",
                        "streetNumber": "13",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "notificationGroup": {
                        "technical": false,
                        "financial": false,
                        "operations": false
                      },
                      "platform": {
                        "loginAccount": true,
                        "loginTpa": false,
                        "authorisation": "all",
                        "authorisationGroups": []
                      }
                    }
                  }
                },
                "AddAnUboAuthorizedToSignUserAccountPayload": {
                  "summary": "Add an ubo/authorized to sign user user account",
                  "value": {
                    "merchantCode": "M-1234-1234",
                    "person": {
                      "name": "John Doe",
                      "gender": "M",
                      "firstName": "John",
                      "lastName": "Doe",
                      "email": "johndoe@pay.nl",
                      "language": "nl_NL",
                      "phone": "0031612345678",
                      "newsletter": false,
                      "complianceData": {
                        "dateOfBirth": "1980-01-01",
                        "nationality": "NL",
                        "authorizedtoSign": "shared",
                        "pep": true,
                        "pepDescription": "Active as mayor in amsterdam",
                        "ubo": "direct",
                        "uboPercentage": 50,
                        "relationshipDescription": "50% shareholder of the company"
                      },
                      "visitAddress": {
                        "streetName": "Visitlane",
                        "streetNumber": "13",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "regionCode": "ZH",
                        "countryCode": "NL"
                      },
                      "notificationGroup": {
                        "technical": false,
                        "financial": false,
                        "operations": false
                      },
                      "platform": {
                        "loginAccount": true,
                        "loginTpa": false,
                        "authorisation": "all",
                        "authorisationGroups": []
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "License code.",
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "name": {
                      "description": "Name of the license.",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "example": "NL"
                    },
                    "notificationGroup": {
                      "properties": {
                        "technical": {
                          "type": "boolean"
                        },
                        "financial": {
                          "type": "boolean"
                        },
                        "operations": {
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "NotificationGroup",
                      "x-readme-ref-name": "NotificationGroup"
                    },
                    "platform": {
                      "properties": {
                        "loginAccount": {
                          "type": "boolean"
                        },
                        "loginTpa": {
                          "type": "boolean"
                        },
                        "authorisation": {
                          "type": "string",
                          "enum": [
                            "all",
                            "specified"
                          ]
                        },
                        "authorisationGroups": {
                          "type": "array",
                          "items": {
                            "description": "Authorisation group identifier",
                            "type": "string",
                            "example": "AG-1234-4321"
                          }
                        }
                      },
                      "type": "object",
                      "title": "Platform",
                      "x-readme-ref-name": "Platform"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of the acceptance document.",
                            "type": "string",
                            "example": "D-1234-1234"
                          },
                          "type": {
                            "description": "Type of the acceptance document.",
                            "type": "string",
                            "example": "identification"
                          },
                          "status": {
                            "description": "Status of the acceptance document.",
                            "type": "string",
                            "example": "UPLOADED"
                          }
                        },
                        "type": "object",
                        "title": "Document",
                        "x-readme-ref-name": "Document"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get license",
                    "value": {
                      "code": "AL-1234-1234",
                      "name": null,
                      "language": "nl_NL",
                      "notificationGroup": {
                        "technical": false,
                        "financial": true,
                        "operations": false
                      },
                      "platform": {
                        "loginAccount": true,
                        "loginTpa": false,
                        "authorisation": "all",
                        "authorisationGroups": []
                      },
                      "merchant": {
                        "code": "M-1234-1234",
                        "name": "Mijn B.V.",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2023-06-19T11:23:17+02:00",
                      "createdBy": "AT-1234-1234",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/licenses/AL-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "person.firstName: Is empty",
                      "violations": [
                        {
                          "propertyPath": "person.firstName",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Account link already exists",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Account link already exists",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/licenses/{licenseCode}/undelete": {
      "post": {
        "tags": [
          "Licenses"
        ],
        "summary": "Licenses:Undelete",
        "description": "Unsuspend a license that was recently deleted. This can only be done within a 15 minute time window.",
        "parameters": [
          {
            "name": "licenseCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "License code.",
              "type": "string",
              "example": "AL-1234-4321"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "License code.",
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "name": {
                      "description": "Name of the license.",
                      "type": "string",
                      "example": "John Doe"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "example": "NL"
                    },
                    "complianceData": {
                      "properties": {
                        "authorizedToSign": {
                          "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                          "type": "string",
                          "enum": [
                            "no",
                            "alone",
                            "shared"
                          ],
                          "example": "shared"
                        },
                        "pep": {
                          "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                          "type": "boolean",
                          "example": "true"
                        },
                        "pepDescription": {
                          "description": "Describe in your own words why this person is a PEP.",
                          "type": "string",
                          "example": "The person is active as an alderman in the municipality where he lives."
                        },
                        "ubo": {
                          "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                          "type": "string",
                          "enum": [
                            "no",
                            "direct",
                            "indirect",
                            "pseudo"
                          ],
                          "example": "direct"
                        },
                        "uboPercentage": {
                          "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                          "type": "integer",
                          "example": "25"
                        },
                        "relationshipDescription": {
                          "description": "Describe in your own words the relation the person has with this company.",
                          "type": "string",
                          "example": "John Doe of test company"
                        }
                      }
                    },
                    "notificationGroup": {
                      "properties": {
                        "technical": {
                          "type": "boolean"
                        },
                        "financial": {
                          "type": "boolean"
                        },
                        "operations": {
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "NotificationGroup",
                      "x-readme-ref-name": "NotificationGroup"
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "name",
                        "status"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        }
                      },
                      "type": "object",
                      "title": "MerchantMinimal",
                      "x-readme-ref-name": "MerchantMinimal"
                    },
                    "platform": {
                      "properties": {
                        "loginAccount": {
                          "type": "boolean"
                        },
                        "loginTpa": {
                          "type": "boolean"
                        },
                        "authorisation": {
                          "type": "string",
                          "enum": [
                            "all",
                            "specified"
                          ]
                        },
                        "authorisationGroups": {
                          "type": "array",
                          "items": {
                            "description": "Authorisation group identifier",
                            "type": "string",
                            "example": "AG-1234-4321"
                          }
                        }
                      },
                      "type": "object",
                      "title": "Platform",
                      "x-readme-ref-name": "Platform"
                    },
                    "documents": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of the acceptance document.",
                            "type": "string",
                            "example": "D-1234-1234"
                          },
                          "type": {
                            "description": "Type of the acceptance document.",
                            "type": "string",
                            "example": "identification"
                          },
                          "status": {
                            "description": "Status of the acceptance document.",
                            "type": "string",
                            "example": "UPLOADED"
                          }
                        },
                        "type": "object",
                        "title": "Document",
                        "x-readme-ref-name": "Document"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "PersonLicense",
                  "x-readme-ref-name": "PersonLicense"
                },
                "examples": {
                  "success": {
                    "summary": "Get license",
                    "value": {
                      "code": "AL-1234-1234",
                      "name": null,
                      "language": "nl_NL",
                      "complianceData": {
                        "authorizedToSign": "shared",
                        "pep": false,
                        "pepDescription": "The person is active as an alderman in the municipality where he lives.",
                        "ubo": "direct",
                        "uboPercentage": 15,
                        "relationshipDescription": null
                      },
                      "notificationGroup": {
                        "technical": false,
                        "financial": true,
                        "operations": false
                      },
                      "platform": {
                        "loginAccount": true,
                        "loginTpa": false,
                        "authorisation": "all",
                        "authorisationGroups": []
                      },
                      "merchant": {
                        "code": "M-1234-1234",
                        "name": "Mijn B.V.",
                        "status": "ACTIVE"
                      },
                      "createdAt": "2023-06-19T11:23:17+02:00",
                      "createdBy": "AT-1234-1234",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/licenses/AL-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "license: {}",
                      "violations": [
                        {
                          "propertyPath": "license",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/login/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate:Login",
        "description": "Retrieve a handshake to redirect a user to the Pay platform so that a user can access the Pay platform without entering login credentials. Note that the user needs to have the correct rights to use this feature. You need to authenticate this API with the AT-code as username and the token as password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "login",
                  "account"
                ],
                "properties": {
                  "login": {
                    "required": [
                      "inactivityExpire",
                      "internalId",
                      "deviceId",
                      "userAgent"
                    ],
                    "properties": {
                      "inactivityExpire": {
                        "type": "integer",
                        "example": 1800
                      },
                      "internalId": {
                        "type": "string",
                        "example": "John Doe's Bakery"
                      },
                      "deviceId": {
                        "type": "string",
                        "example": "ec81b928b5f7b945cbe1ad97927867a564131eaa"
                      },
                      "ipAddress": {
                        "type": "string",
                        "example": "213.126.82.230"
                      },
                      "userAgent": {
                        "type": "string",
                        "example": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36 RuxitSynthetic/1.0 v5732837501202812829 t1236787695256497497"
                      }
                    },
                    "type": "object"
                  },
                  "account": {
                    "required": [
                      "licenseCode",
                      "label",
                      "languageId",
                      "logoutRedirectUrl"
                    ],
                    "properties": {
                      "licenseCode": {
                        "type": "string",
                        "example": "AL-1234-4321"
                      },
                      "label": {
                        "type": "string",
                        "example": "John Doe"
                      },
                      "languageId": {
                        "type": "string",
                        "example": "nl_NL"
                      },
                      "logoutRedirectUrl": {
                        "type": "string",
                        "example": "https://mijn.3rdparty.nl"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "session": {
                  "summary": "Session",
                  "value": {
                    "login": {
                      "inactivityExpire": 1800,
                      "internalId": "John Doe's Bakery",
                      "deviceId": "ec81b928b5f7b945cbe1ad97927867a564131eaa",
                      "ipAddress": "213.126.82.230",
                      "userAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36 RuxitSynthetic/1.0 v5732837501202812829 t1236787695256497497"
                    },
                    "account": {
                      "licenseCode": "AL-1234-4321",
                      "label": "John Doe",
                      "languageId": "nl_NL",
                      "logoutRedirectUrl": "https://mijn.3rdparty.nl"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "session": {
                      "properties": {
                        "sessionCode": {
                          "type": "string",
                          "example": "LA-1234-4321"
                        },
                        "handshake": {
                          "type": "string",
                          "example": "agftj386jdfjk3489dsfdf824dff"
                        },
                        "internalId": {
                          "type": "string",
                          "example": "John Doe's Bakery"
                        },
                        "licenseCode": {
                          "type": "string",
                          "example": "AL-1234-4321"
                        },
                        "redirectUrl": {
                          "type": "string",
                          "example": "https://dashboard.bakery.com",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "LoginSession",
                      "x-readme-ref-name": "LoginSession"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Session",
                    "value": {
                      "session": {
                        "sessionCode": "LA-1234-4321",
                        "handshake": "agftj386jdfjk3489dsfdf824dff",
                        "internalId": "John Doe's Bakery",
                        "licenseCode": "AL-1234-4321",
                        "redirectUrl": "https://dashboard.bakery.com"
                      },
                      "_links": [
                        {
                          "href": "/login/authenticate",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "login.ipAddress: Is empty\\naccount.label: Is empty",
                      "violations": [
                        {
                          "propertyPath": "login.ipAddress",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        },
                        {
                          "propertyPath": "account.label",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Company is deleted",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Company is deleted",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/mcc": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "Mcc",
        "description": "Get all MCCs.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "mccs": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "A MCC code",
                            "type": "integer",
                            "example": "XXXX"
                          },
                          "description": {
                            "description": "Description of the MCC code.",
                            "type": "string"
                          },
                          "highRisk": {
                            "description": "Should this MCC code be considered high risk?",
                            "type": "boolean"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Mcc",
                        "x-readme-ref-name": "Mcc"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get mccs",
                    "value": {
                      "total": 1,
                      "mccs": [
                        {
                          "code": 742,
                          "description": "Veterinary Services",
                          "highRisk": true,
                          "createdAt": null,
                          "modifiedAt": null,
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/mcc",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/merchants/changelist": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchants:Changelist",
        "description": "Get a list of all merchants that are changed. The API uses pagination. The number of merchants returned for one page equals the limit that you can supply as query parameter. If you do not supply a limit, the limit will be defaulted to 100. You can retrieve the next page by supplying a page number as query parameter",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the returned records. If not supplied we will default to 100 records",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Limit the returned records. If not supplied we will default to 100 records",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "modifiedAt",
            "in": "query",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gt": {
                  "description": "Get results that are greater than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "gte": {
                  "description": "Get results that are greater than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lt": {
                  "description": "Get results that are less than the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                },
                "lte": {
                  "description": "Get results that are less than or equal to the given value",
                  "type": "string",
                  "format": "date",
                  "example": "1999-02-15"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "merchants": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The merchant id of your company starting with M.",
                            "type": "string",
                            "example": "M-1234-4321"
                          },
                          "name": {
                            "description": "The name of your merchant.",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 2,
                            "example": "CompanyName"
                          },
                          "publicName": {
                            "description": "The public name of your merchant.",
                            "type": "string",
                            "example": "CompanyName"
                          },
                          "boardingStatus": {
                            "description": "The status of the boarding process for this merchant.",
                            "type": "string",
                            "enum": [
                              "REGISTERED",
                              "ONBOARDING",
                              "ACCEPTED",
                              "SUSPENDED",
                              "OFFBOARDED"
                            ],
                            "example": "REGISTERED"
                          },
                          "status": {
                            "description": "Merchant state",
                            "type": "string",
                            "example": "ACTIVE"
                          },
                          "payoutStatus": {
                            "description": "Merchant payout state",
                            "type": "string",
                            "enum": [
                              "ENABLED",
                              "DISABLED"
                            ],
                            "example": "Enabled"
                          },
                          "coc": {
                            "description": "Your Chamber of commerce registration number. This format differs per country.",
                            "type": "string",
                            "example": "12345678"
                          },
                          "vat": {
                            "description": "Value added tax identification number (VAT identification number).",
                            "type": "string",
                            "example": "NL807960147B01"
                          },
                          "companyTypeId": {
                            "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                            "type": "string",
                            "example": "1"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "example": "NL"
                          },
                          "contractLanguage": {
                            "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                            "type": "string",
                            "example": "nl_NL"
                          },
                          "contractPackage": {
                            "type": "string"
                          },
                          "accountManager": {
                            "description": "The email address of the active account manager.",
                            "type": "string",
                            "example": "account.manager@pay.nl"
                          },
                          "website": {
                            "description": "The website.",
                            "type": "string",
                            "format": "uri",
                            "example": "https://www.my-website.com"
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The category (code) identifier",
                                  "type": "string",
                                  "maxLength": 40,
                                  "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                                  "example": "CY-1234-4321"
                                },
                                "name": {
                                  "description": "The category name.",
                                  "type": "string",
                                  "example": "Digitale diensten gambling (kansspelen)"
                                },
                                "description": {
                                  "description": "The category's description.",
                                  "type": "string",
                                  "example": "Kansspelen"
                                },
                                "sequence": {
                                  "description": "The sequence of the category.",
                                  "type": "integer"
                                },
                                "available": {
                                  "description": "The category's availability.",
                                  "type": "boolean"
                                },
                                "initialMCC": {
                                  "description": "The initial MCC of the category.",
                                  "type": "integer",
                                  "example": "General Contractors-Residential and Commercial",
                                  "nullable": true
                                },
                                "initialRiskCategory": {
                                  "description": "The initial risk category of the category.",
                                  "type": "string",
                                  "example": "Low risk"
                                },
                                "translations": {
                                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                                  "type": "object",
                                  "uniqueItems": true,
                                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                                  "nullable": true,
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "paymentMethods": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "description": "The payment profile identifier.",
                                        "type": "integer",
                                        "example": "1630"
                                      },
                                      "name": {
                                        "description": "The name of the payment profile.",
                                        "type": "string",
                                        "example": "Pin (Maestro)"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "Category",
                              "x-readme-ref-name": "Category"
                            }
                          },
                          "integrations": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The plugin identifier.",
                                  "type": "string",
                                  "example": "PL-3010-1000"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "clearingAccounts": {
                            "type": "array",
                            "items": {
                              "required": [
                                "code",
                                "status",
                                "method",
                                "iban"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "APPROVED",
                                    "DENIED",
                                    "NOT_CHECKED"
                                  ]
                                },
                                "method": {
                                  "type": "string",
                                  "enum": [
                                    "iban"
                                  ]
                                },
                                "iban": {
                                  "required": [
                                    "iban",
                                    "bic",
                                    "owner"
                                  ],
                                  "properties": {
                                    "iban": {
                                      "description": "The International Bank Account Number (IBAN).",
                                      "type": "string",
                                      "example": "NL69INGB0123456789"
                                    },
                                    "bic": {
                                      "description": "Business Identifier Codes (BIC/SWIFT).",
                                      "type": "string",
                                      "example": "INGBNL2A"
                                    },
                                    "owner": {
                                      "description": "The owner of the bank account.",
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "example": "John Doe"
                                    }
                                  },
                                  "type": "object",
                                  "title": "BankAccount",
                                  "x-readme-ref-name": "BankAccount"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "postalAddress": {
                            "required": [
                              "code",
                              "streetName",
                              "zipCode",
                              "city",
                              "countryCode"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "streetName": {
                                "description": "The name of the street",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Visitlane"
                              },
                              "streetNumber": {
                                "description": "The street number",
                                "type": "string",
                                "maxLength": 32,
                                "minLength": 1,
                                "example": "13"
                              },
                              "zipCode": {
                                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 1,
                                "example": "5678CD"
                              },
                              "city": {
                                "description": "The name of a city",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Amsterdam"
                              },
                              "countryCode": {
                                "description": "The country code consisting of 2 uppercase letters",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "NL"
                              }
                            },
                            "type": "object",
                            "title": "Location",
                            "x-readme-ref-name": "Location"
                          },
                          "visitAddress": {
                            "required": [
                              "code",
                              "streetName",
                              "zipCode",
                              "city",
                              "countryCode"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "streetName": {
                                "description": "The name of the street",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Visitlane"
                              },
                              "streetNumber": {
                                "description": "The street number",
                                "type": "string",
                                "maxLength": 32,
                                "minLength": 1,
                                "example": "13"
                              },
                              "zipCode": {
                                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 1,
                                "example": "5678CD"
                              },
                              "city": {
                                "description": "The name of a city",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Amsterdam"
                              },
                              "countryCode": {
                                "description": "The country code consisting of 2 uppercase letters",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "NL"
                              }
                            },
                            "type": "object",
                            "title": "Location",
                            "x-readme-ref-name": "Location"
                          },
                          "contactMethods": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The contact method ID of your company starting with CM.",
                                  "type": "string",
                                  "example": "CM-1234-4321"
                                },
                                "type": {
                                  "description": "The type of contact method.",
                                  "type": "string",
                                  "enum": [
                                    "email",
                                    "email_support",
                                    "phone",
                                    "phone_helpdesk",
                                    "phone_off_hours",
                                    "url",
                                    "email_msnskype"
                                  ],
                                  "example": "The type of contact method."
                                },
                                "value": {
                                  "description": "The value of the contact method.",
                                  "type": "string",
                                  "example": "088-88 666 22"
                                },
                                "description": {
                                  "description": "The description of the contact method.",
                                  "type": "string"
                                },
                                "public": {
                                  "description": "Is the contact method public accessible",
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "notifications": {
                                  "description": "Does the contact method needs to receive notifications",
                                  "type": "boolean",
                                  "example": "false"
                                }
                              },
                              "type": "object",
                              "title": "ContactMethod",
                              "x-readme-ref-name": "ContactMethod"
                            }
                          },
                          "authenticationTokens": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "authenticationTokens": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "trademarks": {
                            "type": "array",
                            "items": {
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "code": {
                                  "description": "An identifier for this trademark",
                                  "type": "string",
                                  "example": "TM-0000-0000"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "name": {
                                  "description": "A registered trademark name.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Status of the trademark.",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "createdBy": {
                                  "description": "The reference to an account or token whom created the entity",
                                  "type": "string",
                                  "pattern": "^A(T)?(-\\d{4}){2}$",
                                  "readOnly": true,
                                  "example": "A-1234-4321",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "modifiedBy": {
                                  "description": "The reference to an account or token whom modified the entity",
                                  "type": "string",
                                  "pattern": "^A(T)?(-\\d{4}){2}$",
                                  "readOnly": true,
                                  "example": "A-1234-4321",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedBy": {
                                  "description": "The reference to an account or token whom deleted the entity",
                                  "type": "string",
                                  "pattern": "^A(T)?(-\\d{4}){2}$",
                                  "readOnly": true,
                                  "example": "A-1234-4321",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "Trademark",
                              "x-readme-ref-name": "Trademark"
                            }
                          },
                          "licenses": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "AL-1234-4321"
                                },
                                "secret": {
                                  "type": "string",
                                  "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "accountCode": {
                                  "type": "string",
                                  "example": "A-1234-4321"
                                },
                                "firstName": {
                                  "description": "The forename (also known as a given name, Christian name or a first name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John",
                                  "nullable": true
                                },
                                "lastName": {
                                  "description": "The surname (also known as a family name or a last name).",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Doe"
                                },
                                "email": {
                                  "description": "An email address.",
                                  "type": "string",
                                  "format": "email",
                                  "example": "sandbox@pay.nl"
                                },
                                "language": {
                                  "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                                  "type": "string",
                                  "enum": [
                                    "NL",
                                    "EN",
                                    "DE",
                                    "FR",
                                    "IT",
                                    "ES"
                                  ],
                                  "example": "NL"
                                },
                                "phone": {
                                  "description": "The subject's phone number. Optionally prepended with a + and country code",
                                  "type": "string",
                                  "example": "0031612345678"
                                },
                                "visitAddress": {
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "firstName": {
                                      "description": "The forename (also known as a given name, Christian name or a first name).",
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "example": "John"
                                    },
                                    "lastName": {
                                      "description": "The surname (also known as a family name or a last name).",
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "example": "Doe"
                                    },
                                    "streetName": {
                                      "description": "The name of the street",
                                      "type": "string",
                                      "maxLength": 128,
                                      "minLength": 1,
                                      "example": "Visitlane"
                                    },
                                    "streetNumber": {
                                      "description": "The street number",
                                      "type": "string",
                                      "maxLength": 32,
                                      "minLength": 1,
                                      "example": "13"
                                    },
                                    "streetNumberExtension": {
                                      "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                      "type": "string",
                                      "maxLength": 32,
                                      "minLength": 1,
                                      "example": "b1"
                                    },
                                    "zipCode": {
                                      "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                      "type": "string",
                                      "maxLength": 16,
                                      "minLength": 1,
                                      "example": "5678CD"
                                    },
                                    "city": {
                                      "description": "The name of a city",
                                      "type": "string",
                                      "maxLength": 128,
                                      "minLength": 1,
                                      "example": "Amsterdam"
                                    },
                                    "regionCode": {
                                      "description": "Region code (iso-3166-2)",
                                      "type": "string",
                                      "example": "ZH"
                                    },
                                    "countryCode": {
                                      "description": "The country code consisting of 2 uppercase letters",
                                      "type": "string",
                                      "maxLength": 2,
                                      "minLength": 2,
                                      "example": "NL"
                                    }
                                  },
                                  "type": "object",
                                  "title": "Address",
                                  "x-readme-ref-name": "Address"
                                },
                                "complianceData": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "pep": {
                                          "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                          "type": "boolean",
                                          "example": "true"
                                        },
                                        "pepDescription": {
                                          "description": "Describe in your own words why this person is a PEP.",
                                          "type": "string",
                                          "example": "The person is active as an alderman in the municipality where he lives."
                                        },
                                        "dateOfBirth": {
                                          "description": "Date of birth of the person.",
                                          "type": "string",
                                          "format": "date-time",
                                          "example": "1999-12-12"
                                        },
                                        "nationality": {
                                          "description": "Nationality of the person.",
                                          "type": "string",
                                          "example": "NL"
                                        },
                                        "idDocumentNumber": {
                                          "description": "The id document number of the person",
                                          "type": "string",
                                          "example": ""
                                        }
                                      },
                                      "type": "object",
                                      "title": "ComplianceData",
                                      "x-readme-ref-name": "ComplianceData"
                                    },
                                    {
                                      "properties": {
                                        "ubo": {
                                          "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                                          "type": "string",
                                          "enum": [
                                            "no",
                                            "direct",
                                            "indirect",
                                            "pseudo"
                                          ],
                                          "example": "direct"
                                        },
                                        "uboPercentage": {
                                          "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                                          "type": "integer",
                                          "example": "25"
                                        },
                                        "authorizedToSign": {
                                          "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                                          "type": "string",
                                          "enum": [
                                            "no",
                                            "alone",
                                            "shared"
                                          ],
                                          "example": "shared"
                                        },
                                        "relationshipDescription": {
                                          "description": "Describe in your own words the relation the person has with this company.",
                                          "type": "string",
                                          "example": "John Doe of test company"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "title": "ComplianceDataPerson",
                                  "x-readme-ref-name": "ComplianceDataPerson"
                                }
                              },
                              "type": "object",
                              "title": "Person",
                              "x-readme-ref-name": "Person"
                            }
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "secret": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "category": {
                                  "properties": {
                                    "code": {
                                      "description": "The category (code) identifier",
                                      "type": "string",
                                      "maxLength": 40,
                                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                                      "example": "CY-1234-4321"
                                    },
                                    "name": {
                                      "description": "The category name.",
                                      "type": "string",
                                      "example": "Digitale diensten gambling (kansspelen)"
                                    }
                                  },
                                  "type": "object"
                                },
                                "integration": {
                                  "properties": {
                                    "code": {
                                      "description": "The plugin identifier.",
                                      "type": "string",
                                      "example": "PL-3010-1000"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "website": {
                                  "description": "The website URL.",
                                  "type": "string",
                                  "example": "https://www.pay.nl"
                                },
                                "urls": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "code": {
                                        "description": "The code of the website URL.",
                                        "type": "string",
                                        "example": "WU-1234-1234"
                                      },
                                      "website": {
                                        "description": "The website URL.",
                                        "type": "string",
                                        "example": "https://www.pay.nl"
                                      }
                                    },
                                    "type": "object",
                                    "title": "WebsiteUrl",
                                    "x-readme-ref-name": "WebsiteUrl"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "partner": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "M-1234-4321"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "accessToMerchant": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "title": "Partner",
                              "x-readme-ref-name": "Partner"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "acceptedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "suspendedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "suspendedBy": {
                            "description": "SUSPENDED_BY_DESCRIPTION",
                            "type": "string",
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "reviewedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "nextReviewDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "type": "object",
                        "title": "Merchant",
                        "x-readme-ref-name": "Merchant"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "List of all changed merchants",
                    "value": {
                      "total": 44802,
                      "count": 1,
                      "merchants": [
                        {
                          "code": "M-1234-4321",
                          "name": "CompanyName",
                          "publicName": "CompanyName",
                          "boardingStatus": "ACCEPTED",
                          "status": "ACTIVE",
                          "payoutStatus": "ENABLED",
                          "coc": "12345678",
                          "vat": "NL0123456789",
                          "companyTypeId": "1",
                          "countryCode": "NL",
                          "contractLanguage": "nl_NL",
                          "contractPackage": "Merchant by Alliance",
                          "website": "https://pay.nl/",
                          "postalAddress": {
                            "code": "AS-1234-43",
                            "streetName": "Deliverylane",
                            "streetNumber": "70",
                            "zipCode": "5678 CD",
                            "city": "Amsterdam",
                            "countryCode": "NL"
                          },
                          "visitAddress": {
                            "code": "AS-1234-43",
                            "streetName": "Visitstreet",
                            "streetNumber": "2",
                            "zipCode": "56273",
                            "city": "London",
                            "countryCode": "UK"
                          },
                          "partner": [
                            {
                              "code": "M-1234-4321",
                              "name": "ReferredCompany",
                              "type": "REFERRAL",
                              "accessToMerchant": true
                            }
                          ],
                          "createdAt": "2014-04-15T11:29:03+02:00",
                          "createdBy": "A-1234-4321",
                          "acceptedAt": "2014-12-17T18:38:55+01:00",
                          "suspendedAt": null,
                          "suspendedBy": null,
                          "modifiedAt": "2014-12-21T15:21:36+01:00",
                          "modifiedBy": "A-1234-4321",
                          "deletedAt": null,
                          "deletedBy": null,
                          "reviewedAt": "2017-02-22T10:38:43+01:00",
                          "nextReviewDate": "2017-03-22T10:38:43+01:00",
                          "_links": [
                            {
                              "href": "/merchants/M-1234-4321",
                              "rel": "merchant",
                              "type": "GET"
                            }
                          ]
                        }
                      ],
                      "_links": {
                        "self": {
                          "href": "/merchants/changelist?limit=1&modifiedAt[gte]=2014-12-15",
                          "rel": "self",
                          "type": "GET"
                        },
                        "first": {
                          "href": "/merchants/changelist?limit=1&page=1&modifiedAt[gte]=2014-12-15"
                        },
                        "previous": {
                          "href": "/merchants/changelist?limit=1&page=1&modifiedAt[gte]=2014-12-15"
                        },
                        "next": {
                          "href": "/merchants/changelist?limit=1&page=3&modifiedAt[gte]=2014-12-15"
                        },
                        "last": {
                          "href": "/merchants/changelist?limit=1&page=44802"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Invalid page number",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "The lowest available page is 1",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "The lowest available page is 1",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/merchants/{merchantCode}": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchants:Get",
        "description": "Get the details of a specific merchant",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant id of your company starting with M.",
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "description": "The name of your merchant.",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 2,
                      "example": "CompanyName"
                    },
                    "publicName": {
                      "description": "The public name of your merchant.",
                      "type": "string",
                      "example": "CompanyName"
                    },
                    "boardingStatus": {
                      "description": "The status of the boarding process for this merchant.",
                      "type": "string",
                      "enum": [
                        "REGISTERED",
                        "ONBOARDING",
                        "ACCEPTED",
                        "SUSPENDED",
                        "OFFBOARDED"
                      ],
                      "example": "REGISTERED"
                    },
                    "payoutStatus": {
                      "description": "Merchant payout state",
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ],
                      "example": "Enabled"
                    },
                    "status": {
                      "description": "Merchant state",
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "coc": {
                      "description": "Your Chamber of commerce registration number. This format differs per country.",
                      "type": "string",
                      "example": "12345678"
                    },
                    "vat": {
                      "description": "Value added tax identification number (VAT identification number).",
                      "type": "string",
                      "example": "NL807960147B01"
                    },
                    "companyTypeId": {
                      "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                      "type": "string",
                      "example": "1"
                    },
                    "countryCode": {
                      "description": "The country code consisting of 2 uppercase letters",
                      "type": "string",
                      "example": "NL"
                    },
                    "contractLanguage": {
                      "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                      "type": "string",
                      "example": "nl_NL"
                    },
                    "contractPackage": {
                      "type": "string"
                    },
                    "website": {
                      "description": "The website.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.my-website.com"
                    },
                    "postalAddress": {
                      "required": [
                        "code",
                        "streetName",
                        "zipCode",
                        "city",
                        "countryCode"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Location",
                      "x-readme-ref-name": "Location"
                    },
                    "visitAddress": {
                      "required": [
                        "code",
                        "streetName",
                        "zipCode",
                        "city",
                        "countryCode"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Location",
                      "x-readme-ref-name": "Location"
                    },
                    "partner": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "M-1234-4321"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "accessToMerchant": {
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "title": "Partner",
                        "x-readme-ref-name": "Partner"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "acceptedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "suspendedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "suspendedBy": {
                      "description": "SUSPENDED_BY_DESCRIPTION",
                      "type": "string",
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "reviewedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "nextReviewDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "View a merchant",
                    "value": {
                      "code": "M-1234-4321",
                      "name": "CompanyName",
                      "publicName": "CompanyName",
                      "boardingStatus": "ACCEPTED",
                      "status": "ACTIVE",
                      "payoutStatus": "ENABLED",
                      "coc": "12345678",
                      "vat": "NL0123456789",
                      "companyTypeId": "1",
                      "countryCode": "NL",
                      "contractLanguage": "nl_NL",
                      "contractPackage": "Merchant by Alliance",
                      "website": "https://pay.nl/",
                      "postalAddress": {
                        "code": "AS-1234-43",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678 CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "visitAddress": {
                        "code": "AS-1234-43",
                        "streetName": "Visitstreet",
                        "streetNumber": "2",
                        "zipCode": "56273",
                        "city": "London",
                        "countryCode": "UK"
                      },
                      "partner": [
                        {
                          "code": "M-1234-4321",
                          "name": "ReferredCompany",
                          "type": "REFERRAL",
                          "accessToMerchant": true
                        }
                      ],
                      "createdAt": "2014-04-15T11:29:03+02:00",
                      "createdBy": "A-1234-4321",
                      "acceptedAt": "2014-12-17T18:38:55+01:00",
                      "suspendedAt": null,
                      "suspendedBy": null,
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "reviewedAt": "2017-02-22T10:38:43+01:00",
                      "nextReviewDate": "2017-03-22T10:38:43+01:00",
                      "_links": [
                        {
                          "href": "/merchants/M-1234-4321",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchant:Delete",
        "description": "Delete a merchant. The merchant is not able to process payments anymore and cannot login to Pay anymore",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchant:Update",
        "description": "Update the merchant data. If you want to update the relating objects (e.g. authentication tokens or accounts etc) you can use the specific endpoints for that. You need to have access to the merchantCode that you supply or it needs to be your own merchantCode. You need to authenticate with an AT-code as username and the corresponding token as password.",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "merchant"
                ],
                "properties": {
                  "merchant": {
                    "properties": {
                      "name": {
                        "description": "The name of your merchant.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 2,
                        "example": "CompanyName"
                      },
                      "publicName": {
                        "description": "The public name of your merchant.",
                        "type": "string",
                        "example": "CompanyName"
                      },
                      "coc": {
                        "description": "Your Chamber of commerce registration number. This format differs per country.",
                        "type": "string",
                        "example": "12345678"
                      },
                      "vat": {
                        "description": "Value added tax identification number (VAT identification number).",
                        "type": "string",
                        "example": "NL807960147B01"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "example": "NL"
                      },
                      "companyTypeId": {
                        "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                        "type": "string",
                        "example": "1"
                      },
                      "contractLanguage": {
                        "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                        "type": "string",
                        "example": "nl_NL"
                      },
                      "visitAddress": {
                        "required": [
                          "streetName",
                          "streetNumber",
                          "zipCode",
                          "city"
                        ],
                        "properties": {
                          "streetName": {
                            "description": "The name of the street",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Visitlane"
                          },
                          "streetNumber": {
                            "description": "The street number",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "13"
                          },
                          "zipCode": {
                            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                            "type": "string",
                            "maxLength": 16,
                            "minLength": 1,
                            "example": "5678CD"
                          },
                          "city": {
                            "description": "The name of a city",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Amsterdam"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "NL"
                          }
                        },
                        "type": "object"
                      },
                      "postalAddress": {
                        "required": [
                          "streetName",
                          "streetNumber",
                          "zipCode",
                          "city"
                        ],
                        "properties": {
                          "streetName": {
                            "description": "The name of the street",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Visitlane"
                          },
                          "streetNumber": {
                            "description": "The street number",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "13"
                          },
                          "zipCode": {
                            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                            "type": "string",
                            "maxLength": 16,
                            "minLength": 1,
                            "example": "5678CD"
                          },
                          "city": {
                            "description": "The name of a city",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Amsterdam"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "NL"
                          }
                        },
                        "type": "object"
                      },
                      "suspendedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2016-06-04T08:15:00+01:00",
                        "nullable": true
                      },
                      "reviewRequest": {
                        "properties": {
                          "reason": {
                            "type": "string"
                          },
                          "indicator": {
                            "type": "string",
                            "enum": [
                              "RISK",
                              "COMPLIANCE"
                            ]
                          },
                          "settlement": {
                            "type": "string",
                            "enum": [
                              "OFF"
                            ]
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "suspendMerchant": {
                  "summary": "Suspend a merchant",
                  "value": {
                    "merchant": {
                      "suspendedAt": "2023-10-30T14:00:00+02:00"
                    }
                  }
                },
                "unsuspendMerchant": {
                  "summary": "Unsuspend a merchant",
                  "value": {
                    "merchant": {
                      "suspendedAt": null
                    }
                  }
                },
                "updateCompanyName": {
                  "summary": "Update merchant name",
                  "value": {
                    "merchant": {
                      "name": "CompanyName"
                    }
                  }
                },
                "triggerMerchantReview": {
                  "summary": "Request a review",
                  "value": {
                    "merchant": {
                      "reviewRequest": {
                        "reason": "Possible fraud detected",
                        "indicator": "RISK",
                        "settlement": "OFF"
                      }
                    }
                  }
                },
                "full": {
                  "summary": "Full merchant update",
                  "value": {
                    "merchant": {
                      "name": "CompanyName",
                      "publicName": "publicName",
                      "coc": "12345678",
                      "vat": "NL807960147B01",
                      "companyTypeId": "1",
                      "contractLanguage": "nl_NL",
                      "visitAddress": {
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678 CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "postalAddress": {
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678 CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant id of your company starting with M.",
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "description": "The name of your merchant.",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 2,
                      "example": "CompanyName"
                    },
                    "publicName": {
                      "description": "The public name of your merchant.",
                      "type": "string",
                      "example": "CompanyName"
                    },
                    "boardingStatus": {
                      "description": "The status of the boarding process for this merchant.",
                      "type": "string",
                      "enum": [
                        "REGISTERED",
                        "ONBOARDING",
                        "ACCEPTED",
                        "SUSPENDED",
                        "OFFBOARDED"
                      ],
                      "example": "REGISTERED"
                    },
                    "status": {
                      "description": "Merchant state",
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "payoutStatus": {
                      "description": "Merchant payout state",
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ],
                      "example": "Enabled"
                    },
                    "coc": {
                      "description": "Your Chamber of commerce registration number. This format differs per country.",
                      "type": "string",
                      "example": "12345678"
                    },
                    "vat": {
                      "description": "Value added tax identification number (VAT identification number).",
                      "type": "string",
                      "example": "NL807960147B01"
                    },
                    "companyTypeId": {
                      "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                      "type": "string",
                      "example": "1"
                    },
                    "countryCode": {
                      "description": "The country code consisting of 2 uppercase letters",
                      "type": "string",
                      "example": "NL"
                    },
                    "contractLanguage": {
                      "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                      "type": "string",
                      "example": "nl_NL"
                    },
                    "contractPackage": {
                      "type": "string"
                    },
                    "website": {
                      "description": "The website.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.my-website.com"
                    },
                    "postalAddress": {
                      "required": [
                        "code",
                        "streetName",
                        "zipCode",
                        "city",
                        "countryCode"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Location",
                      "x-readme-ref-name": "Location"
                    },
                    "visitAddress": {
                      "required": [
                        "code",
                        "streetName",
                        "zipCode",
                        "city",
                        "countryCode"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Location",
                      "x-readme-ref-name": "Location"
                    },
                    "partner": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "M-1234-4321"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "accessToMerchant": {
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "title": "Partner",
                        "x-readme-ref-name": "Partner"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "acceptedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "suspendedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "suspendedBy": {
                      "description": "SUSPENDED_BY_DESCRIPTION",
                      "type": "string",
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "reviewedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "nextReviewDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "View a merchant",
                    "value": {
                      "code": "M-1234-4321",
                      "name": "CompanyName",
                      "publicName": "CompanyName",
                      "boardingStatus": "ACCEPTED",
                      "status": "ACTIVE",
                      "payoutStatus": "ENABLED",
                      "coc": "12345678",
                      "vat": "NL0123456789",
                      "companyTypeId": "1",
                      "countryCode": "NL",
                      "contractLanguage": "nl_NL",
                      "contractPackage": "Merchant by Alliance",
                      "website": "https://pay.nl/",
                      "postalAddress": {
                        "code": "AS-1234-43",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678 CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "visitAddress": {
                        "code": "AS-1234-43",
                        "streetName": "Visitstreet",
                        "streetNumber": "2",
                        "zipCode": "56273",
                        "city": "London",
                        "countryCode": "UK"
                      },
                      "partner": [
                        {
                          "code": "M-1234-4321",
                          "name": "ReferredCompany",
                          "type": "REFERRAL",
                          "accessToMerchant": true
                        }
                      ],
                      "createdAt": "2014-04-15T11:29:03+02:00",
                      "createdBy": "A-1234-4321",
                      "acceptedAt": "2014-12-17T18:38:55+01:00",
                      "suspendedAt": null,
                      "suspendedBy": null,
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "reviewedAt": "2017-02-22T10:38:43+01:00",
                      "nextReviewDate": "2017-03-22T10:38:43+01:00",
                      "_links": [
                        {
                          "href": "/merchants/M-1234-4321",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "errors": {
                        "merchant": {
                          "name": {
                            "message": "is_empty",
                            "code": "PAY-2828"
                          },
                          "contractLanguage": {
                            "message": "is_empty",
                            "code": "PAY-2828"
                          }
                        }
                      },
                      "_links": [
                        {
                          "href": "/merchants",
                          "rel": "self",
                          "type": "PATCH"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Merchant does not exist",
                    "value": {
                      "errors": {
                        "general": {
                          "code": "PAY-3000",
                          "message": "The merchant does not exist"
                        }
                      },
                      "_links": [
                        {
                          "href": "/merchants",
                          "rel": "self",
                          "type": "PATCH"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/merchants": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchants:Browse",
        "description": "Get a list of all merchants",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "merchants": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The merchant id of your company starting with M.",
                            "type": "string",
                            "example": "M-1234-4321"
                          },
                          "name": {
                            "description": "The name of your merchant.",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 2,
                            "example": "CompanyName"
                          },
                          "publicName": {
                            "description": "The public name of your merchant.",
                            "type": "string",
                            "example": "CompanyName"
                          },
                          "boardingStatus": {
                            "description": "The status of the boarding process for this merchant.",
                            "type": "string",
                            "enum": [
                              "REGISTERED",
                              "ONBOARDING",
                              "ACCEPTED",
                              "SUSPENDED",
                              "OFFBOARDED"
                            ],
                            "example": "REGISTERED"
                          },
                          "status": {
                            "description": "Merchant state",
                            "type": "string",
                            "example": "ACTIVE"
                          },
                          "payoutStatus": {
                            "description": "Merchant payout state",
                            "type": "string",
                            "enum": [
                              "ENABLED",
                              "DISABLED"
                            ],
                            "example": "Enabled"
                          },
                          "coc": {
                            "description": "Your Chamber of commerce registration number. This format differs per country.",
                            "type": "string",
                            "example": "12345678"
                          },
                          "vat": {
                            "description": "Value added tax identification number (VAT identification number).",
                            "type": "string",
                            "example": "NL807960147B01"
                          },
                          "companyTypeId": {
                            "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                            "type": "string",
                            "example": "1"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "example": "NL"
                          },
                          "contractLanguage": {
                            "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                            "type": "string",
                            "example": "nl_NL"
                          },
                          "contractPackage": {
                            "type": "string"
                          },
                          "accountManager": {
                            "description": "The email address of the active account manager.",
                            "type": "string",
                            "example": "account.manager@pay.nl"
                          },
                          "website": {
                            "description": "The website.",
                            "type": "string",
                            "format": "uri",
                            "example": "https://www.my-website.com"
                          },
                          "categories": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The category (code) identifier",
                                  "type": "string",
                                  "maxLength": 40,
                                  "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                                  "example": "CY-1234-4321"
                                },
                                "name": {
                                  "description": "The category name.",
                                  "type": "string",
                                  "example": "Digitale diensten gambling (kansspelen)"
                                },
                                "description": {
                                  "description": "The category's description.",
                                  "type": "string",
                                  "example": "Kansspelen"
                                },
                                "sequence": {
                                  "description": "The sequence of the category.",
                                  "type": "integer"
                                },
                                "available": {
                                  "description": "The category's availability.",
                                  "type": "boolean"
                                },
                                "initialMCC": {
                                  "description": "The initial MCC of the category.",
                                  "type": "integer",
                                  "example": "General Contractors-Residential and Commercial",
                                  "nullable": true
                                },
                                "initialRiskCategory": {
                                  "description": "The initial risk category of the category.",
                                  "type": "string",
                                  "example": "Low risk"
                                },
                                "translations": {
                                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                                  "type": "object",
                                  "uniqueItems": true,
                                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                                  "nullable": true,
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "paymentMethods": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "description": "The payment profile identifier.",
                                        "type": "integer",
                                        "example": "1630"
                                      },
                                      "name": {
                                        "description": "The name of the payment profile.",
                                        "type": "string",
                                        "example": "Pin (Maestro)"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "Category",
                              "x-readme-ref-name": "Category"
                            }
                          },
                          "integrations": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The plugin identifier.",
                                  "type": "string",
                                  "example": "PL-3010-1000"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "clearingAccounts": {
                            "type": "array",
                            "items": {
                              "required": [
                                "code",
                                "status",
                                "method",
                                "iban"
                              ],
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "APPROVED",
                                    "DENIED",
                                    "NOT_CHECKED"
                                  ]
                                },
                                "method": {
                                  "type": "string",
                                  "enum": [
                                    "iban"
                                  ]
                                },
                                "iban": {
                                  "required": [
                                    "iban",
                                    "bic",
                                    "owner"
                                  ],
                                  "properties": {
                                    "iban": {
                                      "description": "The International Bank Account Number (IBAN).",
                                      "type": "string",
                                      "example": "NL69INGB0123456789"
                                    },
                                    "bic": {
                                      "description": "Business Identifier Codes (BIC/SWIFT).",
                                      "type": "string",
                                      "example": "INGBNL2A"
                                    },
                                    "owner": {
                                      "description": "The owner of the bank account.",
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "example": "John Doe"
                                    }
                                  },
                                  "type": "object",
                                  "title": "BankAccount",
                                  "x-readme-ref-name": "BankAccount"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "postalAddress": {
                            "required": [
                              "code",
                              "streetName",
                              "zipCode",
                              "city",
                              "countryCode"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "streetName": {
                                "description": "The name of the street",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Visitlane"
                              },
                              "streetNumber": {
                                "description": "The street number",
                                "type": "string",
                                "maxLength": 32,
                                "minLength": 1,
                                "example": "13"
                              },
                              "zipCode": {
                                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 1,
                                "example": "5678CD"
                              },
                              "city": {
                                "description": "The name of a city",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Amsterdam"
                              },
                              "countryCode": {
                                "description": "The country code consisting of 2 uppercase letters",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "NL"
                              }
                            },
                            "type": "object",
                            "title": "Location",
                            "x-readme-ref-name": "Location"
                          },
                          "visitAddress": {
                            "required": [
                              "code",
                              "streetName",
                              "zipCode",
                              "city",
                              "countryCode"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "streetName": {
                                "description": "The name of the street",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Visitlane"
                              },
                              "streetNumber": {
                                "description": "The street number",
                                "type": "string",
                                "maxLength": 32,
                                "minLength": 1,
                                "example": "13"
                              },
                              "zipCode": {
                                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 1,
                                "example": "5678CD"
                              },
                              "city": {
                                "description": "The name of a city",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Amsterdam"
                              },
                              "countryCode": {
                                "description": "The country code consisting of 2 uppercase letters",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "NL"
                              }
                            },
                            "type": "object",
                            "title": "Location",
                            "x-readme-ref-name": "Location"
                          },
                          "contactMethods": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The contact method ID of your company starting with CM.",
                                  "type": "string",
                                  "example": "CM-1234-4321"
                                },
                                "type": {
                                  "description": "The type of contact method.",
                                  "type": "string",
                                  "enum": [
                                    "email",
                                    "email_support",
                                    "phone",
                                    "phone_helpdesk",
                                    "phone_off_hours",
                                    "url",
                                    "email_msnskype"
                                  ],
                                  "example": "The type of contact method."
                                },
                                "value": {
                                  "description": "The value of the contact method.",
                                  "type": "string",
                                  "example": "088-88 666 22"
                                },
                                "description": {
                                  "description": "The description of the contact method.",
                                  "type": "string"
                                },
                                "public": {
                                  "description": "Is the contact method public accessible",
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "notifications": {
                                  "description": "Does the contact method needs to receive notifications",
                                  "type": "boolean",
                                  "example": "false"
                                }
                              },
                              "type": "object",
                              "title": "ContactMethod",
                              "x-readme-ref-name": "ContactMethod"
                            }
                          },
                          "authenticationTokens": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "authenticationTokens": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "trademarks": {
                            "type": "array",
                            "items": {
                              "required": [
                                "name"
                              ],
                              "properties": {
                                "code": {
                                  "description": "An identifier for this trademark",
                                  "type": "string",
                                  "example": "TM-0000-0000"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "name": {
                                  "description": "A registered trademark name.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Status of the trademark.",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "createdBy": {
                                  "description": "The reference to an account or token whom created the entity",
                                  "type": "string",
                                  "pattern": "^A(T)?(-\\d{4}){2}$",
                                  "readOnly": true,
                                  "example": "A-1234-4321",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "modifiedBy": {
                                  "description": "The reference to an account or token whom modified the entity",
                                  "type": "string",
                                  "pattern": "^A(T)?(-\\d{4}){2}$",
                                  "readOnly": true,
                                  "example": "A-1234-4321",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedBy": {
                                  "description": "The reference to an account or token whom deleted the entity",
                                  "type": "string",
                                  "pattern": "^A(T)?(-\\d{4}){2}$",
                                  "readOnly": true,
                                  "example": "A-1234-4321",
                                  "nullable": true
                                }
                              },
                              "type": "object",
                              "title": "Trademark",
                              "x-readme-ref-name": "Trademark"
                            }
                          },
                          "licenses": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "AL-1234-4321"
                                },
                                "secret": {
                                  "type": "string",
                                  "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "accountCode": {
                                  "type": "string",
                                  "example": "A-1234-4321"
                                },
                                "firstName": {
                                  "description": "The forename (also known as a given name, Christian name or a first name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John",
                                  "nullable": true
                                },
                                "lastName": {
                                  "description": "The surname (also known as a family name or a last name).",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Doe"
                                },
                                "email": {
                                  "description": "An email address.",
                                  "type": "string",
                                  "format": "email",
                                  "example": "sandbox@pay.nl"
                                },
                                "language": {
                                  "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                                  "type": "string",
                                  "enum": [
                                    "NL",
                                    "EN",
                                    "DE",
                                    "FR",
                                    "IT",
                                    "ES"
                                  ],
                                  "example": "NL"
                                },
                                "phone": {
                                  "description": "The subject's phone number. Optionally prepended with a + and country code",
                                  "type": "string",
                                  "example": "0031612345678"
                                },
                                "visitAddress": {
                                  "properties": {
                                    "code": {
                                      "type": "string"
                                    },
                                    "firstName": {
                                      "description": "The forename (also known as a given name, Christian name or a first name).",
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "example": "John"
                                    },
                                    "lastName": {
                                      "description": "The surname (also known as a family name or a last name).",
                                      "type": "string",
                                      "maxLength": 64,
                                      "minLength": 1,
                                      "example": "Doe"
                                    },
                                    "streetName": {
                                      "description": "The name of the street",
                                      "type": "string",
                                      "maxLength": 128,
                                      "minLength": 1,
                                      "example": "Visitlane"
                                    },
                                    "streetNumber": {
                                      "description": "The street number",
                                      "type": "string",
                                      "maxLength": 32,
                                      "minLength": 1,
                                      "example": "13"
                                    },
                                    "streetNumberExtension": {
                                      "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                      "type": "string",
                                      "maxLength": 32,
                                      "minLength": 1,
                                      "example": "b1"
                                    },
                                    "zipCode": {
                                      "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                      "type": "string",
                                      "maxLength": 16,
                                      "minLength": 1,
                                      "example": "5678CD"
                                    },
                                    "city": {
                                      "description": "The name of a city",
                                      "type": "string",
                                      "maxLength": 128,
                                      "minLength": 1,
                                      "example": "Amsterdam"
                                    },
                                    "regionCode": {
                                      "description": "Region code (iso-3166-2)",
                                      "type": "string",
                                      "example": "ZH"
                                    },
                                    "countryCode": {
                                      "description": "The country code consisting of 2 uppercase letters",
                                      "type": "string",
                                      "maxLength": 2,
                                      "minLength": 2,
                                      "example": "NL"
                                    }
                                  },
                                  "type": "object",
                                  "title": "Address",
                                  "x-readme-ref-name": "Address"
                                },
                                "complianceData": {
                                  "allOf": [
                                    {
                                      "properties": {
                                        "pep": {
                                          "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                          "type": "boolean",
                                          "example": "true"
                                        },
                                        "pepDescription": {
                                          "description": "Describe in your own words why this person is a PEP.",
                                          "type": "string",
                                          "example": "The person is active as an alderman in the municipality where he lives."
                                        },
                                        "dateOfBirth": {
                                          "description": "Date of birth of the person.",
                                          "type": "string",
                                          "format": "date-time",
                                          "example": "1999-12-12"
                                        },
                                        "nationality": {
                                          "description": "Nationality of the person.",
                                          "type": "string",
                                          "example": "NL"
                                        },
                                        "idDocumentNumber": {
                                          "description": "The id document number of the person",
                                          "type": "string",
                                          "example": ""
                                        }
                                      },
                                      "type": "object",
                                      "title": "ComplianceData",
                                      "x-readme-ref-name": "ComplianceData"
                                    },
                                    {
                                      "properties": {
                                        "ubo": {
                                          "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                                          "type": "string",
                                          "enum": [
                                            "no",
                                            "direct",
                                            "indirect",
                                            "pseudo"
                                          ],
                                          "example": "direct"
                                        },
                                        "uboPercentage": {
                                          "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                                          "type": "integer",
                                          "example": "25"
                                        },
                                        "authorizedToSign": {
                                          "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                                          "type": "string",
                                          "enum": [
                                            "no",
                                            "alone",
                                            "shared"
                                          ],
                                          "example": "shared"
                                        },
                                        "relationshipDescription": {
                                          "description": "Describe in your own words the relation the person has with this company.",
                                          "type": "string",
                                          "example": "John Doe of test company"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  ],
                                  "title": "ComplianceDataPerson",
                                  "x-readme-ref-name": "ComplianceDataPerson"
                                }
                              },
                              "type": "object",
                              "title": "Person",
                              "x-readme-ref-name": "Person"
                            }
                          },
                          "services": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "secret": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "status": {
                                  "type": "string"
                                },
                                "category": {
                                  "properties": {
                                    "code": {
                                      "description": "The category (code) identifier",
                                      "type": "string",
                                      "maxLength": 40,
                                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                                      "example": "CY-1234-4321"
                                    },
                                    "name": {
                                      "description": "The category name.",
                                      "type": "string",
                                      "example": "Digitale diensten gambling (kansspelen)"
                                    }
                                  },
                                  "type": "object"
                                },
                                "integration": {
                                  "properties": {
                                    "code": {
                                      "description": "The plugin identifier.",
                                      "type": "string",
                                      "example": "PL-3010-1000"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                },
                                "website": {
                                  "description": "The website URL.",
                                  "type": "string",
                                  "example": "https://www.pay.nl"
                                },
                                "urls": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "code": {
                                        "description": "The code of the website URL.",
                                        "type": "string",
                                        "example": "WU-1234-1234"
                                      },
                                      "website": {
                                        "description": "The website URL.",
                                        "type": "string",
                                        "example": "https://www.pay.nl"
                                      }
                                    },
                                    "type": "object",
                                    "title": "WebsiteUrl",
                                    "x-readme-ref-name": "WebsiteUrl"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "partner": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "M-1234-4321"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                },
                                "accessToMerchant": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object",
                              "title": "Partner",
                              "x-readme-ref-name": "Partner"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "acceptedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "suspendedAt": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "suspendedBy": {
                            "description": "SUSPENDED_BY_DESCRIPTION",
                            "type": "string",
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "reviewedAt": {
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "nextReviewDate": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "type": "object",
                        "title": "Merchant",
                        "x-readme-ref-name": "Merchant"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "List all merchants",
                    "value": {
                      "total": 1,
                      "merchants": [
                        {
                          "code": "M-1234-4321",
                          "name": "CompanyName",
                          "publicName": "CompanyName",
                          "boardingStatus": "ACCEPTED",
                          "status": "ACTIVE",
                          "payoutStatus": "ENABLED",
                          "coc": "12345678",
                          "vat": "NL0123456789",
                          "companyTypeId": "1",
                          "countryCode": "NL",
                          "contractLanguage": "nl_NL",
                          "contractPackage": "Merchant by Alliance",
                          "website": "https://pay.nl/",
                          "postalAddress": {
                            "code": "AS-1234-43",
                            "streetName": "Deliverylane",
                            "streetNumber": "70",
                            "zipCode": "5678 CD",
                            "city": "Amsterdam",
                            "countryCode": "NL"
                          },
                          "visitAddress": {
                            "code": "AS-1234-43",
                            "streetName": "Visitstreet",
                            "streetNumber": "2",
                            "zipCode": "56273",
                            "city": "London",
                            "countryCode": "UK"
                          },
                          "partner": [
                            {
                              "code": "M-1234-4321",
                              "name": "ReferredCompany",
                              "type": "REFERRAL",
                              "accessToMerchant": true
                            }
                          ],
                          "createdAt": "2014-04-15T11:29:03+02:00",
                          "createdBy": "A-1234-4321",
                          "acceptedAt": "2014-12-17T18:38:55+01:00",
                          "suspendedAt": null,
                          "suspendedBy": null,
                          "modifiedAt": null,
                          "modifiedBy": null,
                          "deletedAt": null,
                          "deletedBy": null,
                          "reviewedAt": "2017-02-22T10:38:43+01:00",
                          "nextReviewDate": "2017-03-22T10:38:43+01:00",
                          "_links": [
                            {
                              "href": "/merchants/M-1234-4321",
                              "rel": "merchant",
                              "type": "GET"
                            }
                          ]
                        }
                      ],
                      "_links": [
                        {
                          "href": "/merchants",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchants:Create",
        "description": "Register a merchant so that the merchant is able to use Pay. to process payments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "merchant"
                ],
                "properties": {
                  "partner": {
                    "required": [
                      "referralProfileCode"
                    ],
                    "properties": {
                      "connectionType": {
                        "description": "Indicate which type of partner agreement you have with us",
                        "type": "string",
                        "enum": [
                          "BP",
                          "ALLIANCE",
                          "ISO",
                          "FI",
                          "SP"
                        ],
                        "example": "BP"
                      },
                      "referralProfileCode": {
                        "description": "Indicate under which package you want to create a merchant. You can retrieve a list of available package by calling Packages API endpoint (see: https://developer.pay.nl/reference/get_packages )",
                        "type": "string",
                        "example": "CP-1234-4321"
                      },
                      "accessToMerchant": {
                        "description": "Indicate if you want to have access to the merchant. Only applicable for connectionType BP and ISO. An alliance always have access to their submerchants",
                        "type": "boolean",
                        "example": true,
                        "nullable": true
                      }
                    },
                    "type": "object"
                  },
                  "merchant": {
                    "required": [
                      "name",
                      "coc",
                      "companyTypeId",
                      "countryCode",
                      "contractLanguage",
                      "visitAddress",
                      "authenticationTokens",
                      "persons"
                    ],
                    "properties": {
                      "name": {
                        "description": "The name of your merchant.",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 2,
                        "example": "CompanyName"
                      },
                      "publicName": {
                        "description": "The public name of your merchant.",
                        "type": "string",
                        "example": "CompanyName"
                      },
                      "coc": {
                        "description": "Your Chamber of commerce registration number. This format differs per country.",
                        "type": "string",
                        "example": "12345678"
                      },
                      "vat": {
                        "description": "Value added tax identification number (VAT identification number).",
                        "type": "string",
                        "example": "NL807960147B01"
                      },
                      "companyTypeId": {
                        "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                        "type": "string",
                        "example": "1"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "example": "NL"
                      },
                      "contractLanguage": {
                        "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                        "type": "string",
                        "example": "nl_NL"
                      },
                      "clearingAccounts": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "method": {
                              "type": "string",
                              "example": "iban"
                            },
                            "iban": {
                              "properties": {
                                "iban": {
                                  "type": "string",
                                  "example": "NL64INGB1782371249"
                                },
                                "bic": {
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "type": "string",
                                  "example": "John Doe"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "visitAddress": {
                        "required": [
                          "streetName",
                          "streetNumber",
                          "zipCode",
                          "city"
                        ],
                        "properties": {
                          "streetName": {
                            "description": "The name of the street",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Visitlane"
                          },
                          "streetNumber": {
                            "description": "The street number",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "13"
                          },
                          "zipCode": {
                            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                            "type": "string",
                            "maxLength": 16,
                            "minLength": 1,
                            "example": "5678CD"
                          },
                          "city": {
                            "description": "The name of a city",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Amsterdam"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "NL"
                          }
                        },
                        "type": "object"
                      },
                      "authenticationTokens": {
                        "type": "array",
                        "items": {
                          "required": [
                            "description",
                            "authorisation"
                          ],
                          "properties": {
                            "description": {
                              "type": "string",
                              "example": "Default token"
                            },
                            "authorisation": {
                              "description": "Specify which kind of authorisation is applicable for the token.\n\nall: all merchant rights\nspecified: specify which authorisation groups should be enabled from the token. At least one authorisation group (in the authorisationGroups array) is mandatory",
                              "type": "string",
                              "enum": [
                                "all",
                                "specified"
                              ]
                            },
                            "authorisationGroups": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "AG-1234-4321"
                              }
                            },
                            "ipFilter": {
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "DENY_FROM_ALL"
                                  ]
                                },
                                "exceptionList": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "213.126.82.230"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "persons": {
                        "type": "array",
                        "items": {
                          "required": [
                            "firstName",
                            "lastName",
                            "platform"
                          ],
                          "properties": {
                            "gender": {
                              "type": "string",
                              "enum": [
                                "M",
                                "F"
                              ],
                              "example": "M"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John",
                              "nullable": true
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "type": "string",
                              "example": "nl_NL"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "newsletter": {
                              "type": "boolean"
                            },
                            "visitAddress": {
                              "required": [
                                "streetName",
                                "streetNumber",
                                "zipCode",
                                "city"
                              ],
                              "properties": {
                                "streetName": {
                                  "description": "The name of the street",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Visitlane"
                                },
                                "streetNumber": {
                                  "description": "The street number",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "13"
                                },
                                "zipCode": {
                                  "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                  "type": "string",
                                  "maxLength": 16,
                                  "minLength": 1,
                                  "example": "5678CD"
                                },
                                "city": {
                                  "description": "The name of a city",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Amsterdam"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "maxLength": 2,
                                  "minLength": 2,
                                  "example": "NL"
                                }
                              },
                              "type": "object"
                            },
                            "notificationGroup": {
                              "properties": {
                                "technical": {
                                  "type": "boolean"
                                },
                                "financial": {
                                  "type": "boolean"
                                },
                                "operations": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "complianceData": {
                              "properties": {
                                "dateOfBirth": {
                                  "description": "Date of birth of the person.",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "1999-12-12"
                                },
                                "nationality": {
                                  "description": "Nationality of the person.",
                                  "type": "string",
                                  "example": "NL"
                                },
                                "authorizedToSign": {
                                  "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                                  "type": "string",
                                  "enum": [
                                    "no",
                                    "alone",
                                    "shared"
                                  ],
                                  "example": "shared"
                                },
                                "pep": {
                                  "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "pepDescription": {
                                  "description": "Describe in your own words why this person is a PEP.",
                                  "type": "string",
                                  "example": "The person is active as an alderman in the municipality where he lives."
                                },
                                "ubo": {
                                  "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                                  "type": "string",
                                  "enum": [
                                    "no",
                                    "direct",
                                    "indirect",
                                    "pseudo"
                                  ],
                                  "example": "direct"
                                },
                                "uboPercentage": {
                                  "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                                  "type": "integer",
                                  "example": "25"
                                },
                                "relationshipDescription": {
                                  "description": "Describe in your own words the relation the person has with this company.",
                                  "type": "string",
                                  "example": "John Doe of test company"
                                }
                              },
                              "type": "object"
                            },
                            "roles": {
                              "properties": {
                                "primaryContactPerson": {
                                  "type": "boolean"
                                },
                                "internalAdministrator": {
                                  "type": "boolean"
                                }
                              },
                              "type": "object"
                            },
                            "platform": {
                              "required": [
                                "authorisation"
                              ],
                              "properties": {
                                "loginAccount": {
                                  "type": "boolean"
                                },
                                "loginTpa": {
                                  "type": "boolean"
                                },
                                "authorisation": {
                                  "type": "string",
                                  "enum": [
                                    "all",
                                    "specified"
                                  ]
                                },
                                "authorisationGroups": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "example": "AG-1234-4321"
                                  }
                                }
                              },
                              "type": "object"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "service": {
                        "required": [
                          "name",
                          "description",
                          "categoryCode",
                          "integrationCode",
                          "publication"
                        ],
                        "properties": {
                          "name": {
                            "description": "The name of your service.",
                            "type": "string",
                            "example": "My first service!"
                          },
                          "description": {
                            "description": "The description of the service.",
                            "type": "string"
                          },
                          "categoryCode": {
                            "type": "string",
                            "example": "CY-1234-4321"
                          },
                          "integrationCode": {
                            "type": "string",
                            "example": "PV-1234-4321"
                          },
                          "publication": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "basicMerchant": {
                  "summary": "Basic Merchant",
                  "value": {
                    "partner": {
                      "referralProfileCode": "CP-1030-7060"
                    },
                    "merchant": {
                      "name": "CompanyName",
                      "publicName": "CompanyName",
                      "coc": "12345678",
                      "vat": "NL807960147B01",
                      "companyTypeId": "1",
                      "countryCode": "NL",
                      "contractLanguage": "nl_NL",
                      "visitAddress": {
                        "streetName": "Visitlane",
                        "streetNumber": "13",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "authenticationTokens": [
                        {
                          "description": "2nd token",
                          "authorisation": "specified",
                          "authorisationGroups": [
                            "AG-1234-4321"
                          ],
                          "ipFilter": {
                            "type": "DENY_FROM_ALL",
                            "exceptionList": [
                              "192.168.10.23",
                              "192.168.10.24"
                            ]
                          }
                        },
                        {
                          "description": "Supreme token",
                          "authorisation": "all",
                          "authorisationGroups": []
                        }
                      ],
                      "persons": [
                        {
                          "gender": "M",
                          "firstName": "John",
                          "lastName": "Doe",
                          "email": "sandbox@pay.nl",
                          "language": "nl_NL",
                          "phone": "0031612345678",
                          "newsletter": true,
                          "notificationGroup": {
                            "technical": true,
                            "financial": true,
                            "operations": true
                          },
                          "platform": {
                            "loginAccount": true,
                            "loginTpa": true,
                            "authorisation": "all",
                            "authorisationGroups": []
                          }
                        }
                      ],
                      "service": {
                        "name": "companyName",
                        "description": "Sells children's clothing",
                        "categoryCode": "CY-1234-4321",
                        "integrationCode": "PV-1234-4321",
                        "publication": "through cashboard"
                      }
                    }
                  }
                },
                "extendedMerchant": {
                  "summary": "Extended Merchant",
                  "value": {
                    "partner": {
                      "connectionType": "ALLIANCE",
                      "referralProfileCode": "CP-1030-7060"
                    },
                    "merchant": {
                      "name": "CompanyName",
                      "publicName": "CompanyName",
                      "coc": "12345678",
                      "vat": "NL807960147B01",
                      "companyTypeId": "1",
                      "countryCode": "NL",
                      "contractLanguage": "nl_NL",
                      "clearingAccounts": [
                        {
                          "method": "iban",
                          "iban": {
                            "iban": "NL64INGB1782371249",
                            "bic": "INGBNL2A",
                            "owner": "John Doe"
                          }
                        }
                      ],
                      "visitAddress": {
                        "streetName": "Visitlane",
                        "streetNumber": "13",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "authenticationTokens": [
                        {
                          "description": "Default token",
                          "authorisation": "specified",
                          "authorisationGroups": [
                            "AG-1234-4321"
                          ],
                          "ipFilter": {
                            "type": "DENY_FROM_ALL",
                            "exceptionList": [
                              "192.168.10.23",
                              "192.168.10.24"
                            ]
                          }
                        },
                        {
                          "description": "Supreme token",
                          "authorisation": "all",
                          "authorisationGroups": []
                        }
                      ],
                      "persons": [
                        {
                          "gender": "M",
                          "firstName": "John",
                          "lastName": "Doe",
                          "email": "johndoe@pay.nl",
                          "language": "nl_NL",
                          "phone": "0031612345678",
                          "newsletter": true,
                          "visitAddress": {
                            "streetName": "Visitlane",
                            "streetNumber": "13",
                            "zipCode": "5678CD",
                            "city": "Amsterdam",
                            "countryCode": "NL"
                          },
                          "notificationGroup": {
                            "technical": true,
                            "financial": true,
                            "operations": true
                          },
                          "platform": {
                            "loginAccount": true,
                            "authorisation": "all",
                            "authorisationGroups": []
                          },
                          "complianceData": {
                            "dateOfBirth": "1980-01-01",
                            "nationality": "NL",
                            "authorizedtoSign": "shared",
                            "pep": true,
                            "pepDescription": "Active as mayor in amsterdam",
                            "ubo": "direct",
                            "uboPercentage": 50,
                            "relationshipDescription": "50% shareholder of the company"
                          },
                          "roles": {
                            "primaryContactPerson": true,
                            "internalAdministrator": true
                          }
                        },
                        {
                          "gender": "F",
                          "firstName": "Jane",
                          "lastName": "Doe",
                          "email": "janedoe@pay.nl",
                          "language": "nl_NL",
                          "phone": "0031612345679",
                          "newsletter": true,
                          "notificationGroup": {
                            "technical": true,
                            "financial": true,
                            "operations": true
                          },
                          "platform": {
                            "loginAccount": true,
                            "loginTpa": true,
                            "authorisation": "specified",
                            "authorisationGroups": [
                              "AG-1234-4321"
                            ]
                          },
                          "complianceData": {
                            "dateOfBirth": "1980-01-01",
                            "nationality": "NL",
                            "authorizedtoSign": "shared",
                            "pep": true,
                            "pepDescription": "Married with the mayor of Amsterdam",
                            "ubo": "direct",
                            "uboPercentage": 50,
                            "relationshipDescription": "50% shareholder of the company"
                          }
                        }
                      ],
                      "service": {
                        "name": "companyName",
                        "description": "Sells children's clothing",
                        "categoryCode": "CY-1234-4321",
                        "integrationCode": "PV-1234-4321",
                        "publication": "through cashboard"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Basic Merchant",
                  "properties": {
                    "merchant": {
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "publicName": {
                          "description": "The public name of your merchant.",
                          "type": "string",
                          "example": "CompanyName"
                        },
                        "clearingAccounts": {
                          "type": "array",
                          "items": {
                            "required": [
                              "code",
                              "status",
                              "method",
                              "iban"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "APPROVED",
                                  "DENIED",
                                  "NOT_CHECKED"
                                ]
                              },
                              "method": {
                                "type": "string",
                                "enum": [
                                  "iban"
                                ]
                              },
                              "iban": {
                                "required": [
                                  "iban",
                                  "bic",
                                  "owner"
                                ],
                                "properties": {
                                  "iban": {
                                    "description": "The International Bank Account Number (IBAN).",
                                    "type": "string",
                                    "example": "NL69INGB0123456789"
                                  },
                                  "bic": {
                                    "description": "Business Identifier Codes (BIC/SWIFT).",
                                    "type": "string",
                                    "example": "INGBNL2A"
                                  },
                                  "owner": {
                                    "description": "The owner of the bank account.",
                                    "type": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "example": "John Doe"
                                  }
                                },
                                "type": "object",
                                "title": "BankAccount",
                                "x-readme-ref-name": "BankAccount"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "postalAddress": {
                          "required": [
                            "code",
                            "streetName",
                            "zipCode",
                            "city",
                            "countryCode"
                          ],
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Location",
                          "x-readme-ref-name": "Location"
                        },
                        "visitAddress": {
                          "required": [
                            "code",
                            "streetName",
                            "zipCode",
                            "city",
                            "countryCode"
                          ],
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Location",
                          "x-readme-ref-name": "Location"
                        },
                        "contactMethods": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "description": "The contact method ID of your company starting with CM.",
                                "type": "string",
                                "example": "CM-1234-4321"
                              },
                              "type": {
                                "description": "The type of contact method.",
                                "type": "string",
                                "enum": [
                                  "email",
                                  "email_support",
                                  "phone",
                                  "phone_helpdesk",
                                  "phone_off_hours",
                                  "url",
                                  "email_msnskype"
                                ],
                                "example": "The type of contact method."
                              },
                              "value": {
                                "description": "The value of the contact method.",
                                "type": "string",
                                "example": "088-88 666 22"
                              },
                              "description": {
                                "description": "The description of the contact method.",
                                "type": "string"
                              },
                              "public": {
                                "description": "Is the contact method public accessible",
                                "type": "boolean",
                                "example": "true"
                              },
                              "notifications": {
                                "description": "Does the contact method needs to receive notifications",
                                "type": "boolean",
                                "example": "false"
                              }
                            },
                            "type": "object",
                            "title": "ContactMethod",
                            "x-readme-ref-name": "ContactMethod"
                          }
                        },
                        "authenticationTokens": {
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "secret": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "trademarks": {
                          "items": {
                            "properties": {
                              "code": {
                                "description": "An identifier for this trademark",
                                "type": "string",
                                "example": "TM-0000-0000"
                              },
                              "type": {
                                "type": "string"
                              },
                              "name": {
                                "description": "A registered trademark name.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the trademark.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "licenses": {
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "AL-1234-4321"
                              },
                              "name": {
                                "type": "string"
                              },
                              "language": {
                                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                                "type": "string",
                                "enum": [
                                  "NL",
                                  "EN",
                                  "DE",
                                  "FR",
                                  "IT",
                                  "ES"
                                ],
                                "example": "NL"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "service": {
                          "properties": {
                            "code": {
                              "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                              "type": "string",
                              "example": "SL-####-####"
                            },
                            "secret": {
                              "description": "The unique reference for this service.",
                              "type": "string",
                              "example": "bade123abf124124abefa311b"
                            },
                            "name": {
                              "description": "The name of your service.",
                              "type": "string",
                              "example": "My first service!"
                            },
                            "description": {
                              "description": "The description of the service.",
                              "type": "string"
                            },
                            "categoryCode": {
                              "description": "The category (code) identifier",
                              "type": "string",
                              "example": "CY-1234-4321"
                            },
                            "integrationCode": {
                              "type": "string",
                              "example": "PV-1234-4321"
                            },
                            "publication": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "basic": {
                    "summary": "Basic Merchant",
                    "value": {
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "INACTIVE",
                        "name": "CompanyName",
                        "publicName": "CompanyName",
                        "clearingAccounts": [
                          {
                            "code": "BA-1234-4321",
                            "status": "NOT_CHECKED",
                            "method": "iban",
                            "iban": {
                              "iban": "NL91ABNA0417164300",
                              "bic": "INGBNL2A",
                              "owner": "John Doe"
                            }
                          }
                        ],
                        "postalAddress": {
                          "code": "AS-1234-43",
                          "streetName": "Deliverylane",
                          "streetNumber": "70",
                          "zipCode": "5678 CD",
                          "city": "Amsterdam",
                          "countryCode": "NL"
                        },
                        "visitAddress": {
                          "code": "AS-1234-43",
                          "streetName": "Deliverylane",
                          "streetNumber": "70",
                          "zipCode": "5678 CD",
                          "city": "Amsterdam",
                          "countryCode": "NL"
                        },
                        "contactMethods": null,
                        "authenticationTokens": [
                          {
                            "code": "AT-1234-4321",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "PAY token"
                          },
                          {
                            "code": "AT-4321-1234",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "User token"
                          }
                        ],
                        "trademarks": [
                          {
                            "code": "TM-1234-1234",
                            "type": "name",
                            "name": "CompanyName",
                            "status": "NOT_CHECKED"
                          }
                        ],
                        "licenses": [
                          {
                            "code": "AL-1234-4321",
                            "name": "AL-1234-4321",
                            "language": null
                          }
                        ],
                        "service": {
                          "code": "SL-1234-4321",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "companyName",
                          "description": "Sells children's clothing",
                          "categoryCode": "CY-1234-4321",
                          "integrationCode": "PV-1234-4321",
                          "publication": "through cashboard"
                        },
                        "createdAt": "2014-04-15T11:29:03+02:00",
                        "createdBy": "A-1234-4321",
                        "modifiedAt": null,
                        "modifiedBy": null,
                        "deletedAt": null,
                        "deletedBy": null
                      },
                      "_links": [
                        {
                          "href": "/merchants",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  },
                  "extended": {
                    "summary": "Extended Merchant",
                    "value": {
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "INACTIVE",
                        "name": "CompanyName",
                        "publicName": "publicName",
                        "clearingAccounts": [
                          {
                            "code": "BA-1234-4321",
                            "status": "NOT_CHECKED",
                            "method": "iban",
                            "iban": {
                              "iban": "NL91ABNA0417164300",
                              "bic": "ABNANL2A",
                              "owner": "John Doe"
                            }
                          }
                        ],
                        "postalAddress": {
                          "code": "AS-1234-43",
                          "streetName": "Deliverylane",
                          "streetNumber": "70",
                          "zipCode": "5678 CD",
                          "city": "Amsterdam",
                          "countryCode": "NL"
                        },
                        "visitAddress": {
                          "code": "AS-1234-43",
                          "streetName": "Deliverylane",
                          "streetNumber": "70",
                          "zipCode": "5678 CD",
                          "city": "Amsterdam",
                          "countryCode": "NL"
                        },
                        "contactMethods": null,
                        "authenticationTokens": [
                          {
                            "code": "AT-1234-4321",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "PAY token"
                          },
                          {
                            "code": "AT-4321-1234",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "User token"
                          }
                        ],
                        "trademarks": [
                          {
                            "code": "TM-1740-2882",
                            "type": "name",
                            "name": "CompanyName",
                            "status": "NOT_CHECKED"
                          }
                        ],
                        "licenses": [
                          {
                            "code": "AL-1234-4321",
                            "name": "AL-1234-4321",
                            "language": null
                          }
                        ],
                        "service": {
                          "code": "SL-1234-4321",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "companyName",
                          "description": "Sells children's clothing",
                          "categoryCode": "CY-1234-4321",
                          "integrationCode": "PV-1234-4321",
                          "publication": "through cashboard"
                        },
                        "createdAt": "2014-04-15T11:29:03+02:00",
                        "createdBy": "A-1234-4321",
                        "modifiedAt": null,
                        "modifiedBy": null,
                        "deletedAt": null,
                        "deletedBy": null
                      },
                      "_links": [
                        {
                          "href": "/merchants",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "merchant.name: Is empty\nmerchant.persons[0].email: Is empty",
                      "violations": [
                        {
                          "propertyPath": "merchant.name",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        },
                        {
                          "propertyPath": "merchant.persons[0].email",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "User already registered",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "User is already registered",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "User is already registered",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/merchants/{merchantCode}/info": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchants:Info",
        "description": "Get the details of a specific merchant",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The merchant id of your company starting with M.",
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "description": "The name of your merchant.",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 2,
                      "example": "CompanyName"
                    },
                    "publicName": {
                      "description": "The public name of your merchant.",
                      "type": "string",
                      "example": "CompanyName"
                    },
                    "boardingStatus": {
                      "description": "The status of the boarding process for this merchant.",
                      "type": "string",
                      "enum": [
                        "REGISTERED",
                        "ONBOARDING",
                        "ACCEPTED",
                        "SUSPENDED",
                        "OFFBOARDED"
                      ],
                      "example": "REGISTERED"
                    },
                    "status": {
                      "description": "Merchant state",
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "payoutStatus": {
                      "description": "Merchant payout state",
                      "type": "string",
                      "enum": [
                        "ENABLED",
                        "DISABLED"
                      ],
                      "example": "Enabled"
                    },
                    "coc": {
                      "description": "Your Chamber of commerce registration number. This format differs per country.",
                      "type": "string",
                      "example": "12345678"
                    },
                    "vat": {
                      "description": "Value added tax identification number (VAT identification number).",
                      "type": "string",
                      "example": "NL807960147B01"
                    },
                    "companyTypeId": {
                      "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                      "type": "string",
                      "example": "1"
                    },
                    "countryCode": {
                      "description": "The country code consisting of 2 uppercase letters",
                      "type": "string",
                      "example": "NL"
                    },
                    "contractLanguage": {
                      "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                      "type": "string",
                      "example": "nl_NL"
                    },
                    "contractPackage": {
                      "type": "string"
                    },
                    "accountManager": {
                      "description": "The email address of the active account manager.",
                      "type": "string",
                      "example": "account.manager@pay.nl"
                    },
                    "website": {
                      "description": "The website.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://www.my-website.com"
                    },
                    "categories": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The category (code) identifier",
                            "type": "string",
                            "maxLength": 40,
                            "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                            "example": "CY-1234-4321"
                          },
                          "name": {
                            "description": "The category name.",
                            "type": "string",
                            "example": "Digitale diensten gambling (kansspelen)"
                          },
                          "description": {
                            "description": "The category's description.",
                            "type": "string",
                            "example": "Kansspelen"
                          },
                          "sequence": {
                            "description": "The sequence of the category.",
                            "type": "integer"
                          },
                          "available": {
                            "description": "The category's availability.",
                            "type": "boolean"
                          },
                          "initialMCC": {
                            "description": "The initial MCC of the category.",
                            "type": "integer",
                            "example": "General Contractors-Residential and Commercial",
                            "nullable": true
                          },
                          "initialRiskCategory": {
                            "description": "The initial risk category of the category.",
                            "type": "string",
                            "example": "Low risk"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "paymentMethods": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "The payment profile identifier.",
                                  "type": "integer",
                                  "example": "1630"
                                },
                                "name": {
                                  "description": "The name of the payment profile.",
                                  "type": "string",
                                  "example": "Pin (Maestro)"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Category",
                        "x-readme-ref-name": "Category"
                      }
                    },
                    "integrations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The plugin identifier.",
                            "type": "string",
                            "example": "PL-3010-1000"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "clearingAccounts": {
                      "type": "array",
                      "items": {
                        "required": [
                          "code",
                          "status",
                          "method",
                          "iban"
                        ],
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "APPROVED",
                              "DENIED",
                              "NOT_CHECKED"
                            ]
                          },
                          "method": {
                            "type": "string",
                            "enum": [
                              "iban"
                            ]
                          },
                          "iban": {
                            "required": [
                              "iban",
                              "bic",
                              "owner"
                            ],
                            "properties": {
                              "iban": {
                                "description": "The International Bank Account Number (IBAN).",
                                "type": "string",
                                "example": "NL69INGB0123456789"
                              },
                              "bic": {
                                "description": "Business Identifier Codes (BIC/SWIFT).",
                                "type": "string",
                                "example": "INGBNL2A"
                              },
                              "owner": {
                                "description": "The owner of the bank account.",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John Doe"
                              }
                            },
                            "type": "object",
                            "title": "BankAccount",
                            "x-readme-ref-name": "BankAccount"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "postalAddress": {
                      "required": [
                        "code",
                        "streetName",
                        "zipCode",
                        "city",
                        "countryCode"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Location",
                      "x-readme-ref-name": "Location"
                    },
                    "visitAddress": {
                      "required": [
                        "code",
                        "streetName",
                        "zipCode",
                        "city",
                        "countryCode"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Location",
                      "x-readme-ref-name": "Location"
                    },
                    "contactMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The contact method ID of your company starting with CM.",
                            "type": "string",
                            "example": "CM-1234-4321"
                          },
                          "type": {
                            "description": "The type of contact method.",
                            "type": "string",
                            "enum": [
                              "email",
                              "email_support",
                              "phone",
                              "phone_helpdesk",
                              "phone_off_hours",
                              "url",
                              "email_msnskype"
                            ],
                            "example": "The type of contact method."
                          },
                          "value": {
                            "description": "The value of the contact method.",
                            "type": "string",
                            "example": "088-88 666 22"
                          },
                          "description": {
                            "description": "The description of the contact method.",
                            "type": "string"
                          },
                          "public": {
                            "description": "Is the contact method public accessible",
                            "type": "boolean",
                            "example": "true"
                          },
                          "notifications": {
                            "description": "Does the contact method needs to receive notifications",
                            "type": "boolean",
                            "example": "false"
                          }
                        },
                        "type": "object",
                        "title": "ContactMethod",
                        "x-readme-ref-name": "ContactMethod"
                      }
                    },
                    "authenticationTokens": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "authenticationTokens": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "trademarks": {
                      "type": "array",
                      "items": {
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "code": {
                            "description": "An identifier for this trademark",
                            "type": "string",
                            "example": "TM-0000-0000"
                          },
                          "type": {
                            "type": "string"
                          },
                          "name": {
                            "description": "A registered trademark name.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the trademark.",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Trademark",
                        "x-readme-ref-name": "Trademark"
                      }
                    },
                    "licenses": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "AL-1234-4321"
                              },
                              "secret": {
                                "type": "string",
                                "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                              },
                              "name": {
                                "type": "string"
                              },
                              "firstName": {
                                "description": "The forename (also known as a given name, Christian name or a first name).",
                                "type": "string",
                                "maxLength": 64,
                                "minLength": 1,
                                "example": "John"
                              },
                              "lastName": {
                                "description": "The surname (also known as a family name or a last name).",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Doe"
                              },
                              "email": {
                                "description": "An email address.",
                                "type": "string",
                                "format": "email",
                                "example": "sandbox@pay.nl"
                              },
                              "language": {
                                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                                "type": "string",
                                "enum": [
                                  "NL",
                                  "EN",
                                  "DE",
                                  "FR",
                                  "IT",
                                  "ES"
                                ],
                                "example": "NL"
                              },
                              "visitAddress": {
                                "properties": {
                                  "code": {
                                    "type": "string"
                                  },
                                  "firstName": {
                                    "description": "The forename (also known as a given name, Christian name or a first name).",
                                    "type": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "example": "John"
                                  },
                                  "lastName": {
                                    "description": "The surname (also known as a family name or a last name).",
                                    "type": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "example": "Doe"
                                  },
                                  "streetName": {
                                    "description": "The name of the street",
                                    "type": "string",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "example": "Visitlane"
                                  },
                                  "streetNumber": {
                                    "description": "The street number",
                                    "type": "string",
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "example": "13"
                                  },
                                  "streetNumberExtension": {
                                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                    "type": "string",
                                    "maxLength": 32,
                                    "minLength": 1,
                                    "example": "b1"
                                  },
                                  "zipCode": {
                                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                    "type": "string",
                                    "maxLength": 16,
                                    "minLength": 1,
                                    "example": "5678CD"
                                  },
                                  "city": {
                                    "description": "The name of a city",
                                    "type": "string",
                                    "maxLength": 128,
                                    "minLength": 1,
                                    "example": "Amsterdam"
                                  },
                                  "regionCode": {
                                    "description": "Region code (iso-3166-2)",
                                    "type": "string",
                                    "example": "ZH"
                                  },
                                  "countryCode": {
                                    "description": "The country code consisting of 2 uppercase letters",
                                    "type": "string",
                                    "maxLength": 2,
                                    "minLength": 2,
                                    "example": "NL"
                                  }
                                },
                                "type": "object",
                                "title": "Address",
                                "x-readme-ref-name": "Address"
                              },
                              "complianceData": {
                                "properties": {
                                  "pep": {
                                    "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                    "type": "boolean",
                                    "example": "true"
                                  },
                                  "pepDescription": {
                                    "description": "Describe in your own words why this person is a PEP.",
                                    "type": "string",
                                    "example": "The person is active as an alderman in the municipality where he lives."
                                  },
                                  "dateOfBirth": {
                                    "description": "Date of birth of the person.",
                                    "type": "string",
                                    "format": "date-time",
                                    "example": "1999-12-12"
                                  },
                                  "nationality": {
                                    "description": "Nationality of the person.",
                                    "type": "string",
                                    "example": "NL"
                                  },
                                  "idDocumentNumber": {
                                    "description": "The id document number of the person",
                                    "type": "string",
                                    "example": ""
                                  }
                                },
                                "type": "object",
                                "title": "ComplianceData",
                                "x-readme-ref-name": "ComplianceData"
                              },
                              "documents": {
                                "properties": {
                                  "code": {
                                    "description": "Code of the acceptance document.",
                                    "type": "string",
                                    "example": "D-1234-1234"
                                  },
                                  "type": {
                                    "description": "Type of the acceptance document.",
                                    "type": "string",
                                    "example": "identification"
                                  },
                                  "status": {
                                    "description": "Status of the acceptance document.",
                                    "type": "string",
                                    "example": "UPLOADED"
                                  }
                                },
                                "type": "object",
                                "title": "Document",
                                "x-readme-ref-name": "Document"
                              },
                              "createdAt": {
                                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": false
                              },
                              "createdBy": {
                                "description": "The reference to an account or token whom created the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": false
                              },
                              "modifiedAt": {
                                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": true
                              },
                              "modifiedBy": {
                                "description": "The reference to an account or token whom modified the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": true
                              },
                              "acceptedAt": {
                                "description": "The date and time an account was accepted.",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "2023-11-01T10:19:25+01:00",
                                "nullable": false
                              },
                              "deletedAt": {
                                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": true
                              },
                              "deletedBy": {
                                "description": "The reference to an account or token whom deleted the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": true
                              }
                            },
                            "type": "object",
                            "title": "PersonCompliance",
                            "x-readme-ref-name": "PersonCompliance"
                          }
                        ],
                        "title": "PersonComplianceMinimal",
                        "x-readme-ref-name": "PersonComplianceMinimal"
                      }
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "secret": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "category": {
                            "properties": {
                              "code": {
                                "description": "The category (code) identifier",
                                "type": "string",
                                "maxLength": 40,
                                "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                                "example": "CY-1234-4321"
                              },
                              "name": {
                                "description": "The category name.",
                                "type": "string",
                                "example": "Digitale diensten gambling (kansspelen)"
                              }
                            },
                            "type": "object"
                          },
                          "integration": {
                            "properties": {
                              "code": {
                                "description": "The plugin identifier.",
                                "type": "string",
                                "example": "PL-3010-1000"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "website": {
                            "description": "The website URL.",
                            "type": "string",
                            "example": "https://www.pay.nl"
                          },
                          "urls": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "code": {
                                  "description": "The code of the website URL.",
                                  "type": "string",
                                  "example": "WU-1234-1234"
                                },
                                "website": {
                                  "description": "The website URL.",
                                  "type": "string",
                                  "example": "https://www.pay.nl"
                                }
                              },
                              "type": "object",
                              "title": "WebsiteUrl",
                              "x-readme-ref-name": "WebsiteUrl"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "partner": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "M-1234-4321"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "accessToMerchant": {
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "title": "Partner",
                        "x-readme-ref-name": "Partner"
                      }
                    },
                    "documents": {
                      "properties": {
                        "code": {
                          "description": "Code of the acceptance document.",
                          "type": "string",
                          "example": "D-1234-1234"
                        },
                        "type": {
                          "description": "Type of the acceptance document.",
                          "type": "string",
                          "example": "identification"
                        },
                        "status": {
                          "description": "Status of the acceptance document.",
                          "type": "string",
                          "example": "UPLOADED"
                        }
                      },
                      "type": "object",
                      "title": "Document",
                      "x-readme-ref-name": "Document"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "acceptedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "suspendedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "suspendedBy": {
                      "description": "SUSPENDED_BY_DESCRIPTION",
                      "type": "string",
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "reviewedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "nextReviewDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Merchants:Info",
                    "value": {
                      "code": "M-1234-4321",
                      "name": "CompanyName",
                      "publicName": "CompanyName",
                      "boardingStatus": "ACCEPTED",
                      "status": "ACTIVE",
                      "payoutStatus": "ENABLED",
                      "coc": "12345678",
                      "vat": "NL0123456789",
                      "companyTypeId": "1",
                      "countryCode": "NL",
                      "contractLanguage": "nl_NL",
                      "contractPackage": "Merchant by Alliance",
                      "accountmanager": "account.manager@pay.nl",
                      "website": "https://pay.nl/",
                      "categories": [
                        {
                          "code": "CY-2010-6000",
                          "name": "Boeken, Tijdschriften en DVD's"
                        }
                      ],
                      "integrations": [
                        {
                          "code": "PL-2010-3000",
                          "name": "Magento"
                        }
                      ],
                      "clearingAccounts": [
                        {
                          "code": "BA-1234-4321",
                          "status": "APPROVED",
                          "method": "iban",
                          "iban": {
                            "iban": "NL91ABNA0417164300",
                            "bic": "ABNANL2A",
                            "owner": "John Doe"
                          }
                        }
                      ],
                      "postalAddress": {
                        "code": "AS-1234-43",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678 CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "visitAddress": {
                        "code": "AS-1234-43",
                        "streetName": "Visitstreet",
                        "streetNumber": "2",
                        "zipCode": "56273",
                        "city": "London",
                        "countryCode": "UK"
                      },
                      "contactMethods": [
                        {
                          "code": "CM-0129-97",
                          "type": "email",
                          "value": "sandbox@pay.nl",
                          "description": "",
                          "public": true,
                          "notifications": true
                        },
                        {
                          "code": "CM-0591-07",
                          "type": "phone",
                          "value": "+31(0)274802315",
                          "description": "",
                          "public": true,
                          "notifications": false
                        }
                      ],
                      "authenticationTokens": [
                        {
                          "code": "AT-1234-4321",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "PAY token"
                        },
                        {
                          "code": "AT-4321-1234",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "User token"
                        }
                      ],
                      "trademarks": [
                        {
                          "code": "TM-1740-2882",
                          "type": "public_name",
                          "name": "CompanyName",
                          "status": "NOT_CHECKED"
                        },
                        {
                          "code": "TM-2894-6222",
                          "type": "trademark",
                          "name": "Cole, Hickle and Boehm",
                          "status": "APPROVED"
                        }
                      ],
                      "licenses": [
                        {
                          "code": "AL-1234-4321",
                          "name": "CustomName",
                          "language": "nl_NL",
                          "documents": [
                            {
                              "code": "D-1234-1234",
                              "type": "identification",
                              "status": "REQUESTED",
                              "description": "Copy ID or passport",
                              "translations": {
                                "description": {
                                  "en_GB": "Copy ID or passport",
                                  "nl_NL": "Kopie ID of passpoort"
                                }
                              },
                              "createdAt": "2007-10-02T12:11:20+02:00",
                              "createdBy": "A-1234-1234",
                              "accceptedAt": "",
                              "modifiedAt": "2021-08-10T17:24:05+02:00",
                              "modifiedBy": "A-1234-1234",
                              "deletedAt": null,
                              "deletedBy": null
                            },
                            {
                              "code": "D-1234-1234",
                              "type": "address",
                              "status": "UPLOADED",
                              "description": "Proof of home address",
                              "translations": {
                                "description": {
                                  "en_GB": "Proof of home address",
                                  "nl_NL": "Bewijs van thuisadres"
                                }
                              },
                              "createdAt": "2007-10-02T12:11:20+02:00",
                              "createdBy": "A-1234-1234",
                              "acceptedAt": "",
                              "modifiedAt": "2021-08-10T17:24:05+02:00",
                              "modifiedBy": "A-1234-1234",
                              "deletedAt": null,
                              "deletedBy": null
                            }
                          ]
                        }
                      ],
                      "services": [
                        {
                          "code": "SL-1234-4321",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "London Store",
                          "status": "TO_BE_CHECKED",
                          "category": {
                            "code": "CY-2010-4020",
                            "name": "Apotheken & Gezondheid"
                          },
                          "integration": null,
                          "website": "https://pay.nl",
                          "urls": [
                            {
                              "code": "WU-1234-1234",
                              "website": "https://www.pay.nl"
                            }
                          ]
                        },
                        {
                          "code": "SL-4321-1234",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "Amsterdam Store",
                          "status": "ACTIVE",
                          "category": {
                            "code": "CY-2010-6000",
                            "name": "Boeken, Tijdschriften en DVD's"
                          },
                          "integration": {
                            "code": "PL-2010-3000",
                            "name": "Magento"
                          },
                          "website": "https://pay.nl",
                          "urls": [
                            {
                              "code": "WU-1234-1234",
                              "website": "https://www.pay.nl"
                            }
                          ]
                        }
                      ],
                      "partner": [
                        {
                          "code": "M-1234-4321",
                          "name": "ReferredCompany",
                          "type": "REFERRAL",
                          "accessToMerchant": true
                        }
                      ],
                      "documents": [
                        {
                          "code": "D-1234-1234",
                          "type": "coc",
                          "status": "REQUESTED",
                          "description": "COC extract",
                          "translations": {
                            "description": {
                              "en_GB": "COC extract",
                              "nl_NL": "Kamer van Koophandel afschrift"
                            }
                          },
                          "createdAt": "",
                          "createdBy": "",
                          "acceptedAt": "",
                          "validUntilDate": "",
                          "modifiedAt": "",
                          "modifiedBy": "",
                          "deletedAt": "",
                          "deletedBy": ""
                        }
                      ],
                      "createdAt": "2014-04-15T11:29:03+02:00",
                      "createdBy": "A-1234-4321",
                      "acceptedAt": "2014-12-17T18:38:55+01:00",
                      "suspendedAt": null,
                      "suspendedBy": null,
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "reviewedAt": "2017-02-22T10:38:43+01:00",
                      "nextReviewDate": "2017-03-22T10:38:43+01:00",
                      "_links": [
                        {
                          "href": "/merchants/M-1234-4321/info",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/merchants/{merchantCode}/package": {
      "patch": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchants:UpdatePackage",
        "description": "Update the package. If a merchantCode is supplied then you need to have access to that merchant. You need to authenticate with an AT-code as username and the corresponding token as password.",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "referralProfileCode"
                ],
                "properties": {
                  "referralProfileCode": {
                    "type": "string",
                    "example": "CP-1234-4321"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          },
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/merchants/{merchantCode}/undelete": {
      "post": {
        "tags": [
          "Merchants"
        ],
        "summary": "Merchant:Undelete",
        "description": "Undelete a merchant that was recently deleted. This can only be done within a 15 minute time window",
        "parameters": [
          {
            "name": "merchantCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Merchant",
                  "properties": {
                    "merchant": {
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "payoutStatus": {
                          "description": "Merchant payout state",
                          "type": "string",
                          "enum": [
                            "ENABLED",
                            "DISABLED"
                          ],
                          "example": "Enabled"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        },
                        "publicName": {
                          "description": "The public name of your merchant.",
                          "type": "string",
                          "example": "CompanyName"
                        },
                        "boardingStatus": {
                          "description": "The status of the boarding process for this merchant.",
                          "type": "string",
                          "enum": [
                            "REGISTERED",
                            "ONBOARDING",
                            "ACCEPTED",
                            "SUSPENDED",
                            "OFFBOARDED"
                          ],
                          "example": "REGISTERED"
                        },
                        "clearingAccounts": {
                          "type": "array",
                          "items": {
                            "required": [
                              "code",
                              "status",
                              "method",
                              "iban"
                            ],
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "APPROVED",
                                  "DENIED",
                                  "NOT_CHECKED"
                                ]
                              },
                              "method": {
                                "type": "string",
                                "enum": [
                                  "iban"
                                ]
                              },
                              "iban": {
                                "required": [
                                  "iban",
                                  "bic",
                                  "owner"
                                ],
                                "properties": {
                                  "iban": {
                                    "description": "The International Bank Account Number (IBAN).",
                                    "type": "string",
                                    "example": "NL69INGB0123456789"
                                  },
                                  "bic": {
                                    "description": "Business Identifier Codes (BIC/SWIFT).",
                                    "type": "string",
                                    "example": "INGBNL2A"
                                  },
                                  "owner": {
                                    "description": "The owner of the bank account.",
                                    "type": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "example": "John Doe"
                                  }
                                },
                                "type": "object",
                                "title": "BankAccount",
                                "x-readme-ref-name": "BankAccount"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "postalAddress": {
                          "required": [
                            "code",
                            "streetName",
                            "zipCode",
                            "city",
                            "countryCode"
                          ],
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Location",
                          "x-readme-ref-name": "Location"
                        },
                        "visitAddress": {
                          "required": [
                            "code",
                            "streetName",
                            "zipCode",
                            "city",
                            "countryCode"
                          ],
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Location",
                          "x-readme-ref-name": "Location"
                        },
                        "contactMethods": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "description": "The contact method ID of your company starting with CM.",
                                "type": "string",
                                "example": "CM-1234-4321"
                              },
                              "type": {
                                "description": "The type of contact method.",
                                "type": "string",
                                "enum": [
                                  "email",
                                  "email_support",
                                  "phone",
                                  "phone_helpdesk",
                                  "phone_off_hours",
                                  "url",
                                  "email_msnskype"
                                ],
                                "example": "The type of contact method."
                              },
                              "value": {
                                "description": "The value of the contact method.",
                                "type": "string",
                                "example": "088-88 666 22"
                              },
                              "description": {
                                "description": "The description of the contact method.",
                                "type": "string"
                              },
                              "public": {
                                "description": "Is the contact method public accessible",
                                "type": "boolean",
                                "example": "true"
                              },
                              "notifications": {
                                "description": "Does the contact method needs to receive notifications",
                                "type": "boolean",
                                "example": "false"
                              }
                            },
                            "type": "object",
                            "title": "ContactMethod",
                            "x-readme-ref-name": "ContactMethod"
                          }
                        },
                        "authenticationTokens": {
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string"
                              },
                              "secret": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "trademarks": {
                          "items": {
                            "properties": {
                              "code": {
                                "description": "An identifier for this trademark",
                                "type": "string",
                                "example": "TM-0000-0000"
                              },
                              "type": {
                                "type": "string"
                              },
                              "name": {
                                "description": "A registered trademark name.",
                                "type": "string"
                              },
                              "status": {
                                "description": "Status of the trademark.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "licenses": {
                          "items": {
                            "properties": {
                              "code": {
                                "type": "string",
                                "example": "AL-1234-4321"
                              },
                              "name": {
                                "type": "string"
                              },
                              "language": {
                                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                                "type": "string",
                                "enum": [
                                  "NL",
                                  "EN",
                                  "DE",
                                  "FR",
                                  "IT",
                                  "ES"
                                ],
                                "example": "NL"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "service": {
                          "properties": {
                            "code": {
                              "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                              "type": "string",
                              "example": "SL-####-####"
                            },
                            "secret": {
                              "description": "The unique reference for this service.",
                              "type": "string",
                              "example": "bade123abf124124abefa311b"
                            },
                            "name": {
                              "description": "The name of your service.",
                              "type": "string",
                              "example": "My first service!"
                            },
                            "description": {
                              "description": "The description of the service.",
                              "type": "string"
                            },
                            "categoryCode": {
                              "description": "The category (code) identifier",
                              "type": "string",
                              "example": "CY-1234-4321"
                            },
                            "integrationCode": {
                              "type": "string",
                              "example": "PV-1234-4321"
                            },
                            "publication": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Merchant",
                    "value": {
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "INACTIVE",
                        "payoutStatus": "ENABLED",
                        "name": "CompanyName",
                        "publicName": "publicName",
                        "boardingStatus": "ACCEPTED",
                        "clearingAccounts": [
                          {
                            "code": "BA-1234-4321",
                            "status": "NOT_CHECKED",
                            "method": "iban",
                            "iban": {
                              "iban": "NL91ABNA0417164300",
                              "bic": "INGBNL2A",
                              "owner": "John Doe"
                            }
                          }
                        ],
                        "postalAddress": {
                          "code": "AS-1234-43",
                          "streetName": "Deliverylane",
                          "streetNumber": "70",
                          "zipCode": "5678 CD",
                          "city": "Amsterdam",
                          "countryCode": "NL"
                        },
                        "visitAddress": {
                          "code": "AS-1234-43",
                          "streetName": "Deliverylane",
                          "streetNumber": "70",
                          "zipCode": "5678 CD",
                          "city": "Amsterdam",
                          "countryCode": "NL"
                        },
                        "contactMethods": null,
                        "authenticationTokens": [
                          {
                            "code": "AT-1234-4321",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "PAY token"
                          },
                          {
                            "code": "AT-4321-1234",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "User token"
                          }
                        ],
                        "trademarks": [
                          {
                            "code": "TM-1234-1234",
                            "type": "name",
                            "name": "CompanyName",
                            "status": "NOT_CHECKED"
                          }
                        ],
                        "licenses": [
                          {
                            "code": "AL-1234-4321",
                            "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                            "name": "AL-1234-4321",
                            "language": null
                          }
                        ],
                        "service": {
                          "code": "SL-1234-4321",
                          "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                          "name": "companyName",
                          "description": "Sells children's clothing",
                          "categoryCode": "CY-1234-4321",
                          "integrationCode": "PV-1234-4321",
                          "publication": "through cashboard"
                        },
                        "createdAt": "2014-04-15T11:29:03+02:00",
                        "createdBy": "A-1234-4321",
                        "modifiedAt": null,
                        "modifiedBy": null,
                        "deletedAt": null,
                        "deletedBy": null
                      },
                      "_links": [
                        {
                          "href": "/merchants",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/packages": {
      "get": {
        "tags": [
          "Packages"
        ],
        "summary": "Packages",
        "description": "Get the packages (sign up profiles) that are configured for the merchant/partner. The CP code or the action code can be used to register a merchant so that the correct settings are configured when the merchant is created.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "packages": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of the package.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name of the package.",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of the package.",
                            "type": "string"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "partnerType": {
                            "description": "Parter types linked to the package.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "connectionTypeOnRegistration": {
                            "type": "string",
                            "enum": [
                              "ALLIANCE",
                              "BP",
                              "ISO",
                              "PARTNER"
                            ],
                            "nullable": true
                          },
                          "actionCode": {
                            "description": "Action code linked to the package.",
                            "type": "string"
                          },
                          "actionCodeValidUntil": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "contractPackage": {
                            "description": "The contract package where this package is linked to.",
                            "type": "string"
                          },
                          "monthlyFee": {
                            "description": "Monthly Fee of the package.",
                            "type": "integer"
                          },
                          "discountPercentage": {
                            "description": "Discount percentage of the package.",
                            "type": "integer"
                          },
                          "public": {
                            "description": "If it is an public package.",
                            "type": "boolean"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Package",
                        "x-readme-ref-name": "Package"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get Packages",
                    "value": {
                      "total": 1,
                      "packages": [
                        {
                          "code": "CP-1030-7060",
                          "name": "Package A",
                          "description": "Base package",
                          "translations": [
                            {
                              "description": {
                                "nl_NL": "Basispakket",
                                "en_GB": "Base package"
                              }
                            }
                          ],
                          "partnerType": [
                            "ALLIANCE",
                            "BP"
                          ],
                          "actionCode": "Promo",
                          "actionCodeValidUntil": "2007-10-02T12:11:20+02:00",
                          "contractPackage": "PIONEER",
                          "monthlyFee": 1000,
                          "discountPercentage": 25,
                          "public": true,
                          "createdAt": "2007-10-02T12:11:20+02:00",
                          "modifiedAt": "2007-10-02T12:11:20+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/packages",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/partners": {
      "get": {
        "tags": [
          "Merchants"
        ],
        "summary": "Partners:Get",
        "description": "Get a list of partners that are registered at Pay. We have various types of partnerships (e.g. Alliance, ISO or Business partner). Per partner we indicate which types of partnerships (can be multiple) are applicable.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "partners": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "M-1234-4321"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "accessToMerchant": {
                            "type": "boolean"
                          }
                        },
                        "type": "object",
                        "title": "Partner",
                        "x-readme-ref-name": "Partner"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get Partners",
                    "value": {
                      "total": 1,
                      "partners": [
                        {
                          "code": "M-1234-1345",
                          "name": "CompanyName",
                          "ISO": false,
                          "BP": true,
                          "ALLIANCE": false,
                          "FI": false,
                          "SP": false,
                          "createdAt": "2007-10-02T12:11:20+02:00",
                          "modifiedAt": "2007-10-02T12:11:20+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/partners",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/paymentverificationmethods": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "PaymentVerification",
        "description": "A payment can be secured by different methods. On a card present transaction (via a terminal) it is know as the Card Verification Method (CVM). \niDEAL transactions can be verified by the desktop, a QR code or by APP2APP payment. \nWe combine all these options in the Payment Verification Methods",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "paymentVerificationMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get payment verification methods",
                    "value": {
                      "total": 1,
                      "paymentVerificationMethods": [
                        {
                          "id": 1,
                          "name": "NFC zonder pincode",
                          "translations": {
                            "name": {
                              "nl_NL": "NFC zonder pincode"
                            }
                          },
                          "createdAt": "2021-01-01T00:00:00+02:00",
                          "modifiedAt": null,
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "url": "/paymentverificationmethods",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/payout/clearing": {
      "post": {
        "tags": [
          "Payout"
        ],
        "summary": "Payout:Clearing",
        "description": "Create a new clearing based on the revenue group linked to the provided service.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "transaction",
                  "payment"
                ],
                "properties": {
                  "transaction": {
                    "required": [
                      "type",
                      "serviceId",
                      "amount"
                    ],
                    "properties": {
                      "serviceId": {
                        "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                        "type": "string",
                        "example": "SL-####-####"
                      },
                      "description": {
                        "description": "Is shown on the statement of the payer.",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "Example description."
                      },
                      "reference": {
                        "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9]{1,64}$",
                        "example": "12345XXY0123"
                      },
                      "exchangeUrl": {
                        "description": "The URL where we exchange the status of a transaction.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://demo.pay.nl/exchange.php"
                      },
                      "amount": {
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "description": "The amount in cents.",
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                          },
                          "currency": {
                            "description": "The currency in ISO-4217 format.",
                            "type": "string",
                            "example": "EUR"
                          }
                        },
                        "type": "object",
                        "title": "Amount",
                        "x-readme-ref-name": "Amount"
                      }
                    },
                    "type": "object"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  }
                },
                "type": "object"
              },
              "examples": {
                "minimal": {
                  "summary": "Basic Payout clearing example",
                  "value": {
                    "transaction": {
                      "serviceId": "SL-####-####",
                      "amount": {
                        "value": 10
                      }
                    }
                  }
                },
                "maximum": {
                  "summary": "Extended Payout clearing example",
                  "value": {
                    "transaction": {
                      "serviceId": "SL-####-####",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "exchangeUrl": "https://demo.pay.nl/exchange.php",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      }
                    },
                    "stats": {
                      "info": "Campagne 99",
                      "tool": "Google",
                      "extra1": "Customer 6985615",
                      "extra2": "Invoice 21.3695",
                      "extra3": "Shop Amsterdam"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Clearing created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "transaction": {
                      "properties": {
                        "id": {
                          "description": "The Id of the transaction.",
                          "type": "string",
                          "example": "EX-1234-1234-1234"
                        },
                        "orderId": {
                          "description": "The orderId of the transaction.",
                          "type": "string",
                          "example": "0000000000X00000"
                        },
                        "serviceId": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "description": {
                          "description": "Is shown on the statement of the payer.",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "Example description."
                        },
                        "reference": {
                          "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9]{1,64}$",
                          "example": "12345XXY0123"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "createdAt": {
                          "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "modifiedAt": {
                          "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Payout created",
                    "value": {
                      "transaction": {
                        "id": "EX-####-####-####",
                        "orderId": "#########X#####",
                        "serviceId": "SL-####-####",
                        "description": "Example description",
                        "reference": "12345XXY0123",
                        "amount": {
                          "value": 10,
                          "currency": "EUR"
                        },
                        "created": "2016-06-04T08:15:00+01:00",
                        "modified": "2016-06-04T08:15:00+01:00"
                      },
                      "_links": [
                        {
                          "href": "/payout",
                          "rel": "self",
                          "type": "POST"
                        },
                        {
                          "href": "/transactions/EX-####-####-####",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "badRequest": {
                    "summary": "Bad request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "transaction.serviceId: Unable to find service location\ntransaction.amount.value: You have entered an invalid amount",
                      "violations": [
                        {
                          "propertyPath": "transaction.serviceId",
                          "message": "Unable to find service location",
                          "code": "PAY-2852"
                        },
                        {
                          "propertyPath": "transaction.amount.value",
                          "message": "You have entered an invalid amount",
                          "code": "PAY-2803"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "invalidRevenueGroup": {
                    "summary": "Unprocessable entity",
                    "value": {
                      "type": "https:\\/\\/developer.pay.nl\\/docs\\/error-codes",
                      "title": "An error occurred",
                      "detail": "Revenue group is not linked to a bank account.",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Revenue group is not linked to a bank account.",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/payout": {
      "post": {
        "tags": [
          "Payout"
        ],
        "summary": "Payout:Create",
        "description": "Send a payment to an IBAN number, based on the settings in the ServiceLocation the transaction can be send via SCT (Sepa Credit Transfer) in 24 hours or SICT (Sepa Instant Credit Transfer in 15 seconds)",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "transaction",
                  "payment"
                ],
                "properties": {
                  "transaction": {
                    "required": [
                      "type",
                      "serviceId",
                      "amount"
                    ],
                    "properties": {
                      "type": {
                        "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction",
                        "type": "string",
                        "enum": [
                          "MIT",
                          "CIT"
                        ]
                      },
                      "serviceId": {
                        "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                        "type": "string",
                        "example": "SL-####-####"
                      },
                      "description": {
                        "description": "Is shown on the statement of the payer.",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "Example description."
                      },
                      "reference": {
                        "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9]{1,64}$",
                        "example": "12345XXY0123"
                      },
                      "exchangeUrl": {
                        "description": "The URL where we exchange the status of a transaction.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://demo.pay.nl/exchange.php"
                      },
                      "amount": {
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "description": "The amount in cents.",
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                          },
                          "currency": {
                            "description": "The currency in ISO-4217 format.",
                            "type": "string",
                            "example": "EUR"
                          }
                        },
                        "type": "object",
                        "title": "Amount",
                        "x-readme-ref-name": "Amount"
                      }
                    },
                    "type": "object"
                  },
                  "payment": {
                    "required": [
                      "method",
                      "iban"
                    ],
                    "properties": {
                      "method": {
                        "description": "The method",
                        "type": "string",
                        "enum": [
                          "iban"
                        ]
                      },
                      "iban": {
                        "required": [
                          "number",
                          "holder"
                        ],
                        "properties": {
                          "number": {
                            "description": "The International Bank Account Number (IBAN).",
                            "type": "string",
                            "example": "NL69INGB0123456789"
                          },
                          "bic": {
                            "description": "Business Identifier Codes (BIC/SWIFT).",
                            "type": "string",
                            "example": "INGBNL2A"
                          },
                          "holder": {
                            "description": "The owner of the bank account.",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "John Doe"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "ipAddress": {
                        "description": "An ip address",
                        "type": "string",
                        "example": "213.126.82.230"
                      },
                      "birthDate": {
                        "description": "Date of birth as defined in ISO-8601.",
                        "type": "string",
                        "format": "date",
                        "example": "1999-02-15"
                      },
                      "gender": {
                        "description": "The subject's gender. Choose either M for male or F for female.",
                        "type": "string",
                        "example": "M"
                      },
                      "phone": {
                        "description": "The subject's phone number. Optionally prepended with a + and country code",
                        "type": "string",
                        "example": "0031612345678"
                      },
                      "email": {
                        "description": "An email address.",
                        "type": "string",
                        "format": "email",
                        "example": "sandbox@pay.nl"
                      },
                      "language": {
                        "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                        "type": "string",
                        "enum": [
                          "NL",
                          "EN",
                          "DE",
                          "FR",
                          "IT",
                          "ES"
                        ],
                        "example": "NL"
                      },
                      "trust": {
                        "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                        "type": "integer",
                        "maximum": 10,
                        "minimum": -10,
                        "example": -5
                      },
                      "reference": {
                        "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9]{1,64}$",
                        "example": "NL87654321"
                      }
                    },
                    "type": "object"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  }
                },
                "type": "object"
              },
              "examples": {
                "minimal": {
                  "summary": "Basic Payout example",
                  "value": {
                    "transaction": {
                      "type": "CIT",
                      "serviceId": "SL-####-####",
                      "amount": {
                        "value": 10
                      }
                    },
                    "payment": {
                      "method": "iban",
                      "iban": {
                        "number": "XXXXXXXXXXXXXXXXX",
                        "bic": "ABNANL2A",
                        "holder": "John Doe"
                      }
                    }
                  }
                },
                "maximum": {
                  "summary": "Extended Payout example",
                  "value": {
                    "transaction": {
                      "type": "MIT",
                      "serviceId": "SL-####-####",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "exchangeUrl": "https://demo.pay.nl/exchange.php",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      }
                    },
                    "payment": {
                      "method": "iban",
                      "iban": {
                        "number": "XXXXXXXXXXXXXXXXX",
                        "bic": "ABNANL2A",
                        "holder": "John Doe"
                      }
                    },
                    "customer": {
                      "firstName": "John",
                      "lastName": "Doe",
                      "phone": "0031612345678",
                      "birthDate": "1999-02-15",
                      "gender": "m",
                      "email": "sandbox@pay.nl",
                      "ipAddress": "213.126.82.230",
                      "trust": 5,
                      "reference": "NL87654321"
                    },
                    "stats": {
                      "info": "Campagne 99",
                      "tool": "Google",
                      "extra1": "Customer 6985615",
                      "extra2": "Invoice 21.3695",
                      "extra3": "Shop Amsterdam"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payout created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "transaction": {
                      "properties": {
                        "id": {
                          "description": "The Id of the transaction.",
                          "type": "string",
                          "example": "EX-1234-1234-1234"
                        },
                        "orderId": {
                          "description": "The orderId of the transaction.",
                          "type": "string",
                          "example": "0000000000X00000"
                        },
                        "serviceId": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "description": {
                          "description": "Is shown on the statement of the payer.",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "Example description."
                        },
                        "reference": {
                          "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9]{1,64}$",
                          "example": "12345XXY0123"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "createdAt": {
                          "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "modifiedAt": {
                          "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Payout created",
                    "value": {
                      "transaction": {
                        "id": "EX-####-####-####",
                        "orderId": "#########X#####",
                        "serviceId": "SL-####-####",
                        "description": "Example description",
                        "reference": "12345XXY0123",
                        "amount": {
                          "value": 10,
                          "currency": "EUR"
                        },
                        "created": "2016-06-04T08:15:00+01:00",
                        "modified": "2016-06-04T08:15:00+01:00"
                      },
                      "_links": [
                        {
                          "href": "/payout",
                          "rel": "self",
                          "type": "POST"
                        },
                        {
                          "href": "/transactions/EX-####-####-####",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "badRequest": {
                    "summary": "Bad request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "transaction.serviceId: Unable to find service location\ntransaction.amount.value: You have entered an invalid amount",
                      "violations": [
                        {
                          "propertyPath": "transaction.serviceId",
                          "message": "Unable to find service location",
                          "code": "PAY-2852"
                        },
                        {
                          "propertyPath": "transaction.amount.value",
                          "message": "You have entered an invalid amount",
                          "code": "PAY-2803"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "noRoute": {
                    "summary": "Unprocessable entity",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "limit of € 1000,00 in 13 weeks reached for IBAN XXXXXXXXXXXXXXXXX",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "limit of € 1000,00 in 13 weeks reached for IBAN XXXXXXXXXXXXXXXXX",
                          "code": "PAY-3031"
                        }
                      ]
                    }
                  },
                  "limitReached": {
                    "summary": "Payout no route available",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "No available route",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "No available route",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/producttypes": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "ProductTypes",
        "description": "Get all product types",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "productTypes": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Code of product type",
                            "type": "string"
                          },
                          "description": {
                            "description": "Description of product type",
                            "type": "string"
                          },
                          "image": {
                            "description": "Image of product type",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "productType",
                        "x-readme-ref-name": "productType"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get producttypes",
                    "value": {
                      "total": 1,
                      "productTypes": [
                        {
                          "code": "SHIPPING",
                          "description": "Costs of shipment",
                          "image": "/product_types/SHIPPING.svg",
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/producttypes",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/qr/decode": {
      "post": {
        "tags": [
          "Qr"
        ],
        "summary": "Decode a Qr code.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "uuid",
                  "secret"
                ],
                "properties": {
                  "uuid": {
                    "description": "The uuid of the QR code.",
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "1234-5678-1234-5678"
                  },
                  "secret": {
                    "description": "The secret of the QR code.",
                    "type": "string",
                    "format": "byte",
                    "maxLength": 40,
                    "minLength": 40,
                    "example": "secret"
                  },
                  "padChar": {
                    "description": "The padding character.",
                    "type": "string",
                    "maxLength": 1,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]{1}$",
                    "example": "a"
                  },
                  "referenceType": {
                    "description": "The reference type of the QR code. Must be one of the following values: string, hex.",
                    "type": "string",
                    "enum": [
                      "string",
                      "hex"
                    ],
                    "example": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "The uuid of the QR code.",
                      "type": "string",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "1234-5678-1234-5678"
                    },
                    "serviceId": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "secret": {
                      "description": "The secret of the QR code.",
                      "type": "string",
                      "format": "byte",
                      "maxLength": 40,
                      "minLength": 40,
                      "example": "secret"
                    },
                    "reference": {
                      "description": "The reference of the QR code.",
                      "type": "string",
                      "example": "123456"
                    },
                    "padChar": {
                      "description": "The padding character.",
                      "type": "string",
                      "maxLength": 1,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]{1}$",
                      "example": "a"
                    },
                    "referenceType": {
                      "description": "The reference type of the QR code. Must be one of the following values: string, hex.",
                      "type": "string",
                      "enum": [
                        "string",
                        "hex"
                      ],
                      "example": "string"
                    },
                    "externalPaymentLink": {
                      "description": "The external link to complete your payment with the supplier.",
                      "type": "string",
                      "example": "https://qr6.ideal.nl/uuid"
                    },
                    "paymentLink": {
                      "description": "A link to complete your payment using our payment screen.",
                      "type": "string",
                      "example": "https://ideal.pay.nl/qr/uuid"
                    },
                    "contents": {
                      "description": "The qr contents as a base64 string.",
                      "type": "string",
                      "example": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAMAAACahl6sAAADAFBM..."
                    }
                  },
                  "type": "object",
                  "title": "Qr",
                  "x-readme-ref-name": "Qr"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/qr/encode": {
      "post": {
        "tags": [
          "Qr"
        ],
        "summary": "Encode a Qr code.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "serviceId",
                  "secret",
                  "amount",
                  "reference"
                ],
                "properties": {
                  "serviceId": {
                    "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                    "type": "string",
                    "example": "SL-####-####"
                  },
                  "secret": {
                    "description": "The secret of the QR code.",
                    "type": "string",
                    "format": "byte",
                    "maxLength": 40,
                    "minLength": 40,
                    "example": "secret"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "reference": {
                    "description": "The reference of the QR code.",
                    "type": "string",
                    "example": "123456"
                  },
                  "padChar": {
                    "description": "The padding character.",
                    "type": "string",
                    "maxLength": 1,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]{1}$",
                    "example": "a"
                  },
                  "referenceType": {
                    "description": "The reference type of the QR code. Must be one of the following values: string, hex.",
                    "type": "string",
                    "enum": [
                      "string",
                      "hex"
                    ],
                    "example": "string"
                  },
                  "paymentMethod": {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "enum": [
                          10,
                          436
                        ]
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uuid": {
                      "description": "The uuid of the QR code.",
                      "type": "string",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "1234-5678-1234-5678"
                    },
                    "serviceId": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "secret": {
                      "description": "The secret of the QR code.",
                      "type": "string",
                      "format": "byte",
                      "maxLength": 40,
                      "minLength": 40,
                      "example": "secret"
                    },
                    "reference": {
                      "description": "The reference of the QR code.",
                      "type": "string",
                      "example": "123456"
                    },
                    "padChar": {
                      "description": "The padding character.",
                      "type": "string",
                      "maxLength": 1,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]{1}$",
                      "example": "a"
                    },
                    "referenceType": {
                      "description": "The reference type of the QR code. Must be one of the following values: string, hex.",
                      "type": "string",
                      "enum": [
                        "string",
                        "hex"
                      ],
                      "example": "string"
                    },
                    "externalPaymentLink": {
                      "description": "The external link to complete your payment with the supplier.",
                      "type": "string",
                      "example": "https://qr6.ideal.nl/uuid"
                    },
                    "paymentLink": {
                      "description": "A link to complete your payment using our payment screen.",
                      "type": "string",
                      "example": "https://ideal.pay.nl/qr/uuid"
                    },
                    "contents": {
                      "description": "The qr contents as a base64 string.",
                      "type": "string",
                      "example": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAMAAACahl6sAAADAFBM..."
                    }
                  },
                  "type": "object",
                  "title": "Qr",
                  "x-readme-ref-name": "Qr"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/qr/validate": {
      "post": {
        "tags": [
          "Qr"
        ],
        "summary": "Validate a Qr code.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "uuid",
                  "secret"
                ],
                "properties": {
                  "uuid": {
                    "description": "The uuid of the QR code.",
                    "type": "string",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "1234-5678-1234-5678"
                  },
                  "secret": {
                    "description": "The secret of the QR code.",
                    "type": "string",
                    "format": "byte",
                    "maxLength": 40,
                    "minLength": 40,
                    "example": "secret"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Authenticate:Refresh",
        "description": "Calling this endpoint will provide you with a new access and refresh token. You can only use the refresh token once",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "refreshToken"
                ],
                "properties": {
                  "refreshToken": {
                    "description": "Token used to exchange for new ones",
                    "type": "string",
                    "example": "5fe027d96cded0c92b2337d4068a336dc41b956683a501c95d4896d9cb9f1103dc0b6d3388f17c1ef6a578ed9aa3c9d1c133355e9d9a4fa5dbb53d22e0aba0dc"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {},
                "examples": {
                  "success": {
                    "summary": "Successful token creation",
                    "value": {
                      "tokenType": "Bearer",
                      "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJBLTE1ODQtOTMxNyIsImlhdCI6MTY2OTEyOTg0OSwiZXhwIjoxNjY5MTM3MDQ5fQ.7g61s7PN58Ope8t70ysnvOqbcOjGDFzyWanZeFqx8cQ",
                      "refreshToken": "5fe027d96cded0c92b2337d4068a336dc41b956683a501c95d4896d9cb9f1103dc0b6d3388f17c1ef6a578ed9aa3c9d1c133355e9d9a4fa5dbb53d22e0aba0dc",
                      "accessTokenExpiresAt": "2022-11-22T16:10:49+01:00",
                      "refreshTokenExpiresAt": "2022-11-22T17:10:49+01:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "refreshToken: Invalid refresh token",
                      "violations": [
                        {
                          "propertyPath": "refreshToken",
                          "message": "Invalid refresh token",
                          "code": "PAY-2869"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        }
      }
    },
    "/refunds/{refundId}": {
      "get": {
        "tags": [
          "Refunds"
        ],
        "summary": "Fetch a refund.",
        "parameters": [
          {
            "name": "refundId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "RF-0000-0000-0000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The ID of the refund",
                      "type": "string",
                      "example": "RF-####-####-####"
                    },
                    "paymentSessionId": {
                      "description": "The payment session identifier.",
                      "type": "string",
                      "example": 100000000
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "description": {
                      "description": "The description of the refund.",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "The product never got delivered."
                    },
                    "bankAccount": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "processDate": {
                      "description": "The ISO date at which this entity will be processed",
                      "type": "string",
                      "format": "date-time",
                      "example": "2019-01-01T12:00:00+02:00"
                    },
                    "vatPercentage": {
                      "description": "the vat percentage this refund applies to. Only applicable for amount, not products, and only for AfterPay.",
                      "type": "number",
                      "format": "float",
                      "example": "21.0"
                    },
                    "exchangeUrl": {
                      "description": "The URL where we exchange the status of a transaction.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://demo.pay.nl/exchange.php"
                    }
                  },
                  "type": "object",
                  "title": "Refund",
                  "x-readme-ref-name": "Refund"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/terminals/{terminalCode}": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Terminals:Get",
        "description": "Get for a specific terminal linked to your account the contract details, active terminal brands and the actual status of the terminal",
        "parameters": [
          {
            "name": "terminalCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The terminal identifier.",
              "type": "string",
              "example": "TH-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The terminal identifier.",
                      "type": "string",
                      "example": "TH-1234-1234"
                    },
                    "name": {
                      "description": "The name of the terminal.",
                      "type": "string",
                      "example": "Terminal Shop."
                    },
                    "attribution": {
                      "description": "The terminal attribution.",
                      "type": "string",
                      "example": "PAY.nl* CompanyName"
                    },
                    "status": {
                      "description": "The current status of the terminal.",
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "connectionStatus": {
                      "description": "The current connection status of the terminal.",
                      "type": "string",
                      "example": "ONLINE"
                    },
                    "merchant": {
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        }
                      },
                      "type": "object"
                    },
                    "service": {
                      "properties": {
                        "id": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "name": {
                          "description": "The name of your service.",
                          "type": "string",
                          "example": "My first service!"
                        }
                      },
                      "type": "object"
                    },
                    "description": {
                      "description": "The terminal description.",
                      "type": "string"
                    },
                    "terminalType": {
                      "description": "The terminal type.",
                      "type": "string"
                    },
                    "supplier": {
                      "properties": {
                        "id": {
                          "description": "The terminal supplier id",
                          "type": "integer",
                          "example": "1"
                        },
                        "name": {
                          "description": "The terminal supplier name",
                          "type": "string",
                          "example": "AtosWorldline"
                        },
                        "terminalId": {
                          "description": "The terminal supplier id",
                          "type": "string",
                          "example": "1"
                        }
                      },
                      "type": "object",
                      "title": "TerminalSupplier",
                      "x-readme-ref-name": "TerminalSupplier"
                    },
                    "ecrProtocol": {
                      "description": "The ECR protocol.",
                      "type": "string",
                      "example": "WEB"
                    },
                    "contractStartDate": {
                      "description": "The terminal contract startdate.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "contractEndDate": {
                      "description": "The terminal contract enddate.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentTypes": {
                      "description": "The terminal payment type.",
                      "type": "array",
                      "items": {
                        "properties": {
                          "paymentType": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "terminalBrands": {
                      "properties": {
                        "id": {
                          "description": "The terminal contract enddate.",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "image": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "acquirer": {
                          "description": "The terminal acquirer",
                          "type": "string"
                        },
                        "acquirerTid": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "acquirerMid": {
                          "description": "The terminal contract number",
                          "type": "string"
                        },
                        "acquirerChecksum": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "paymentTypes": {
                          "description": "The terminal payment type.",
                          "type": "array",
                          "items": {
                            "properties": {
                              "paymentType": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "TerminalBrand",
                      "x-readme-ref-name": "TerminalBrand"
                    },
                    "location": {
                      "properties": {
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "_links": {
                      "properties": {
                        "first": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "previous": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "next": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "last": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "rel": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "type": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get a terminal",
                    "value": {
                      "code": "TH-1234-1234",
                      "name": "Terminal Shop",
                      "attribution": "PAY.nl* CompanyName",
                      "status": "ACTIVE",
                      "connectionStatus": "ONLINE",
                      "merchant": {
                        "code": "M-3421-2120",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "service": {
                        "code": "SL-1234-1234",
                        "status": "ACTIVE",
                        "name": "Shop"
                      },
                      "description": "POI: 5028314",
                      "terminalType": "YOMANI Base UNIT NFC",
                      "supplier": {
                        "id": "4",
                        "name": "AtosWorldline",
                        "terminalId": "123456789"
                      },
                      "ecrProtocol": "WEB",
                      "contractStartDate": "2022-07-11",
                      "contractEndDate": "2025-07-11",
                      "paymentTypes": [
                        "SALE",
                        "REFUND"
                      ],
                      "terminalBrands": [
                        {
                          "id": 1003,
                          "name": "V PAY",
                          "image": "/terminal_brands/1003.svg",
                          "acquirer": "AWL Europe",
                          "acquirerTid": "123456",
                          "acquirerMid": "123456",
                          "acquirerChecksum": "123",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null
                        },
                        {
                          "id": 1009,
                          "name": "MAESTRO",
                          "image": "/terminal_brands/1009.svg",
                          "acquirer": "AWL Europe",
                          "acquirerTid": "123456",
                          "acquirerMid": "123456",
                          "acquirerChecksum": "123",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null
                        }
                      ],
                      "location": {
                        "code": "AS-0113-4000",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "regionCode": null,
                        "countryCode": "NL"
                      },
                      "createdAt": "2022-03-18T14:35:21+02:00",
                      "createdBy": "AT-1233-1322",
                      "modifiedAt": "2022-03-18T15:24:52+02:00",
                      "modifiedBy": "AT-1233-1322",
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/terminals/TH-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Terminals"
        ],
        "summary": "Terminals:Delete",
        "description": "Remove a terminal from a merchant. You can undelete within a 15 minute time window",
        "parameters": [
          {
            "name": "terminalCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The terminal identifier.",
              "type": "string",
              "example": "TH-1234-1234"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/terminals": {
      "get": {
        "tags": [
          "Terminals"
        ],
        "summary": "Terminals:Browse",
        "description": "Get a list of all terminals linked to your account. Including the contract details,  active terminal brands and the actual status of a terminal",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Limit the returned records. If not supplied we will default to 100 records",
            "schema": {
              "type": "integer",
              "default": 100,
              "maximum": 100,
              "minimum": 1
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Indicate which page you want in your result set. If not supplied we will default to page 1",
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "merchant",
            "in": "query",
            "description": "If you are a partner you can indicate for which merchants you want to retrieve the terminals. If you do not supply a merchant we will return the terminals for all your merchants",
            "style": "deepObject",
            "explode": true,
            "schema": {
              "properties": {
                "eq": {
                  "description": "Get results that equal the given value",
                  "type": "string",
                  "example": "M-1234-4321"
                },
                "neq": {
                  "description": "Get results that do not equal the given value",
                  "type": "string",
                  "example": "M-1234-4321"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "terminals": {
                      "type": "array",
                      "items": {
                        "title": "terminal",
                        "properties": {
                          "code": {
                            "description": "The terminal identifier.",
                            "type": "string",
                            "example": "TH-1234-1234"
                          },
                          "name": {
                            "description": "The name of the terminal.",
                            "type": "string",
                            "example": "Terminal Shop."
                          },
                          "attribution": {
                            "description": "The terminal attribution.",
                            "type": "string",
                            "example": "PAY.nl* CompanyName"
                          },
                          "status": {
                            "description": "The current status of the terminal.",
                            "type": "string",
                            "example": "ACTIVE"
                          },
                          "connectionStatus": {
                            "description": "The current connection status of the terminal.",
                            "type": "string",
                            "example": "ONLINE"
                          },
                          "merchant": {
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "name": {
                                "description": "The name of your merchant.",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 2,
                                "example": "CompanyName"
                              }
                            },
                            "type": "object"
                          },
                          "service": {
                            "properties": {
                              "id": {
                                "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                                "type": "string",
                                "example": "SL-####-####"
                              },
                              "name": {
                                "description": "The name of your service.",
                                "type": "string",
                                "example": "My first service!"
                              }
                            },
                            "type": "object"
                          },
                          "description": {
                            "description": "The terminal description.",
                            "type": "string"
                          },
                          "terminalType": {
                            "description": "The terminal type.",
                            "type": "string"
                          },
                          "supplier": {
                            "properties": {
                              "id": {
                                "description": "The terminal supplier id",
                                "type": "integer",
                                "example": "1"
                              },
                              "name": {
                                "description": "The terminal supplier name",
                                "type": "string",
                                "example": "AtosWorldline"
                              },
                              "terminalId": {
                                "description": "The terminal supplier id",
                                "type": "string",
                                "example": "1"
                              }
                            },
                            "type": "object",
                            "title": "TerminalSupplier",
                            "x-readme-ref-name": "TerminalSupplier"
                          },
                          "ecrProtocol": {
                            "description": "The ECR protocol.",
                            "type": "string",
                            "example": "WEB"
                          },
                          "contractStartDate": {
                            "description": "The terminal contract startdate.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "contractEndDate": {
                            "description": "The terminal contract enddate.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "paymentTypes": {
                            "description": "The terminal payment type.",
                            "type": "array",
                            "items": {
                              "properties": {
                                "paymentType": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "terminalBrands": {
                            "properties": {
                              "id": {
                                "description": "The terminal contract enddate.",
                                "type": "integer"
                              },
                              "name": {
                                "description": "The terminal contract enddate.",
                                "type": "string"
                              },
                              "image": {
                                "description": "The terminal contract enddate.",
                                "type": "string"
                              },
                              "acquirer": {
                                "description": "The terminal acquirer",
                                "type": "string"
                              },
                              "acquirerTid": {
                                "description": "The terminal contract enddate.",
                                "type": "string"
                              },
                              "acquirerMid": {
                                "description": "The terminal contract number",
                                "type": "string"
                              },
                              "acquirerChecksum": {
                                "description": "The terminal contract enddate.",
                                "type": "string"
                              },
                              "paymentTypes": {
                                "description": "The terminal payment type.",
                                "type": "array",
                                "items": {
                                  "properties": {
                                    "paymentType": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "object"
                                }
                              },
                              "createdAt": {
                                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": false
                              },
                              "createdBy": {
                                "description": "The reference to an account or token whom created the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": false
                              },
                              "modifiedAt": {
                                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": true
                              },
                              "modifiedBy": {
                                "description": "The reference to an account or token whom modified the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": true
                              },
                              "deletedAt": {
                                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2016-06-04T08:15:00+01:00",
                                "nullable": true
                              },
                              "deletedBy": {
                                "description": "The reference to an account or token whom deleted the entity",
                                "type": "string",
                                "pattern": "^A(T)?(-\\d{4}){2}$",
                                "readOnly": true,
                                "example": "A-1234-4321",
                                "nullable": true
                              }
                            },
                            "type": "object",
                            "title": "TerminalBrand",
                            "x-readme-ref-name": "TerminalBrand"
                          },
                          "location": {
                            "properties": {
                              "streetName": {
                                "description": "The name of the street",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Visitlane"
                              },
                              "streetNumber": {
                                "description": "The street number",
                                "type": "string",
                                "maxLength": 32,
                                "minLength": 1,
                                "example": "13"
                              },
                              "zipCode": {
                                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                "type": "string",
                                "maxLength": 16,
                                "minLength": 1,
                                "example": "5678CD"
                              },
                              "city": {
                                "description": "The name of a city",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 1,
                                "example": "Amsterdam"
                              },
                              "countryCode": {
                                "description": "The country code consisting of 2 uppercase letters",
                                "type": "string",
                                "maxLength": 2,
                                "minLength": 2,
                                "example": "NL"
                              }
                            },
                            "type": "object"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object"
                      }
                    },
                    "_links": {
                      "properties": {
                        "first": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "previous": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "next": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "last": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "rel": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "type": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get all terminals",
                    "value": {
                      "total": 1,
                      "count": 1,
                      "terminals": [
                        {
                          "code": "TH-1234-1234",
                          "name": "Terminal Shop",
                          "attribution": "PAY.nl* CompanyName",
                          "status": "ACTIVE",
                          "connectionStatus": "ONLINE",
                          "merchant": {
                            "code": "M-3421-2120",
                            "status": "ACTIVE",
                            "name": "CompanyName"
                          },
                          "service": {
                            "code": "SL-1234-1234",
                            "status": "ACTIVE",
                            "name": "Shop"
                          },
                          "description": "POI: 5028314",
                          "terminalType": "YOMANI Base UNIT NFC",
                          "supplier": {
                            "id": "4",
                            "name": "AtosWorldline",
                            "terminalId": "123456789"
                          },
                          "ecrProtocol": "WEB",
                          "contractStartDate": "2022-07-11",
                          "contractEndDate": "2025-07-11",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "terminalBrands": [
                            {
                              "id": 1003,
                              "name": "V PAY",
                              "image": "/terminal_brands/1003.svg",
                              "acquirer": "AWL Europe",
                              "acquirerTid": "123456",
                              "acquirerMid": "123456",
                              "acquirerChecksum": "123",
                              "paymentTypes": [
                                "SALE",
                                "REFUND"
                              ],
                              "createdAt": "2022-03-18T14:35:21+02:00",
                              "createdBy": "AT-1233-1322",
                              "modifiedAt": "2022-03-18T15:24:52+02:00",
                              "modifiedBy": "AT-1233-1322",
                              "deletedAt": null,
                              "deletedBy": null
                            },
                            {
                              "id": 1009,
                              "name": "MAESTRO",
                              "image": "/terminal_brands/1009.svg",
                              "acquirerTid": "123456",
                              "acquirerChecksum": "123",
                              "paymentTypes": [
                                "SALE",
                                "REFUND"
                              ],
                              "createdAt": "2022-03-18T14:35:21+02:00",
                              "createdBy": "AT-1233-1322",
                              "modifiedAt": "2022-03-18T15:24:52+02:00",
                              "modifiedBy": "AT-1233-1322",
                              "deletedAt": null,
                              "deletedBy": null
                            }
                          ],
                          "location": {
                            "code": "AS-0113-4000",
                            "streetName": "Deliverylane",
                            "streetNumber": "70",
                            "zipCode": "5678CD",
                            "city": "Amsterdam",
                            "regionCode": null,
                            "countryCode": "NL"
                          },
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null,
                          "_links": [
                            {
                              "href": "/terminals/TH-1234-1234",
                              "rel": "terminal",
                              "type": "GET"
                            }
                          ]
                        }
                      ],
                      "_links": {
                        "self": {
                          "href": "/terminals?limit=1&page=1",
                          "rel": "self",
                          "type": "GET"
                        },
                        "first": {
                          "href": "/terminals?limit=1&page=1"
                        },
                        "previous": {
                          "href": "/terminals?limit=1&page=1"
                        },
                        "next": {
                          "href": "/terminals?limit=1&page=2"
                        },
                        "last": {
                          "href": "/terminals?limit=1&page=4"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Terminals:Create",
        "description": "Create a terminal for a service location from a merchant so that the terminal can be used.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "serviceId",
                  "activationCode",
                  "name",
                  "description"
                ],
                "properties": {
                  "serviceId": {
                    "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                    "type": "string",
                    "example": "SL-####-####"
                  },
                  "activationCode": {
                    "description": "The code needed to activate your terminal.",
                    "type": "string",
                    "pattern": "^(?:\\w{4}-?){2}\\w{4}$",
                    "example": "1234-5678-9101"
                  },
                  "name": {
                    "description": "The name of your terminal.",
                    "type": "string",
                    "example": "Stand #3 terminal"
                  },
                  "description": {
                    "description": "The description for your terminal.",
                    "type": "string",
                    "example": "Terminal for event X at location Y"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The terminal identifier.",
                      "type": "string",
                      "example": "TH-1234-1234"
                    },
                    "name": {
                      "description": "The name of the terminal.",
                      "type": "string",
                      "example": "Terminal Shop."
                    },
                    "attribution": {
                      "description": "The terminal attribution.",
                      "type": "string",
                      "example": "PAY.nl* CompanyName"
                    },
                    "status": {
                      "description": "The current status of the terminal.",
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "connectionStatus": {
                      "description": "The current connection status of the terminal.",
                      "type": "string",
                      "example": "ONLINE"
                    },
                    "merchant": {
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        }
                      },
                      "type": "object"
                    },
                    "service": {
                      "properties": {
                        "id": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "name": {
                          "description": "The name of your service.",
                          "type": "string",
                          "example": "My first service!"
                        }
                      },
                      "type": "object"
                    },
                    "description": {
                      "description": "The terminal description.",
                      "type": "string"
                    },
                    "terminalType": {
                      "description": "The terminal type.",
                      "type": "string"
                    },
                    "supplier": {
                      "properties": {
                        "id": {
                          "description": "The terminal supplier id",
                          "type": "integer",
                          "example": "1"
                        },
                        "name": {
                          "description": "The terminal supplier name",
                          "type": "string",
                          "example": "AtosWorldline"
                        },
                        "terminalId": {
                          "description": "The terminal supplier id",
                          "type": "string",
                          "example": "1"
                        }
                      },
                      "type": "object",
                      "title": "TerminalSupplier",
                      "x-readme-ref-name": "TerminalSupplier"
                    },
                    "ecrProtocol": {
                      "description": "The ECR protocol.",
                      "type": "string",
                      "example": "WEB"
                    },
                    "contractStartDate": {
                      "description": "The terminal contract startdate.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "contractEndDate": {
                      "description": "The terminal contract enddate.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentTypes": {
                      "description": "The terminal payment type.",
                      "type": "array",
                      "items": {
                        "properties": {
                          "paymentType": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "terminalBrands": {
                      "properties": {
                        "id": {
                          "description": "The terminal contract enddate.",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "image": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "acquirer": {
                          "description": "The terminal acquirer",
                          "type": "string"
                        },
                        "acquirerTid": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "acquirerMid": {
                          "description": "The terminal contract number",
                          "type": "string"
                        },
                        "acquirerChecksum": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "paymentTypes": {
                          "description": "The terminal payment type.",
                          "type": "array",
                          "items": {
                            "properties": {
                              "paymentType": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "TerminalBrand",
                      "x-readme-ref-name": "TerminalBrand"
                    },
                    "location": {
                      "properties": {
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "_links": {
                      "properties": {
                        "first": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "previous": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "next": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "last": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "rel": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "type": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Terminal created",
                    "value": {
                      "code": "TH-1234-1234",
                      "name": "Terminal Shop",
                      "attribution": "PAY.nl* CompanyName",
                      "status": "ACTIVE",
                      "connectionStatus": "ONLINE",
                      "merchant": {
                        "code": "M-3421-2120",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "service": {
                        "code": "SL-1234-1234",
                        "status": "ACTIVE",
                        "name": "Shop"
                      },
                      "description": "POI: 5028314",
                      "terminalType": "YOMANI Base UNIT NFC",
                      "supplier": {
                        "id": "4",
                        "name": "AtosWorldline",
                        "terminalId": "123456789"
                      },
                      "ecrProtocol": "WEB",
                      "contractStartDate": "2022-07-11",
                      "contractEndDate": "2025-07-11",
                      "paymentTypes": [
                        "SALE",
                        "REFUND"
                      ],
                      "terminalBrands": [
                        {
                          "id": 1003,
                          "name": "V PAY",
                          "image": "/terminal_brands/1003.svg",
                          "acquirer": "AWL Europe",
                          "acquirerTid": "123456",
                          "acquirerMid": "123456",
                          "acquirerChecksum": "123",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null
                        },
                        {
                          "id": 1009,
                          "name": "MAESTRO",
                          "image": "/terminal_brands/1009.svg",
                          "acquirer": "AWL Europe",
                          "acquirerTid": "123456",
                          "acquirerMid": "123456",
                          "acquirerChecksum": "123",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null
                        }
                      ],
                      "location": {
                        "code": "AS-0113-4000",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "regionCode": null,
                        "countryCode": "NL"
                      },
                      "createdAt": "2022-03-18T14:35:21+02:00",
                      "createdBy": "AT-1233-1322",
                      "modifiedAt": "2022-03-18T15:24:52+02:00",
                      "modifiedBy": "AT-1233-1322",
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/terminals/TH-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/terminals/{terminalCode}/undelete": {
      "post": {
        "tags": [
          "Terminals"
        ],
        "summary": "Terminals:Undelete",
        "description": "Undelete a terminal that was rececently deleted. This can only be done witin a 15 minute time window",
        "parameters": [
          {
            "name": "terminalCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The terminal identifier.",
              "type": "string",
              "example": "TH-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The terminal identifier.",
                      "type": "string",
                      "example": "TH-1234-1234"
                    },
                    "name": {
                      "description": "The name of the terminal.",
                      "type": "string",
                      "example": "Terminal Shop."
                    },
                    "attribution": {
                      "description": "The terminal attribution.",
                      "type": "string",
                      "example": "PAY.nl* CompanyName"
                    },
                    "status": {
                      "description": "The current status of the terminal.",
                      "type": "string",
                      "example": "ACTIVE"
                    },
                    "connectionStatus": {
                      "description": "The current connection status of the terminal.",
                      "type": "string",
                      "example": "ONLINE"
                    },
                    "merchant": {
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        }
                      },
                      "type": "object"
                    },
                    "service": {
                      "properties": {
                        "id": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "name": {
                          "description": "The name of your service.",
                          "type": "string",
                          "example": "My first service!"
                        }
                      },
                      "type": "object"
                    },
                    "description": {
                      "description": "The terminal description.",
                      "type": "string"
                    },
                    "terminalType": {
                      "description": "The terminal type.",
                      "type": "string"
                    },
                    "supplier": {
                      "properties": {
                        "id": {
                          "description": "The terminal supplier id",
                          "type": "integer",
                          "example": "1"
                        },
                        "name": {
                          "description": "The terminal supplier name",
                          "type": "string",
                          "example": "AtosWorldline"
                        },
                        "terminalId": {
                          "description": "The terminal supplier id",
                          "type": "string",
                          "example": "1"
                        }
                      },
                      "type": "object",
                      "title": "TerminalSupplier",
                      "x-readme-ref-name": "TerminalSupplier"
                    },
                    "ecrProtocol": {
                      "description": "The ECR protocol.",
                      "type": "string",
                      "example": "WEB"
                    },
                    "contractStartDate": {
                      "description": "The terminal contract startdate.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "contractEndDate": {
                      "description": "The terminal contract enddate.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "paymentTypes": {
                      "description": "The terminal payment type.",
                      "type": "array",
                      "items": {
                        "properties": {
                          "paymentType": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "terminalBrands": {
                      "properties": {
                        "id": {
                          "description": "The terminal contract enddate.",
                          "type": "integer"
                        },
                        "name": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "image": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "acquirer": {
                          "description": "The terminal acquirer",
                          "type": "string"
                        },
                        "acquirerTid": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "acquirerMid": {
                          "description": "The terminal contract number",
                          "type": "string"
                        },
                        "acquirerChecksum": {
                          "description": "The terminal contract enddate.",
                          "type": "string"
                        },
                        "paymentTypes": {
                          "description": "The terminal payment type.",
                          "type": "array",
                          "items": {
                            "properties": {
                              "paymentType": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "TerminalBrand",
                      "x-readme-ref-name": "TerminalBrand"
                    },
                    "location": {
                      "properties": {
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "_links": {
                      "properties": {
                        "first": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "previous": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "next": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "last": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        },
                        "self": {
                          "properties": {
                            "href": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "rel": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            },
                            "type": {
                              "description": "",
                              "type": "string",
                              "readOnly": true,
                              "example": "",
                              "nullable": false
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get a terminal",
                    "value": {
                      "code": "TH-1234-1234",
                      "name": "Terminal Shop",
                      "attribution": "PAY.nl* CompanyName",
                      "status": "ACTIVE",
                      "connectionStatus": "ONLINE",
                      "merchant": {
                        "code": "M-3421-2120",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "service": {
                        "code": "SL-1234-1234",
                        "status": "ACTIVE",
                        "name": "Shop"
                      },
                      "description": "POI: 5028314",
                      "terminalType": "YOMANI Base UNIT NFC",
                      "supplier": {
                        "id": "4",
                        "name": "AtosWorldline",
                        "terminalId": "123456789"
                      },
                      "ecrProtocol": "WEB",
                      "contractStartDate": "2022-07-11",
                      "contractEndDate": "2025-07-11",
                      "paymentTypes": [
                        "SALE",
                        "REFUND"
                      ],
                      "terminalBrands": [
                        {
                          "id": 1003,
                          "name": "V PAY",
                          "image": "/terminal_brands/1003.svg",
                          "acquirer": "AWL Europe",
                          "acquirerTid": "123456",
                          "acquirerMid": "123456",
                          "acquirerChecksum": "123",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null
                        },
                        {
                          "id": 1009,
                          "name": "MAESTRO",
                          "image": "/terminal_brands/1009.svg",
                          "acquirer": "AWL Europe",
                          "acquirerTid": "123456",
                          "acquirerMid": "123456",
                          "acquirerChecksum": "123",
                          "paymentTypes": [
                            "SALE",
                            "REFUND"
                          ],
                          "createdAt": "2022-03-18T14:35:21+02:00",
                          "createdBy": "AT-1233-1322",
                          "modifiedAt": "2022-03-18T15:24:52+02:00",
                          "modifiedBy": "AT-1233-1322",
                          "deletedAt": null,
                          "deletedBy": null
                        }
                      ],
                      "location": {
                        "code": "AS-0113-4000",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "regionCode": null,
                        "countryCode": "NL"
                      },
                      "createdAt": "2022-03-18T14:35:21+02:00",
                      "createdBy": "AT-1233-1322",
                      "modifiedAt": "2022-03-18T15:24:52+02:00",
                      "modifiedBy": "AT-1233-1322",
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/terminals/TH-1234-1234",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/trademarks/{trademarkCode}": {
      "get": {
        "tags": [
          "Trademarks"
        ],
        "summary": "Trademarks:Get",
        "description": "Get a specific trademark.",
        "parameters": [
          {
            "name": "trademarkCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "An identifier for this trademark",
              "type": "string",
              "example": "TM-0000-0000"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                },
                "examples": {
                  "success": {
                    "summary": "Trademark",
                    "value": {
                      "code": "TM-XXXX-XXXX",
                      "name": "El-shop.nl",
                      "status": "APPROVED",
                      "merchant": {
                        "code": "M-XXXX-XXXX",
                        "status": "INACTIVE",
                        "name": "El's Webwinkel"
                      },
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "A-XXXX-XXXX",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/trademarks/TM-XXXX-XXXX",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Trademarks"
        ],
        "summary": "Trademarks:Suspend",
        "description": "A suspended trademark will not be used in any communication. You can unsuspend within a 15 minute time window.",
        "parameters": [
          {
            "name": "trademarkCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "An identifier for this trademark",
              "type": "string",
              "example": "TM-0000-0000"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/trademarks": {
      "get": {
        "tags": [
          "Trademarks"
        ],
        "summary": "Trademarks:Browse",
        "description": "Get all trademarks.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "trademarks": {
                      "type": "array",
                      "items": {
                        "required": [
                          "name"
                        ],
                        "properties": {
                          "code": {
                            "description": "An identifier for this trademark",
                            "type": "string",
                            "example": "TM-0000-0000"
                          },
                          "type": {
                            "type": "string"
                          },
                          "name": {
                            "description": "A registered trademark name.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Status of the trademark.",
                            "type": "string"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "Trademark",
                        "x-readme-ref-name": "Trademark"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get all trademarks",
                    "value": {
                      "total": 1,
                      "trademarks": [
                        {
                          "code": "TM-XXXX-XXXX",
                          "name": "Cole, Hickle and Boehm",
                          "status": "APPROVED",
                          "merchant": {
                            "code": "M-XXXX-XXXX",
                            "status": "INACTIVE",
                            "name": "Us B.V."
                          },
                          "createdAt": "2021-01-04T19:55:59+01:00",
                          "createdBy": "A-XXXX-XXXX",
                          "modifiedAt": "2021-01-04T19:57:52+01:00",
                          "modifiedBy": "A-XXXX-XXXX",
                          "deletedAt": null,
                          "deletedBy": null,
                          "_links": [
                            {
                              "href": "/trademarks/TM-XXXX-XXXX",
                              "rel": "trademark",
                              "type": "GET"
                            }
                          ]
                        }
                      ],
                      "_links": [
                        {
                          "href": "/trademarks",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Trademarks"
        ],
        "summary": "Trademarks:Create",
        "description": "Create a trademark for a merchant. This trademark can be assigned to a sales location. Trademarks will be shown on the statement of the payer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "description": "A registered trademark name.",
                    "type": "string"
                  },
                  "merchantCode": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                },
                "examples": {
                  "success": {
                    "summary": "Trademark",
                    "value": {
                      "code": "TM-XXXX-XXXX",
                      "name": "El-shop.nl",
                      "status": "APPROVED",
                      "merchant": {
                        "code": "M-XXXX-XXXX",
                        "status": "INACTIVE",
                        "name": "El's Webwinkel"
                      },
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "A-XXXX-XXXX",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/trademarks/TM-XXXX-XXXX",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "value": {
                    "summary": "Merchant not found",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "merchantCode: Unable to find merchant",
                      "violations": [
                        {
                          "propertyPath": "merchantCode",
                          "message": "Unable to find merchant",
                          "code": "PAY-2835"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/trademarks/{trademarkCode}/unsuspend": {
      "post": {
        "tags": [
          "Trademarks"
        ],
        "summary": "Trademarks:Unsuspend",
        "description": "Unsuspend a Trademark that was recently deleted. This can only be done within a 15 minute time window.",
        "parameters": [
          {
            "name": "trademarkCode",
            "in": "path",
            "required": true,
            "schema": {
              "description": "An identifier for this trademark",
              "type": "string",
              "example": "TM-0000-0000"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                },
                "examples": {
                  "success": {
                    "summary": "Trademark",
                    "value": {
                      "code": "TM-XXXX-XXXX",
                      "name": "El-shop.nl",
                      "status": "APPROVED",
                      "merchant": {
                        "code": "M-XXXX-XXXX",
                        "status": "INACTIVE",
                        "name": "El's Webwinkel"
                      },
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "A-XXXX-XXXX",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/trademarks/TM-XXXX-XXXX",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/turnovergroups/{turnoverGroupCode}": {
      "get": {
        "tags": [
          "TurnoverGroup"
        ],
        "summary": "TurnoverGroups:Get",
        "description": "Get the details of a specific turnover group. Note you need to have access to the merchant if the turnover group is not available under your own merchant registration",
        "parameters": [
          {
            "name": "turnoverGroupCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "CT-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "name",
                    "default",
                    "description",
                    "paymentDescription",
                    "merchant",
                    "bankAccount",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "CT-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "paymentDescription": {
                      "type": "string",
                      "nullable": true
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "status",
                        "name"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        }
                      },
                      "type": "object"
                    },
                    "bankAccount": {
                      "required": [
                        "code",
                        "status",
                        "method",
                        "iban"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant bank account id of your company starting with BA.",
                          "type": "string",
                          "example": "BA-1234-4321"
                        },
                        "status": {
                          "description": "The current check status of the clearing account.",
                          "type": "string",
                          "example": "NOT_CHECKED"
                        },
                        "method": {
                          "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                          "type": "string",
                          "example": "iban"
                        },
                        "iban": {
                          "required": [
                            "iban",
                            "bic",
                            "owner"
                          ],
                          "properties": {
                            "iban": {
                              "description": "The International Bank Account Number (IBAN).",
                              "type": "string",
                              "example": "NL69INGB0123456789"
                            },
                            "bic": {
                              "description": "Business Identifier Codes (BIC/SWIFT).",
                              "type": "string",
                              "example": "INGBNL2A"
                            },
                            "owner": {
                              "description": "The owner of the bank account.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John Doe"
                            }
                          },
                          "type": "object",
                          "title": "BankAccount",
                          "x-readme-ref-name": "BankAccount"
                        }
                      },
                      "type": "object",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TurnoverGroup",
                  "x-readme-ref-name": "TurnoverGroup"
                },
                "examples": {
                  "success": {
                    "summary": "Turnover group",
                    "value": {
                      "code": "CT-1234-4321",
                      "name": "Standaard",
                      "default": true,
                      "description": "Standaard",
                      "paymentDescription": null,
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "bankAccount": {
                        "code": "BA-1234-4321",
                        "status": "NOT_CHECKED",
                        "method": "iban",
                        "iban": {
                          "iban": "NL69INGB0123456789",
                          "bic": "INGBNL2A",
                          "owner": "John Doe"
                        }
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/turnovergroups/CT-1234-4321",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TurnoverGroup"
        ],
        "summary": "TurnoverGroups:Delete",
        "description": "Deletes a turnover group. Note you need to have access to the merchant if the turnover group is not available under your own merchant registration",
        "parameters": [
          {
            "name": "turnoverGroupCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "CT-1234-4321"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "turnoverGroup: {}",
                      "violations": [
                        {
                          "propertyPath": "turnoverGroup",
                          "message": "{}",
                          "code": "PAY-404"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/turnovergroups": {
      "get": {
        "tags": [
          "TurnoverGroup"
        ],
        "summary": "TurnoverGroups:Browse",
        "description": "Get all turnover groups. If you do not supply a merchantCode we return the turnover groups that are available under your own merchant registration. If you supply a merchantCode you need to have access to that merchant",
        "parameters": [
          {
            "name": "merchant",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The merchant id of your company starting with M.",
              "type": "string",
              "example": "M-1234-4321"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "turnoverGroups": {
                      "type": "array",
                      "items": {
                        "required": [
                          "code",
                          "name",
                          "default",
                          "description",
                          "paymentDescription",
                          "merchant",
                          "bankAccount",
                          "createdAt",
                          "createdBy",
                          "modifiedAt",
                          "modifiedBy",
                          "deletedAt",
                          "deletedBy"
                        ],
                        "properties": {
                          "code": {
                            "type": "string",
                            "example": "CT-1234-4321"
                          },
                          "name": {
                            "type": "string"
                          },
                          "default": {
                            "type": "boolean"
                          },
                          "description": {
                            "type": "string"
                          },
                          "paymentDescription": {
                            "type": "string",
                            "nullable": true
                          },
                          "merchant": {
                            "required": [
                              "code",
                              "status",
                              "name"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant id of your company starting with M.",
                                "type": "string",
                                "example": "M-1234-4321"
                              },
                              "status": {
                                "description": "Merchant state",
                                "type": "string",
                                "example": "ACTIVE"
                              },
                              "name": {
                                "description": "The name of your merchant.",
                                "type": "string",
                                "maxLength": 128,
                                "minLength": 2,
                                "example": "CompanyName"
                              }
                            },
                            "type": "object"
                          },
                          "bankAccount": {
                            "required": [
                              "code",
                              "status",
                              "method",
                              "iban"
                            ],
                            "properties": {
                              "code": {
                                "description": "The merchant bank account id of your company starting with BA.",
                                "type": "string",
                                "example": "BA-1234-4321"
                              },
                              "status": {
                                "description": "The current check status of the clearing account.",
                                "type": "string",
                                "example": "NOT_CHECKED"
                              },
                              "method": {
                                "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                                "type": "string",
                                "example": "iban"
                              },
                              "iban": {
                                "required": [
                                  "iban",
                                  "bic",
                                  "owner"
                                ],
                                "properties": {
                                  "iban": {
                                    "description": "The International Bank Account Number (IBAN).",
                                    "type": "string",
                                    "example": "NL69INGB0123456789"
                                  },
                                  "bic": {
                                    "description": "Business Identifier Codes (BIC/SWIFT).",
                                    "type": "string",
                                    "example": "INGBNL2A"
                                  },
                                  "owner": {
                                    "description": "The owner of the bank account.",
                                    "type": "string",
                                    "maxLength": 64,
                                    "minLength": 1,
                                    "example": "John Doe"
                                  }
                                },
                                "type": "object",
                                "title": "BankAccount",
                                "x-readme-ref-name": "BankAccount"
                              }
                            },
                            "type": "object",
                            "nullable": true
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "modifiedBy": {
                            "description": "The reference to an account or token whom modified the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedBy": {
                            "description": "The reference to an account or token whom deleted the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "TurnoverGroup",
                        "x-readme-ref-name": "TurnoverGroup"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Turnover group",
                    "value": {
                      "total": 1,
                      "turnoverGroups": {
                        "code": "CT-1234-4321",
                        "name": "Standaard",
                        "default": true,
                        "description": "Standaard",
                        "paymentDescription": null,
                        "merchant": {
                          "code": "M-1234-4321",
                          "status": "ACTIVE",
                          "name": "CompanyName"
                        },
                        "bankAccount": {
                          "code": "BA-1234-4321",
                          "status": "NOT_CHECKED",
                          "method": "iban",
                          "iban": {
                            "iban": "NL69INGB0123456789",
                            "bic": "INGBNL2A",
                            "owner": "John Doe"
                          }
                        },
                        "createdAt": "2016-06-04T08:15:00+01:00",
                        "createdBy": "A-1234-4321",
                        "modifiedAt": null,
                        "modifiedBy": null,
                        "deletedAt": null,
                        "deletedBy": null,
                        "_links": [
                          {
                            "href": "/turnovergroups/CT-1234-4321",
                            "rel": "turnoverGroup",
                            "type": "GET"
                          }
                        ]
                      },
                      "_links": [
                        {
                          "href": "/turnovergroups",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "TurnoverGroup"
        ],
        "summary": "TurnoverGroups:Create",
        "description": "If you want to group your revenue to get better insights or you want to use multiple clearing accounts, you can create a turnovergroup. You can link a turnovergroup to a clearingaccount. You can also supply a merchantCode. If a merchantCode is supplied then you need to have access to that merchant",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "merchantCode",
                  "turnoverGroup"
                ],
                "properties": {
                  "merchantCode": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "turnoverGroup": {
                    "required": [
                      "name",
                      "default"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "bankAccountCode": {
                        "description": "The merchant bank account id of your company starting with BA.",
                        "type": "string",
                        "example": "BA-1234-4321"
                      },
                      "default": {
                        "type": "boolean"
                      },
                      "description": {
                        "type": "string"
                      },
                      "paymentDescription": {
                        "type": "string",
                        "nullable": true
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "examples": {
                "turnoverGroup": {
                  "summary": "Turnover group without bank account",
                  "value": {
                    "merchantCode": "M-1234-4321",
                    "turnoverGroup": {
                      "name": "Standaard",
                      "default": true,
                      "description": "",
                      "paymentDescription": ""
                    }
                  }
                },
                "turnoverGroupWithBankAccount": {
                  "summary": "Turnover group with bank account",
                  "value": {
                    "merchantCode": "M-1234-4321",
                    "turnoverGroup": {
                      "name": "Standaard",
                      "bankAccountCode": "BA-1234-4321",
                      "default": true,
                      "description": "",
                      "paymentDescription": ""
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "name",
                    "default",
                    "description",
                    "paymentDescription",
                    "merchant",
                    "bankAccount",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "CT-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "paymentDescription": {
                      "type": "string",
                      "nullable": true
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "status",
                        "name"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        }
                      },
                      "type": "object"
                    },
                    "bankAccount": {
                      "required": [
                        "code",
                        "status",
                        "method",
                        "iban"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant bank account id of your company starting with BA.",
                          "type": "string",
                          "example": "BA-1234-4321"
                        },
                        "status": {
                          "description": "The current check status of the clearing account.",
                          "type": "string",
                          "example": "NOT_CHECKED"
                        },
                        "method": {
                          "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                          "type": "string",
                          "example": "iban"
                        },
                        "iban": {
                          "required": [
                            "iban",
                            "bic",
                            "owner"
                          ],
                          "properties": {
                            "iban": {
                              "description": "The International Bank Account Number (IBAN).",
                              "type": "string",
                              "example": "NL69INGB0123456789"
                            },
                            "bic": {
                              "description": "Business Identifier Codes (BIC/SWIFT).",
                              "type": "string",
                              "example": "INGBNL2A"
                            },
                            "owner": {
                              "description": "The owner of the bank account.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John Doe"
                            }
                          },
                          "type": "object",
                          "title": "BankAccount",
                          "x-readme-ref-name": "BankAccount"
                        }
                      },
                      "type": "object",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TurnoverGroup",
                  "x-readme-ref-name": "TurnoverGroup"
                },
                "examples": {
                  "success": {
                    "summary": "Turnover group",
                    "value": {
                      "code": "CT-1234-4321",
                      "name": "Standaard",
                      "default": true,
                      "description": "Standaard",
                      "paymentDescription": null,
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "bankAccount": {
                        "code": "BA-1234-4321",
                        "status": "NOT_CHECKED",
                        "method": "iban",
                        "iban": {
                          "iban": "NL69INGB0123456789",
                          "bic": "INGBNL2A",
                          "owner": "John Doe"
                        }
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/turnovergroups/CT-1234-4321",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "turnoverGroup.name: Is empty",
                      "violations": [
                        {
                          "propertyPath": "turnoverGroup.name",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/turnovergroups/{turnoverGroupCode}/undelete": {
      "post": {
        "tags": [
          "TurnoverGroup"
        ],
        "summary": "TurnoverGroups:Undelete",
        "description": "Undelete a turnover group that was recently deleted. This can only be done within a 15 minute time window",
        "parameters": [
          {
            "name": "turnoverGroupCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "CT-1234-4321"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "code",
                    "name",
                    "default",
                    "description",
                    "paymentDescription",
                    "merchant",
                    "bankAccount",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "CT-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "default": {
                      "type": "boolean"
                    },
                    "description": {
                      "type": "string"
                    },
                    "paymentDescription": {
                      "type": "string",
                      "nullable": true
                    },
                    "merchant": {
                      "required": [
                        "code",
                        "status",
                        "name"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant id of your company starting with M.",
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "status": {
                          "description": "Merchant state",
                          "type": "string",
                          "example": "ACTIVE"
                        },
                        "name": {
                          "description": "The name of your merchant.",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 2,
                          "example": "CompanyName"
                        }
                      },
                      "type": "object"
                    },
                    "bankAccount": {
                      "required": [
                        "code",
                        "status",
                        "method",
                        "iban"
                      ],
                      "properties": {
                        "code": {
                          "description": "The merchant bank account id of your company starting with BA.",
                          "type": "string",
                          "example": "BA-1234-4321"
                        },
                        "status": {
                          "description": "The current check status of the clearing account.",
                          "type": "string",
                          "example": "NOT_CHECKED"
                        },
                        "method": {
                          "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                          "type": "string",
                          "example": "iban"
                        },
                        "iban": {
                          "required": [
                            "iban",
                            "bic",
                            "owner"
                          ],
                          "properties": {
                            "iban": {
                              "description": "The International Bank Account Number (IBAN).",
                              "type": "string",
                              "example": "NL69INGB0123456789"
                            },
                            "bic": {
                              "description": "Business Identifier Codes (BIC/SWIFT).",
                              "type": "string",
                              "example": "INGBNL2A"
                            },
                            "owner": {
                              "description": "The owner of the bank account.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John Doe"
                            }
                          },
                          "type": "object",
                          "title": "BankAccount",
                          "x-readme-ref-name": "BankAccount"
                        }
                      },
                      "type": "object",
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TurnoverGroup",
                  "x-readme-ref-name": "TurnoverGroup"
                },
                "examples": {
                  "success": {
                    "summary": "Turnover group",
                    "value": {
                      "code": "CT-1234-4321",
                      "name": "Standaard",
                      "default": true,
                      "description": "Standaard",
                      "paymentDescription": null,
                      "merchant": {
                        "code": "M-1234-4321",
                        "status": "ACTIVE",
                        "name": "CompanyName"
                      },
                      "bankAccount": {
                        "code": "BA-1234-4321",
                        "status": "NOT_CHECKED",
                        "method": "iban",
                        "iban": {
                          "iban": "NL69INGB0123456789",
                          "bic": "INGBNL2A",
                          "owner": "John Doe"
                        }
                      },
                      "createdAt": "2016-06-04T08:15:00+01:00",
                      "createdBy": "A-1234-4321",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/turnovergroups/CT-1234-4321",
                          "rel": "self",
                          "type": "PATCH"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/vouchers/{cardNumber}/activate": {
      "patch": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Activate a card.",
        "parameters": [
          {
            "name": "cardNumber",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The number on your voucher card.",
              "type": "string",
              "example": "12345678"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pinCode",
                  "posId"
                ],
                "properties": {
                  "pinCode": {
                    "description": "Your pincode.",
                    "type": "string",
                    "example": "1234"
                  },
                  "posId": {
                    "description": "The ID of the point of sale device.",
                    "type": "string",
                    "example": "1234567"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/vouchers/{cardNumber}/balance": {
      "patch": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Return balance on card.",
        "parameters": [
          {
            "name": "cardNumber",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The number on your voucher card.",
              "type": "string",
              "example": "12345678"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pinCode"
                ],
                "properties": {
                  "pinCode": {
                    "description": "Your pincode.",
                    "type": "string",
                    "example": "1234"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "balance": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/vouchers/{cardNumber}/charge": {
      "patch": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Charge a card.",
        "parameters": [
          {
            "name": "cardNumber",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The number on your voucher card.",
              "type": "string",
              "example": "12345678"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "pinCode"
                ],
                "properties": {
                  "pinCode": {
                    "description": "Your pincode.",
                    "type": "string",
                    "example": "1234"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok."
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/vouchers/transaction": {
      "post": {
        "tags": [
          "Vouchers"
        ],
        "summary": "Voucher:Create",
        "description": "To capture funds of a giftcard via a point of sale or eCommerce environment you can call this API. The giftcard must be activated on the sales location.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "voucher"
                ],
                "properties": {
                  "transaction": {
                    "required": [
                      "serviceId",
                      "type",
                      "amount",
                      "ipAddress"
                    ],
                    "properties": {
                      "type": {
                        "description": "Defines the type of the transaction. Possible values are: POS = Point of sale, ECOM",
                        "type": "string",
                        "enum": [
                          "ECOM",
                          "POS"
                        ]
                      },
                      "serviceId": {
                        "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                        "type": "string",
                        "example": "SL-####-####"
                      },
                      "description": {
                        "description": "Is shown on the statement of the payer.",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "Example description."
                      },
                      "reference": {
                        "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9]{1,64}$",
                        "example": "12345XXY0123"
                      },
                      "exchangeUrl": {
                        "description": "The URL where we exchange the status of a transaction.",
                        "type": "string",
                        "format": "uri",
                        "example": "https://demo.pay.nl/exchange.php"
                      },
                      "amount": {
                        "required": [
                          "value"
                        ],
                        "properties": {
                          "value": {
                            "description": "The amount in cents.",
                            "type": "integer",
                            "minimum": 1,
                            "example": 10
                          },
                          "currency": {
                            "description": "The currency in ISO-4217 format.",
                            "type": "string",
                            "example": "EUR"
                          }
                        },
                        "type": "object",
                        "title": "Amount",
                        "x-readme-ref-name": "Amount"
                      }
                    },
                    "type": "object"
                  },
                  "voucher": {
                    "required": [
                      "cardNumber"
                    ],
                    "properties": {
                      "cardNumber": {
                        "description": "The number on your voucher card.",
                        "type": "string",
                        "example": "12345678"
                      },
                      "pinCode": {
                        "description": "Your pincode.",
                        "type": "string",
                        "example": "1234"
                      }
                    },
                    "type": "object"
                  },
                  "customer": {
                    "properties": {
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "ipAddress": {
                        "description": "An ip address",
                        "type": "string",
                        "example": "213.126.82.230"
                      },
                      "birthDate": {
                        "description": "Date of birth as defined in ISO-8601.",
                        "type": "string",
                        "format": "date",
                        "example": "1999-02-15"
                      },
                      "gender": {
                        "description": "The subject's gender. Choose either M for male or F for female.",
                        "type": "string",
                        "example": "M"
                      },
                      "phone": {
                        "description": "The subject's phone number. Optionally prepended with a + and country code",
                        "type": "string",
                        "example": "0031612345678"
                      },
                      "email": {
                        "description": "An email address.",
                        "type": "string",
                        "format": "email",
                        "example": "sandbox@pay.nl"
                      },
                      "language": {
                        "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                        "type": "string",
                        "enum": [
                          "NL",
                          "EN",
                          "DE",
                          "FR",
                          "IT",
                          "ES"
                        ],
                        "example": "NL"
                      },
                      "trust": {
                        "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                        "type": "integer",
                        "maximum": 10,
                        "minimum": -10,
                        "example": -5
                      },
                      "reference": {
                        "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9]{1,64}$",
                        "example": "NL87654321"
                      },
                      "company": {
                        "properties": {
                          "name": {
                            "description": "The name of your merchant.",
                            "type": "string",
                            "example": "CompanyName"
                          },
                          "coc": {
                            "description": "Your Chamber of commerce registration number. This format differs per country.",
                            "type": "string",
                            "example": "12345678"
                          },
                          "vat": {
                            "description": "Value added tax identification number (VAT identification number).",
                            "type": "string",
                            "example": "NL807960147B01"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "example": "NL"
                          }
                        },
                        "type": "object",
                        "title": "Company",
                        "x-readme-ref-name": "Company"
                      }
                    },
                    "type": "object"
                  },
                  "order": {
                    "properties": {
                      "deliveryDate": {
                        "description": "The date of delivery.",
                        "type": "string",
                        "format": "date",
                        "example": "1999-02-15"
                      },
                      "invoiceDate": {
                        "description": "The date of the invoice",
                        "type": "string",
                        "format": "date",
                        "example": "1999-02-15"
                      },
                      "deliveryAddress": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The forename (also known as a given name, Christian name or a first name).",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "John"
                          },
                          "lastName": {
                            "description": "The surname (also known as a family name or a last name).",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "Doe"
                          },
                          "streetName": {
                            "description": "The name of the street",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Visitlane"
                          },
                          "streetNumber": {
                            "description": "The street number",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "13"
                          },
                          "streetNumberExtension": {
                            "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "b1"
                          },
                          "zipCode": {
                            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                            "type": "string",
                            "maxLength": 16,
                            "minLength": 1,
                            "example": "5678CD"
                          },
                          "city": {
                            "description": "The name of a city",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Amsterdam"
                          },
                          "regionCode": {
                            "description": "Region code (iso-3166-2)",
                            "type": "string",
                            "example": "ZH"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "NL"
                          }
                        },
                        "type": "object",
                        "title": "Address",
                        "x-readme-ref-name": "Address"
                      },
                      "invoiceAddress": {
                        "properties": {
                          "code": {
                            "type": "string"
                          },
                          "firstName": {
                            "description": "The forename (also known as a given name, Christian name or a first name).",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "John"
                          },
                          "lastName": {
                            "description": "The surname (also known as a family name or a last name).",
                            "type": "string",
                            "maxLength": 64,
                            "minLength": 1,
                            "example": "Doe"
                          },
                          "streetName": {
                            "description": "The name of the street",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Visitlane"
                          },
                          "streetNumber": {
                            "description": "The street number",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "13"
                          },
                          "streetNumberExtension": {
                            "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                            "type": "string",
                            "maxLength": 32,
                            "minLength": 1,
                            "example": "b1"
                          },
                          "zipCode": {
                            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                            "type": "string",
                            "maxLength": 16,
                            "minLength": 1,
                            "example": "5678CD"
                          },
                          "city": {
                            "description": "The name of a city",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 1,
                            "example": "Amsterdam"
                          },
                          "regionCode": {
                            "description": "Region code (iso-3166-2)",
                            "type": "string",
                            "example": "ZH"
                          },
                          "countryCode": {
                            "description": "The country code consisting of 2 uppercase letters",
                            "type": "string",
                            "maxLength": 2,
                            "minLength": 2,
                            "example": "NL"
                          }
                        },
                        "type": "object",
                        "title": "Address",
                        "x-readme-ref-name": "Address"
                      },
                      "products": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "description": "The product identifier.",
                              "type": "string",
                              "example": "TEST_01"
                            },
                            "description": {
                              "description": "The description of the product.",
                              "type": "string",
                              "example": "Some product description"
                            },
                            "type": {
                              "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                              "type": "string",
                              "enum": [
                                "shipping",
                                "article",
                                "discount",
                                "rounding",
                                "handling",
                                "payment",
                                "credit",
                                "giftcard",
                                "emoney",
                                "crypto"
                              ]
                            },
                            "price": {
                              "properties": {
                                "value": {
                                  "description": "The amount in cents.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "example": 10
                                }
                              },
                              "type": "object"
                            },
                            "quantity": {
                              "description": "The quantity.",
                              "type": "number",
                              "format": "float"
                            },
                            "vatCode": {
                              "description": "The VAT code to use.",
                              "type": "string",
                              "enum": [
                                "N",
                                "H",
                                "L"
                              ]
                            }
                          },
                          "type": "object",
                          "title": "Product",
                          "x-readme-ref-name": "Product"
                        }
                      }
                    },
                    "type": "object"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  }
                },
                "type": "object"
              },
              "examples": {
                "minimalPOS": {
                  "summary": "Basic Voucher Transaction POS example",
                  "value": {
                    "transaction": {
                      "type": "POS",
                      "serviceId": "SL-####-####",
                      "amount": {
                        "value": 10
                      }
                    },
                    "voucher": {
                      "cardNumber": "####################"
                    }
                  }
                },
                "minimalECOM": {
                  "summary": "Basic Voucher Transaction ECOM example",
                  "value": {
                    "transaction": {
                      "type": "ECOM",
                      "serviceId": "SL-####-####",
                      "amount": {
                        "value": 10
                      }
                    },
                    "voucher": {
                      "cardNumber": "####################",
                      "pinCode": "#####"
                    }
                  }
                },
                "maximumPOS": {
                  "summary": "Extended Voucher Transaction POS example",
                  "value": {
                    "transaction": {
                      "type": "POS",
                      "serviceId": "SL-####-####",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "exchangeUrl": "https://demo.pay.nl/exchange.php",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      }
                    },
                    "voucher": {
                      "cardNumber": "####################"
                    },
                    "customer": {
                      "firstName": "John",
                      "lastName": "Doe",
                      "ipAddress": "213.126.82.230",
                      "birthDate": "1999-02-15",
                      "gender": "m",
                      "phone": "0031612345678",
                      "email": "sandbox@pay.nl",
                      "language": "NL",
                      "trustLevel": 5,
                      "reference": "NL87654321"
                    },
                    "order": {
                      "countryCode": "NL",
                      "deliveryDate": "2022-12-30",
                      "invoiceDate": "2022-12-30",
                      "deliveryAddress": {
                        "firstName": "John",
                        "lastName": "Doe",
                        "streetName": "Deliverylane",
                        "streetNumber": "70",
                        "streetNumberExtension": "A",
                        "zipCode": "5678CD",
                        "city": "Amsterdam",
                        "countryCode": "NL"
                      },
                      "invoiceAddress": {
                        "firstName": "Samanta",
                        "lastName": "Doe - Jones",
                        "streetName": "Invoicestreet",
                        "streetNumber": "2",
                        "streetNumberExtension": "B",
                        "zipCode": "SW36LQ",
                        "city": "London",
                        "countryCode": "UK"
                      },
                      "products": [
                        {
                          "id": "TEST_01",
                          "description": "Caramels sweet roll",
                          "type": "article",
                          "price": {
                            "value": 1,
                            "currency": "EUR"
                          },
                          "quantity": 2,
                          "vatCode": "H"
                        },
                        {
                          "id": "TEST_02",
                          "description": "Cookie tart sugar",
                          "type": "article",
                          "price": {
                            "value": 3,
                            "currency": "EUR"
                          },
                          "quantity": 1,
                          "vatCode": "H"
                        },
                        {
                          "id": "TEST_03",
                          "description": "Lollipop chocolate bar",
                          "type": "article",
                          "price": {
                            "value": 1,
                            "currency": "EUR"
                          },
                          "quantity": 5,
                          "vatCode": "H"
                        }
                      ]
                    },
                    "statistics": {
                      "info": "Campagne 99",
                      "tool": "Google",
                      "extra1": "Customer 6985615",
                      "extra2": "Invoice 21.3695",
                      "extra3": "Shop Amsterdam"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string",
                      "example": "EX-1234-1234-1234"
                    },
                    "serviceId": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "Example description."
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]{1,64}$",
                      "example": "12345XXY0123"
                    },
                    "manualTransferCode": {
                      "description": "Payment reference used to identify manual bank transfers",
                      "type": "string",
                      "example": "0000 0000 0000 0000"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string",
                      "example": "0000000000X00000"
                    },
                    "paymentUrl": {
                      "description": "The payment URL for this transaction",
                      "type": "string",
                      "format": "uri"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "expire": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "created": {
                      "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "modified": {
                      "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "minimalPOS": {
                    "summary": "Successful Voucher Transaction",
                    "value": {
                      "id": "EX-####-####-####",
                      "serviceId": "SL-####-####",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "orderId": "#########X#####",
                      "ipAddress": "213.126.82.230",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "created": "2016-06-04T08:15:00+01:00",
                      "modified": "2016-06-04T08:15:00+01:00",
                      "_links": [
                        {
                          "href": "/transactions",
                          "rel": "self",
                          "type": "POST"
                        },
                        {
                          "href": "/transactions/EX-####-####-####",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "noRoute": {
                    "summary": "Bad Request",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "transaction.serviceId: Unable to find service location\ntransaction.amount.value: You have entered an invalid amount",
                      "violations": [
                        {
                          "propertyPath": "transaction.serviceId",
                          "message": "Unable to find service location",
                          "code": "PAY-2852"
                        },
                        {
                          "propertyPath": "transaction.amount.value",
                          "message": "You have entered an invalid amount",
                          "code": "PAY-2803"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "errors": {
                      "properties": {
                        "general": {
                          "properties": {
                            "code": {
                              "description": "The unique code for this error",
                              "type": "string",
                              "example": "PAY-3000"
                            },
                            "message": {
                              "description": "The description of the error",
                              "type": "string",
                              "example": "This is an invalid giftcard, we are unable to find the giftcard brand."
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "invalidcard": {
                    "summary": "Invalid cardnumber",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "This is an invalid giftcard, we are unable to find the giftcard brand.",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "This is an invalid giftcard, we are unable to find the giftcard brand",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  },
                  "invalidpincode": {
                    "summary": "Invalid pinCode",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Failed to login",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Failed to login",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  },
                  "nofunds": {
                    "summary": "Insufficient Funds",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "The voucher has insufficient funds",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "The voucher has insufficient funds",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/paymentmethodgroups": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "PaymentMethodGroups",
        "description": "Get all payment methods groups.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "paymentMethodGroups": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "payment method group id",
                            "type": "integer"
                          },
                          "name": {
                            "description": "Payment method group name",
                            "type": "string"
                          },
                          "publicName": {
                            "description": "Payment method group public name",
                            "type": "string"
                          },
                          "sequence": {
                            "description": "Payment method group sequence number",
                            "type": "integer"
                          },
                          "image": {
                            "description": "Payment method group image",
                            "type": "string"
                          },
                          "requiredFields": {
                            "description": "The required fields of the payment method.",
                            "type": "array",
                            "items": {
                              "properties": {
                                "fieldName": {
                                  "type": "string"
                                },
                                "mandatory": {
                                  "type": "string"
                                }
                              },
                              "type": "object"
                            }
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "PaymentMethodGroups",
                        "x-readme-ref-name": "PaymentMethodGroups"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get PaymentMethodGroups",
                    "value": {
                      "total": 1,
                      "paymentMethodGroups": [
                        {
                          "id": 1,
                          "name": "Internetbankieren",
                          "publicName": "InternetBankieren",
                          "sequence": 10,
                          "translations": {
                            "name": {
                              "en_GB": "Internetbankieren",
                              "it_IT": "Internetbankieren",
                              "nl_NL": "Internetbankieren"
                            },
                            "publicName": {
                              "en_GB": "Internetbankieren",
                              "it_IT": "Internetbankieren",
                              "nl_NL": "Internetbankieren"
                            }
                          },
                          "image": "/payment_method_groups/1.svg",
                          "requiredFields": [
                            {
                              "fieldName": "customer.firstName",
                              "mandatory": "required"
                            }
                          ],
                          "createdAt": "2007-10-02T12:11:20+02:00",
                          "modifiedAt": "2021-08-10T17:24:05+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/paymentmethodgroups",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/paymentmethods": {
      "get": {
        "tags": [
          "Core Data"
        ],
        "summary": "PaymentMethods",
        "description": "Get all payment methods.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                            "type": "integer"
                          },
                          "name": {
                            "description": "The name of the payment method.",
                            "type": "string"
                          },
                          "description": {
                            "description": "The description of the payment method.",
                            "type": "string"
                          },
                          "sequence": {
                            "description": "The sequence of the payment method.",
                            "type": "integer"
                          },
                          "public": {
                            "description": "Public status of the payment method.",
                            "type": "boolean"
                          },
                          "status": {
                            "description": "Active status of payment method.",
                            "type": "string"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "image": {
                            "description": "The image of the payment method.",
                            "type": "string"
                          },
                          "paymentProfiles": {
                            "description": "The payment profiles of the payment method.",
                            "type": "array",
                            "items": {
                              "properties": {
                                "id": {
                                  "description": "The payment profile identifier.",
                                  "type": "integer"
                                },
                                "name": {
                                  "description": "The name of the payment profile.",
                                  "type": "string"
                                },
                                "publicName": {
                                  "description": "Public name of the payment method",
                                  "type": "string"
                                },
                                "public": {
                                  "description": "Check if payment method is public",
                                  "type": "boolean"
                                },
                                "selectable": {
                                  "description": "check if payment method is selectable",
                                  "type": "boolean"
                                },
                                "translations": {
                                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                                  "type": "object",
                                  "uniqueItems": true,
                                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                                  "nullable": true,
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "image": {
                                  "description": "The image of the payment method.",
                                  "type": "string"
                                },
                                "issuers": {
                                  "description": "Issuers linked to payment method",
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "categories": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "code": {
                                        "description": "The category (code) identifier",
                                        "type": "string",
                                        "example": "CY-1234-4321"
                                      },
                                      "name": {
                                        "description": "The category name.",
                                        "type": "string",
                                        "example": "Digitale diensten gambling (kansspelen)"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "paymentMethodGroup": {
                                  "description": "Payment method group where payment method is assigned to",
                                  "type": "string"
                                },
                                "paymentType": {
                                  "description": "Payment type",
                                  "type": "string"
                                },
                                "createdAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                },
                                "modifiedAt": {
                                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": true
                                },
                                "deletedAt": {
                                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2016-06-04T08:15:00+01:00",
                                  "nullable": false
                                }
                              },
                              "type": "object",
                              "title": "PaymentProfile",
                              "x-readme-ref-name": "PaymentProfile"
                            }
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          },
                          "modifiedAt": {
                            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          },
                          "deletedAt": {
                            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": true
                          }
                        },
                        "type": "object",
                        "title": "PaymentMethodsFull",
                        "x-readme-ref-name": "PaymentMethodsFull"
                      }
                    },
                    "_links": {
                      "type": "array",
                      "items": {
                        "required": [
                          "href",
                          "rel",
                          "type"
                        ],
                        "properties": {
                          "href": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "rel": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          },
                          "type": {
                            "description": "",
                            "type": "string",
                            "readOnly": true,
                            "example": "",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Link",
                        "x-readme-ref-name": "Link"
                      }
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "success": {
                    "summary": "Get PaymentMethods",
                    "value": {
                      "total": 1,
                      "paymentMethods": [
                        {
                          "id": 1,
                          "name": "iDEAL",
                          "description": "iDEAL",
                          "sequence": 1,
                          "public": true,
                          "status": "active",
                          "image": "/payment_methods/1.svg",
                          "translations": {
                            "name": {
                              "nl_NL": "iDEAL"
                            },
                            "description": {
                              "nl_NL": "Met iDEAL kunt  u met een Nederlandse bankrekening vertrouwd, veilig en gemakkelijk betalen via internetbankieren van uw eigen bank."
                            }
                          },
                          "paymentProfiles": [
                            {
                              "id": 10,
                              "name": "iDEAL",
                              "publicName": "iDEAL",
                              "public": true,
                              "selectable": false,
                              "paymentMethodGroup": "ONLINEBANK",
                              "paymentType": "SALE",
                              "translations": {
                                "name": {
                                  "nl_NL": "iDEAL"
                                },
                                "publicName": {
                                  "nl_NL": "iDEAL"
                                }
                              },
                              "issuers": [
                                {
                                  "id": "1",
                                  "code": "PB-9060-1000",
                                  "name": "ABN Amro"
                                }
                              ],
                              "categories": [
                                {
                                  "code": "CY-####-####",
                                  "name": "Digitale diensten gambling (kansspelen)"
                                }
                              ],
                              "createdAt": "2007-10-02T12:11:20+02:00",
                              "modifiedAt": "2021-08-10T17:24:05+02:00",
                              "deletedAt": null
                            }
                          ],
                          "createdAt": "2007-10-02T12:11:20+02:00",
                          "modifiedAt": "2021-08-10T17:24:05+02:00",
                          "deletedAt": null
                        }
                      ],
                      "_links": [
                        {
                          "href": "/paymentmethods",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/services/config": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Service:GetConfig",
        "description": "Get the complete configuration of a service location. you can use this to create your own checkout. You need to authenticate with an AT code (as username) and the corresponding token (as password) or you can authenticate with a SL code (as username) and the corresponding secret (as password).",
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The ID of your service. Required if you authenticate with AT-code/token. You can find the service ID here: https://my.pay.nl/programs/programs",
              "type": "string",
              "example": "SL-####-####"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "secret": {
                      "description": "The unique reference for this service.",
                      "type": "string",
                      "example": "bade123abf124124abefa311b"
                    },
                    "testMode": {
                      "description": "Indicates if the service is in testmode or not, possible values: false or true",
                      "type": "boolean"
                    },
                    "name": {
                      "description": "The name of your service.",
                      "type": "string",
                      "example": "My first service!"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "status": {
                      "description": "The state of the service",
                      "type": "string"
                    },
                    "merchant": {
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The merchant id of your company starting with M.",
                            "type": "string",
                            "example": "M-####-####"
                          },
                          "status": {
                            "description": "Merchant state",
                            "type": "string"
                          },
                          "name": {
                            "description": "The name of your merchant.",
                            "type": "string",
                            "maxLength": 128,
                            "minLength": 2,
                            "example": "CompanyName"
                          }
                        },
                        "type": "object",
                        "title": "MerchantConfig",
                        "x-readme-ref-name": "MerchantConfig"
                      },
                      "nullable": true,
                      "oneOf": [
                        {
                          "properties": {
                            "code": {
                              "description": "The merchant id of your company starting with M.",
                              "type": "string",
                              "example": "M-####-####"
                            },
                            "status": {
                              "description": "Merchant state",
                              "type": "string"
                            },
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 2,
                              "example": "CompanyName"
                            }
                          },
                          "type": "object",
                          "title": "MerchantConfig",
                          "x-readme-ref-name": "MerchantConfig"
                        }
                      ]
                    },
                    "category": {
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Category identifier.",
                            "type": "string",
                            "example": "CY-1234-4321"
                          },
                          "name": {
                            "description": "The category name.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "ServiceConfigCategory",
                        "x-readme-ref-name": "ServiceConfigCategory"
                      },
                      "nullable": true,
                      "oneOf": [
                        {
                          "properties": {
                            "code": {
                              "description": "Category identifier.",
                              "type": "string",
                              "example": "CY-1234-4321"
                            },
                            "name": {
                              "description": "The category name.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "title": "ServiceConfigCategory",
                          "x-readme-ref-name": "ServiceConfigCategory"
                        }
                      ]
                    },
                    "mcc": {
                      "type": "integer",
                      "nullable": true
                    },
                    "turnOverGroup": {
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Id of the turnover group",
                            "type": "string",
                            "example": "TM-####-####"
                          },
                          "name": {
                            "description": "Name of the turn over group",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "TurnOverGroup",
                        "x-readme-ref-name": "TurnOverGroup"
                      },
                      "nullable": true,
                      "oneOf": [
                        {
                          "properties": {
                            "code": {
                              "description": "Id of the turnover group",
                              "type": "string",
                              "example": "TM-####-####"
                            },
                            "name": {
                              "description": "Name of the turn over group",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "title": "TurnOverGroup",
                          "x-readme-ref-name": "TurnOverGroup"
                        }
                      ]
                    },
                    "layout": {
                      "items": {
                        "properties": {
                          "code": {
                            "description": "Id of layout",
                            "type": "string",
                            "example": "LY-####-####"
                          },
                          "name": {
                            "description": "Name of the layout",
                            "type": "string",
                            "example": "My layout"
                          },
                          "ccsUrl": {
                            "description": "CSS url to the layout css",
                            "type": "string"
                          },
                          "icon": {
                            "description": "Image in base64 encoding",
                            "type": "string"
                          },
                          "supportingColor": {
                            "description": "Supporting hex color code",
                            "type": "string",
                            "example": "FFFFFF"
                          },
                          "headerTextColor": {
                            "description": "Header hex color code",
                            "type": "string",
                            "example": "FFFFFF"
                          },
                          "buttonColor": {
                            "description": "Button hex color code",
                            "type": "string",
                            "example": "FFFFFF"
                          },
                          "buttonTextColor": {
                            "description": "Button text hex color code",
                            "type": "string",
                            "example": "FFFFFF"
                          }
                        },
                        "type": "object",
                        "title": "Layout",
                        "x-readme-ref-name": "Layout"
                      },
                      "nullable": true,
                      "oneOf": [
                        {
                          "properties": {
                            "code": {
                              "description": "Id of layout",
                              "type": "string",
                              "example": "LY-####-####"
                            },
                            "name": {
                              "description": "Name of the layout",
                              "type": "string",
                              "example": "My layout"
                            },
                            "ccsUrl": {
                              "description": "CSS url to the layout css",
                              "type": "string"
                            },
                            "icon": {
                              "description": "Image in base64 encoding",
                              "type": "string"
                            },
                            "supportingColor": {
                              "description": "Supporting hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "headerTextColor": {
                              "description": "Header hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "buttonColor": {
                              "description": "Button hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "buttonTextColor": {
                              "description": "Button text hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            }
                          },
                          "type": "object",
                          "title": "Layout",
                          "x-readme-ref-name": "Layout"
                        }
                      ]
                    },
                    "tradeName": {
                      "items": {
                        "properties": {
                          "code": {
                            "description": "An identifier for this TradeName",
                            "type": "string"
                          },
                          "name": {
                            "description": "A registered TradeName",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "TradeName",
                        "x-readme-ref-name": "TradeName"
                      },
                      "nullable": true,
                      "oneOf": [
                        {
                          "properties": {
                            "code": {
                              "description": "An identifier for this TradeName",
                              "type": "string"
                            },
                            "name": {
                              "description": "A registered TradeName",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "title": "TradeName",
                          "x-readme-ref-name": "TradeName"
                        }
                      ]
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "checkoutOptions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "tag": {
                            "description": "The tag of the checkout option.",
                            "type": "string",
                            "example": "PM_10"
                          },
                          "name": {
                            "description": "The name of the checkout option.",
                            "type": "string",
                            "example": "iDEAL"
                          },
                          "translations": {
                            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                            "type": "object",
                            "uniqueItems": true,
                            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                            "nullable": true,
                            "additionalProperties": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          },
                          "image": {
                            "description": "The image of the checkout option.",
                            "type": "string",
                            "example": "/payment_methods/1.svg"
                          },
                          "paymentMethods": {
                            "type": "array",
                            "items": {
                              "required": [
                                "id"
                              ],
                              "properties": {
                                "id": {
                                  "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                                  "type": "integer",
                                  "example": "10"
                                },
                                "name": {
                                  "description": "The name of the payment method.",
                                  "type": "string",
                                  "example": "ideal"
                                },
                                "description": {
                                  "type": "string"
                                },
                                "translations": {
                                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                                  "type": "object",
                                  "uniqueItems": true,
                                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                                  "nullable": true,
                                  "additionalProperties": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "image": {
                                  "description": "The image of the payment method.",
                                  "type": "string",
                                  "example": "https://admin.pay.nl/images/payment_profiles/10.gif"
                                },
                                "options": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "id": {
                                        "description": "The ID of the issuer.",
                                        "type": "integer",
                                        "example": 2
                                      },
                                      "name": {
                                        "description": "The name of the issuer.",
                                        "type": "string",
                                        "example": "Rabobank"
                                      },
                                      "image": {
                                        "description": "The image of the issuer.",
                                        "type": "string",
                                        "example": "/issuers/4.svg"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "settings": {
                                  "type": "array",
                                  "items": {
                                    "properties": {
                                      "key": {
                                        "description": "The name of the setting.",
                                        "type": "string"
                                      },
                                      "value": {
                                        "description": "The value of the setting.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object"
                                  }
                                },
                                "minAmount": {
                                  "description": "The minimum amount in cents in order to use this payment_method.",
                                  "type": "integer",
                                  "example": 100
                                },
                                "maxAmount": {
                                  "description": "The maximum amount in cents which is allowed for this payment_method.",
                                  "type": "integer",
                                  "example": 100000
                                }
                              },
                              "type": "object",
                              "title": "PaymentMethodConfig",
                              "x-readme-ref-name": "PaymentMethodConfig"
                            }
                          }
                        },
                        "type": "object"
                      }
                    },
                    "checkoutSequence": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "checkoutTexts": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "encryptionKeys": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    },
                    "tguList": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "ID": {
                            "type": "integer"
                          },
                          "share": {
                            "type": "integer"
                          },
                          "domain": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    }
                  },
                  "type": "object",
                  "title": "ServiceConfig",
                  "x-readme-ref-name": "ServiceConfig"
                },
                "examples": {
                  "success": {
                    "summary": "Get service configuration",
                    "value": {
                      "code": "SL-3458-8032",
                      "secret": "ffd6b59b060a6b556027fdd2e82a1e27c0ee28d1",
                      "testMode": false,
                      "name": "Verkooplocatie A",
                      "translations": {
                        "name": {
                          "nl_NL": "Betaallink & test"
                        }
                      },
                      "status": "ACTIVE",
                      "merchant": {
                        "code": "M-2964-5301",
                        "name": "CompanyName",
                        "status": "ACTIVE"
                      },
                      "category": {
                        "code": "CY-2010-1020",
                        "name": "Baby & kids"
                      },
                      "mcc": 5999,
                      "turnoverGroup": null,
                      "layout": {
                        "code": "LY-2040-3010",
                        "name": "Eigen look en feel",
                        "cssUrl": "https://static.pay.nl/layout/LY-2040-3010/cssfile.css",
                        "icon": null,
                        "supportingColor": "000000",
                        "headerTextColor": "556622",
                        "buttonColor": "56EADD",
                        "buttonTextColor": "CCCCCC"
                      },
                      "tradeName": {
                        "code": "TM-5880-9842",
                        "name": "Bossink BV_publicname"
                      },
                      "createdAt": "2022-05-12T13:26:56+02:00",
                      "createdBy": "A-8314-8387",
                      "modifiedAt": "2023-01-13T08:41:16+01:00",
                      "modifiedBy": "A-8314-8387",
                      "deletedAt": null,
                      "deletedBy": null,
                      "checkoutOptions": [
                        {
                          "tag": "PG_2",
                          "name": "Debit and Credit cards (EN)",
                          "translations": {
                            "name": {
                              "de_DE": "Credit- & Debitcards (DE)",
                              "en_GB": "Debit and Credit cards (EN)",
                              "nl_NL": "Credit- & Debitcards (NL)"
                            }
                          },
                          "image": "/payment_method_groups/2.svg",
                          "paymentMethods": [
                            {
                              "id": 706,
                              "name": "Visa Mastercard",
                              "description": "Make a secure payment by Creditcard",
                              "translations": {
                                "name": {
                                  "nl_NL": "Visa Mastercard"
                                },
                                "description": {
                                  "nl_NL": "Betaal veilig met uw creditcard"
                                }
                              },
                              "image": "/payment_methods/7.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 5000000
                            },
                            {
                              "id": 707,
                              "name": "Postepay",
                              "description": "",
                              "translations": {
                                "name": {
                                  "nl_NL": "Postepay"
                                }
                              },
                              "image": "/payment_methods/10.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            },
                            {
                              "id": 710,
                              "name": "Carte Bleue",
                              "description": "",
                              "translations": {
                                "name": {
                                  "nl_NL": "Carte Bleue"
                                }
                              },
                              "image": "/payment_methods/11.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": [
                            {
                              "fieldName": "cardholderName",
                              "mandatory": "required"
                            },
                            {
                              "fieldName": "cardNumber",
                              "mandatory": "required"
                            },
                            {
                              "fieldName": "expiryDate",
                              "mandatory": "required"
                            },
                            {
                              "fieldName": "CVC",
                              "mandatory": "required"
                            }
                          ]
                        },
                        {
                          "tag": "PG_4",
                          "name": "Cadeaukaarten",
                          "translations": {
                            "name": {
                              "de_DE": "Geschenkkärte",
                              "nl_NL": "Cadeaukaarten"
                            }
                          },
                          "image": "/payment_method_groups/4.svg",
                          "paymentMethods": [
                            {
                              "id": 1657,
                              "name": "GivaCard",
                              "description": "",
                              "translations": {
                                "name": {
                                  "en_GB": "GivaCard",
                                  "it_IT": "GivaCard",
                                  "nl_NL": "GivaCard"
                                }
                              },
                              "image": "/payment_methods/61.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            },
                            {
                              "id": 1669,
                              "name": "Fashion Giftcard",
                              "description": "",
                              "translations": {
                                "name": {
                                  "nl_NL": "Fashion Giftcard"
                                }
                              },
                              "image": "/payment_methods/28.svg",
                              "options": [],
                              "settings": {
                                "ipFilter": []
                              },
                              "minAmount": 0,
                              "maxAmount": 0
                            },
                            {
                              "id": 1714,
                              "name": "VVV Giftcard",
                              "description": "",
                              "translations": {
                                "name": {
                                  "en_GB": "VVV Giftcard",
                                  "nl_NL": "VVV Cadeaukaart"
                                }
                              },
                              "image": "/payment_methods/25.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_10",
                          "name": "iDEAL",
                          "translations": {
                            "name": {
                              "de_DE": "iDEAL",
                              "en_GB": "iDEAL",
                              "nl_NL": "iDEAL"
                            }
                          },
                          "image": "/payment_methods/1.svg",
                          "paymentMethods": [
                            {
                              "id": 10,
                              "name": "iDEAL_EN",
                              "description": "",
                              "translations": {
                                "name": {
                                  "de_DE": "iDEAL",
                                  "en_GB": "iDEAL",
                                  "nl_NL": "iDEAL"
                                }
                              },
                              "image": "/payment_methods/1.svg",
                              "options": [
                                {
                                  "id": "2",
                                  "name": "Rabobank",
                                  "image": "/issuers/2.svg"
                                },
                                {
                                  "id": "4",
                                  "name": "ING",
                                  "image": "/issuers/4.svg"
                                },
                                {
                                  "id": "5",
                                  "name": "SNS",
                                  "image": "/issuers/5.svg"
                                },
                                {
                                  "id": "8",
                                  "name": "ASN Bank",
                                  "image": "/issuers/8.svg"
                                },
                                {
                                  "id": "9",
                                  "name": "RegioBank",
                                  "image": "/issuers/9.svg"
                                },
                                {
                                  "id": "10",
                                  "name": "Triodos Bank",
                                  "image": "/issuers/10.svg"
                                },
                                {
                                  "id": "11",
                                  "name": "Van Lanschot",
                                  "image": "/issuers/11.svg"
                                },
                                {
                                  "id": "12",
                                  "name": "Knab",
                                  "image": "/issuers/12.svg"
                                },
                                {
                                  "id": "5080",
                                  "name": "Bunq",
                                  "image": "/issuers/5080.svg"
                                },
                                {
                                  "id": "5082",
                                  "name": "Svenska Handelsbanken",
                                  "image": "/issuers/5082.svg"
                                },
                                {
                                  "id": "5084",
                                  "name": "Revolut",
                                  "image": "/issuers/5084.svg"
                                }
                              ],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_136",
                          "name": "Overboeking (SCT)",
                          "translations": {
                            "name": {
                              "nl_NL": "Overboeking (SCT)"
                            }
                          },
                          "image": "/payment_methods/12.svg",
                          "paymentMethods": [
                            {
                              "id": 136,
                              "name": "Overboeking (SCT)",
                              "description": "",
                              "translations": {
                                "name": {
                                  "nl_NL": "Overboeking (SCT)"
                                }
                              },
                              "image": "/payment_methods/12.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_138",
                          "name": "PayPal",
                          "translations": {
                            "name": {
                              "en_GB": "PayPal",
                              "it_IT": "PayPal",
                              "nl_NL": "PayPal"
                            }
                          },
                          "image": "/payment_methods/21.svg",
                          "paymentMethods": [
                            {
                              "id": 138,
                              "name": "PayPal",
                              "description": "",
                              "translations": {
                                "name": {
                                  "en_GB": "PayPal",
                                  "it_IT": "PayPal",
                                  "nl_NL": "PayPal"
                                }
                              },
                              "image": "/payment_methods/21.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_138",
                          "name": "PayPal",
                          "translations": {
                            "name": {
                              "en_GB": "PayPal",
                              "it_IT": "PayPal",
                              "nl_NL": "PayPal"
                            }
                          },
                          "image": "/payment_methods/21.svg",
                          "paymentMethods": [
                            {
                              "id": 138,
                              "name": "PayPal",
                              "description": "",
                              "translations": {
                                "name": {
                                  "en_GB": "PayPal",
                                  "it_IT": "PayPal",
                                  "nl_NL": "PayPal"
                                }
                              },
                              "image": "/payment_methods/21.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_1927",
                          "name": "PIN",
                          "translations": {
                            "name": {
                              "nl_NL": "PIN"
                            }
                          },
                          "image": "/payment_methods/164.svg",
                          "paymentMethods": [
                            {
                              "id": 1927,
                              "name": "PIN",
                              "description": "",
                              "translations": {
                                "name": {
                                  "nl_NL": "PIN"
                                }
                              },
                              "image": "/payment_methods/164.svg",
                              "options": [
                                {
                                  "code": "TH-4030-9090",
                                  "name": "Terminal_A",
                                  "contractStartDate": "2022-07-24",
                                  "contractEndDate": "2022-11-01",
                                  "paymentTypes": [
                                    "SALE"
                                  ],
                                  "terminalBrands": [
                                    {
                                      "id": "1003",
                                      "name": "V PAY",
                                      "image": "/terminal_brands/32.svg"
                                    },
                                    {
                                      "id": "1009",
                                      "name": "Maestro",
                                      "image": "/terminal_brands/33.svg"
                                    },
                                    {
                                      "id": "3004",
                                      "name": "Edenred",
                                      "image": "/terminal_brands/180.svg"
                                    }
                                  ]
                                },
                                {
                                  "code": "TH-6180-0000",
                                  "name": "Terminal_B",
                                  "contractStartDate": "2022-07-18",
                                  "contractEndDate": "2022-11-01",
                                  "paymentTypes": [
                                    "SALE",
                                    "REFUND"
                                  ],
                                  "terminalBrands": [
                                    {
                                      "id": "1002",
                                      "name": "Visa Electron",
                                      "image": "/terminal_brands/0.svg"
                                    },
                                    {
                                      "id": "1009",
                                      "name": "Maestro",
                                      "image": "/terminal_brands/33.svg"
                                    },
                                    {
                                      "id": "2003",
                                      "name": "MasterCard",
                                      "image": "/terminal_brands/35.svg"
                                    },
                                    {
                                      "id": "2004",
                                      "name": "AMEX",
                                      "image": "/terminal_brands/36.svg"
                                    }
                                  ]
                                },
                                {
                                  "code": "TH-9070-8090",
                                  "name": "Terminal_C",
                                  "contractStartDate": "2022-07-19",
                                  "contractEndDate": "2022-11-29",
                                  "paymentTypes": [
                                    "SALE"
                                  ],
                                  "terminalBrands": []
                                }
                              ],
                              "settings": {
                                "ipFilter": {
                                  "exceptionList": [
                                    "192.168.1.2",
                                    "192.168.2.1",
                                    "192.168.3.1"
                                  ],
                                  "type": "allow"
                                }
                              },
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_436",
                          "name": "Bancontact",
                          "translations": {
                            "name": {
                              "nl_NL": "Bancontact"
                            }
                          },
                          "image": "/payment_methods/2.svg",
                          "paymentMethods": [
                            {
                              "id": 436,
                              "name": "Bancontact",
                              "description": "",
                              "translations": {
                                "name": {
                                  "nl_NL": "Bancontact"
                                }
                              },
                              "image": "/payment_methods/2.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        },
                        {
                          "tag": "PM_694",
                          "name": "Giropay_EN",
                          "translations": {
                            "name": {
                              "en_GB": "Giropay",
                              "nl_NL": "Giropay"
                            }
                          },
                          "image": "/payment_methods/3.svg",
                          "paymentMethods": [
                            {
                              "id": 694,
                              "name": "Giropay",
                              "description": "",
                              "translations": {
                                "name": {
                                  "en_GB": "Giropay",
                                  "nl_NL": "Giropay"
                                }
                              },
                              "image": "/payment_methods/3.svg",
                              "options": [],
                              "settings": [],
                              "minAmount": 0,
                              "maxAmount": 0
                            }
                          ],
                          "requiredFields": []
                        }
                      ],
                      "checkoutSequence": {
                        "default": {
                          "primary": [
                            "PG_2",
                            "PG_4",
                            "PM_1927",
                            "PM_138"
                          ],
                          "secondary": [
                            "PM_10",
                            "PM_436",
                            "PM_694",
                            "PM_136"
                          ]
                        },
                        "NL": {
                          "primary": [
                            "PM_10",
                            "PM_436",
                            "PM_694",
                            "PG_2",
                            "PG_4",
                            "PM_138"
                          ],
                          "secondary": [
                            "PM_1927",
                            "PM_136"
                          ]
                        },
                        "DE": {
                          "primary": [
                            "PM_694",
                            "PM_10",
                            "PM_436",
                            "PG_2",
                            "PG_4",
                            "PM_138"
                          ],
                          "secondary": [
                            "PM_1927",
                            "PM_136"
                          ]
                        },
                        "BE": {
                          "primary": [
                            "PM_436",
                            "PM_10",
                            "PM_694",
                            "PG_2",
                            "PG_4",
                            "PM_138"
                          ],
                          "secondary": [
                            "PM_1927",
                            "PM_136"
                          ]
                        }
                      },
                      "checkoutTexts": [],
                      "encryptionKeys": [
                        {
                          "identifier": "L8LKP9XIQ4E2GUYR1V4PF99HN0TPPUVCJ1MPY731IYV9XMIPLALLZQZCADNABFXG",
                          "publicKey": "OkFsV2gxMFZ9R3EzJWFDMHIyUjNTPCBsd1MuZSU1MnBuQyo6dV1yRkhKRVZdNX0vZElCS0hLYjJ5andyJTdISGEoPVUpbix4Kzoqa1I1aVlmZG8mJWJZRyp3KkpBa25ZbFpbWyAnZjFtImkibE4lb3ojRigpW0dHVTVEMSEkbT5jMVBFbXhJWzRWQyQsICtuK3t4VikjdnIhW3I5OXB7eT8oY1UiS3Yoc3dhN08vXSp3QjRtb1AwN2hrKywwRy1mVF1iZVEzV1NEVC5lZClxeno6Z2J+fUk3b1ArQGkvdWYpTU56NXJhQ1dkKTBkVSl6eGdRKVtVM2wzaS9cU1BaPHdfM18kLHE+JncsYXZ3SGFBXG93NSY+U143Pm13QVRLayIhQG9OZ0BXfF4gJk4+XyYxL2dNfFJjbChHJktVNiYkV3hzKUJsfklHa1Y/dXxUVF1LWE5qT2cwJ19mV1AwSlZmIll6NlNRZF8pKDYmbVo6ckBsLUc/PGEoSyMkRStHfDFFc3gzeF48eD5Zcys0RCYiQSBCKUUiPyZybSNMZzUjcHRKW3dgayY1cCN3OCh0W3wuIVZHYiEtbz83XVBoTVV3fl0ufkhPbWgrfVkjKGEyVmFuQylUQGtCYU5kMklLSm1UXi92Wi9AS2I4MEx7WVpARnM5SCYkM0xEZHN2JDU5aVJyIi1aKS4zIXhccSBQY2Y2TEljS3w5IFVqVytlVVE0IGJ5YXNIJHxsND1eb1tFa3xAc0RkNTJUPz90X2l7LXtedVE1XjVhYk5+V31BckZiXjJkeWo9O0pATFovPjMpfDRGJUFjdWd1cVZGYURnYCNOJnh3cmJoSU00Qnd9O1VpSWJVKWJSTHs3QlVwejltIj0yUGpzfXU8VSVuOU5dQXNqM3BpVWlqTVRNN19neUZHPUJaL18yTHEmaWAmcUB6I10+ezJHX0NMLy50cz4oOkNga3dZT219WidTazJmQkJoeUtmfDdBa0Y5QFdVNSxKIEhxY11SfSBce217Y1htLio4LWwkZipLXSQxfWRCZEpJRGxEVFJbRF1+aXYsbGo=",
                          "createdAt": "2022-03-30T12:06:34+02:00",
                          "expiresAt": "2024-03-29T11:36:58+01:00"
                        },
                        {
                          "identifier": "AMWA53TSWKTXXXHMI5U1YSPWXXV4NYP11LSAAROX0PVVJMGRJTZ79WCD6KN1UWRV",
                          "publicKey": "RSIoWF1jV1l9Sk9AS3VgXzZLWzN7LysheG5DcCdGRkExM1hiZSNkIV88RWIuNytQXSotRGxhIUhAdnV+S3t1V2p7VHIhWVA3ZU9cSWxmdnA/NX1AP1pcWSNfK3dlKSVubXlTUXxHZTpNQW9rcHRcVyNoOCh0LTxrZVlZNS5xUTNMK1FoQFs+IHVYdT87V206aFEhd0t+V1krKmRHc2p4bnpUanwwZUddWlItLTFzO3cgLG1FUmJlLT5bK2Q7UGU8ZkcjP3N2N357NTtyNyNQJmhZKX5tM1RPQl9aQy9kX1U4aTlnXWNKMChrajkueiQ5N2ZsYyQmJygleyJrUGV+Y0gwNX4nZ00zRz9oRkg0dCZKIVhDVlpLKTFHPVdBWDlJb2tTXEF+NmpCJ18iJyJPYHMiPWJNTEUvJ0V7NW8qX3dgciopNitEWiMmUSpCR3UkMiNgdF5wcDQpYVh0W0kmP2Aga1skN1xSfS85WUd6eUFEOVpBIGBmYEcyeC1MZHJybUglRiY1Uj8/MFtOUHJFcj40NnA8MFVZL14qRCdBIC91VUVKaFk3TlZFU3NJSHEhX25oKFooT0FCX1IxVTN6WGRccXBgSW0nVDY5e1Yya2JsaG1mdlcldGthV0pEdXsnQWlkLmhqIk42NVRLN0VwcWQvKDpKaE9FIS5aWCFoX3okNHJHX0B4K3NKT0RwVkUxTm1vPEE7Y11OJk4mLF40amtZP183SjNuPn5seylCeXovPkAkVHxfVjl0Qi4nRituUW0uRXFkc1VgT0k5X3E9XWY5YVZzcFF+IDQlal0tP2k7VDVOVF1XP2coVk4+Tj5sPXUlY0suK35QSnI/NGFAQjI0LlFQJS1eOGl2SGhtLnltcl83YD1sYkQ4IjI3bEZsJ1dcRi5tYXtTW3JiIj9AL1d1IG86YDU8XjorfSZyNV5iXH45JSp3NDJdZk45RDBebmU4VmhoJlgveTNTJDJkWXhgQ3htKTM9QyI3PllRUyVCKkRqUkx5VX1KQ3trcSh1KDt4PHxbfUJueTJGd0lMSktHMlgqPCg8TjUtZyslWEA=",
                          "createdAt": "2021-03-30T11:36:58+02:00",
                          "expiresAt": "2023-03-30T11:36:58+02:00"
                        }
                      ],
                      "tguList": [
                        {
                          "ID": 2,
                          "share": 90,
                          "domain": "pay.nl",
                          "status": "ACTIVE"
                        },
                        {
                          "ID": 52,
                          "share": 10,
                          "domain": "payments.nl",
                          "status": "ACTIVE"
                        },
                        {
                          "ID": 51,
                          "share": 0,
                          "domain": "achterelkebetaling.nl",
                          "status": "INACTIVE"
                        }
                      ],
                      "_links": [
                        {
                          "href": "/services/config",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/services": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Return a list of all services linked to the current merchant.",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                            "type": "string",
                            "example": "SL-####-####"
                          },
                          "name": {
                            "description": "The name of your service.",
                            "type": "string",
                            "example": "My first service!"
                          },
                          "description": {
                            "description": "The description of the service.",
                            "type": "string"
                          },
                          "testMode": {
                            "description": "Indicates if the service is in testmode or not, possible values: false or true",
                            "type": "integer"
                          },
                          "secret": {
                            "description": "The unique reference for this service.",
                            "type": "string",
                            "example": "bade123abf124124abefa311b"
                          },
                          "createdAt": {
                            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00",
                            "nullable": false
                          }
                        },
                        "type": "object",
                        "title": "Service",
                        "x-readme-ref-name": "Service"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/services/{serviceId}": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Fetch a service.",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
              "type": "string",
              "example": "SL-####-####"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "name": {
                      "description": "The name of your service.",
                      "type": "string",
                      "example": "My first service!"
                    },
                    "description": {
                      "description": "The description of the service.",
                      "type": "string"
                    },
                    "testMode": {
                      "description": "Indicates if the service is in testmode or not, possible values: false or true",
                      "type": "integer"
                    },
                    "secret": {
                      "description": "The unique reference for this service.",
                      "type": "string",
                      "example": "bade123abf124124abefa311b"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    }
                  },
                  "type": "object",
                  "title": "Service",
                  "x-readme-ref-name": "Service"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/services/{serviceId}/paymentlink": {
      "post": {
        "tags": [
          "Services"
        ],
        "summary": "PaymentLink:Create",
        "description": "You can create a payment page for invoice payments & donations",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
              "type": "string",
              "example": "SL-####-####"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "Create a PaymentLink",
                "required": [
                  "securityMode",
                  "language",
                  "amount",
                  "amountMin"
                ],
                "properties": {
                  "securityMode": {
                    "description": "0: URL, amount and variables can be changed\n1: Amount is fixed. URL and variables can be changed\n2: Pre filled variable can be changed. Amount is fixed\n3: URL, amount and variables are fixed. Only empty variables can be filled",
                    "type": "integer",
                    "enum": [
                      0,
                      1,
                      2,
                      3
                    ]
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  },
                  "language": {
                    "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the hostedPaymentPageLanguageAvailable flag is set to 'True'",
                    "type": "string",
                    "example": "nl_NL"
                  },
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "amountMin": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "stats": {
                    "properties": {
                      "info": {
                        "description": "The used info code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Campagne 99"
                      },
                      "tool": {
                        "description": "The used tool code which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Google"
                      },
                      "object": {
                        "description": "The object which can be tracked in stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1
                      },
                      "extra1": {
                        "description": "The first free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Customer 6985615"
                      },
                      "extra2": {
                        "description": "The second free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Invoice 21.3695"
                      },
                      "extra3": {
                        "description": "The third free value which can be tracked in the stats.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Shop Amsterdam"
                      },
                      "domainId": {
                        "description": "The ID of the duplicate content URL",
                        "type": "string",
                        "example": "WU-####-####"
                      }
                    },
                    "type": "object",
                    "title": "Stats",
                    "x-readme-ref-name": "Stats"
                  }
                },
                "type": "object"
              },
              "examples": {
                "basicPaymentLink": {
                  "summary": "Create a PaymentLink",
                  "value": {
                    "securityMode": 0,
                    "countryCode": "NL",
                    "language": "nl_NL",
                    "amount": {
                      "value": 10,
                      "currency": "EUR"
                    },
                    "amountMin": {
                      "value": 10,
                      "currency": "EUR"
                    },
                    "stats": {
                      "info": "Campagne 99",
                      "tool": "Google",
                      "object": "string",
                      "extra1": "Customer 6985615",
                      "extra2": "Invoice 21.3695",
                      "extra3": "Shop Amsterdam",
                      "domainId": "WU-####-####"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "securityMode"
                  ],
                  "properties": {
                    "url": {
                      "description": "The paylink url.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://example.com"
                    },
                    "securityMode": {
                      "description": "0: URL, amount and variables can be changed\n1: Amount is fixed. URL and variables can be changed\n2: Pre filled variable can be changed. Amount is fixed\n3: URL, amount and variables are fixed. Only empty variables can be filled",
                      "type": "integer",
                      "enum": [
                        0,
                        1,
                        2,
                        3
                      ]
                    }
                  },
                  "type": "object",
                  "title": "PaymentLink",
                  "x-readme-ref-name": "PaymentLink"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Bad Request",
                    "value": {
                      "securityMode": {
                        "message": "is_empty",
                        "code": "PAY-2828"
                      },
                      "amount": {
                        "value": {
                          "message": "is_empty",
                          "code": "PAY-2828"
                        }
                      },
                      "_links": [
                        {
                          "href": "/services/SL-4241-3001/paymentlink",
                          "rel": "self",
                          "type": "POST"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/services/{serviceId}/paymentmethods": {
      "get": {
        "tags": [
          "Services"
        ],
        "summary": "Returnsa list of all available payment options for a service, including the list of any specific settings this payment option requires.",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
              "type": "string",
              "example": "SL-####-####"
            }
          },
          {
            "name": "country",
            "in": "query",
            "required": false,
            "schema": {
              "description": "The country code consisting of 2 uppercase letters",
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "NL",
                "BE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "total": {
                      "type": "integer"
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                            "type": "integer",
                            "example": "10"
                          },
                          "subId": {
                            "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                            "type": "string",
                            "example": "10"
                          },
                          "name": {
                            "description": "The name of the payment method.",
                            "type": "string",
                            "example": "ideal"
                          }
                        },
                        "type": "object",
                        "title": "PaymentMethod",
                        "x-readme-ref-name": "PaymentMethod"
                      }
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/approve": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Verify:Approve",
        "description": "Transactions that have the status verify (which implies that a transaction needs to be checked) can be approved to collect the funds and to set the payment state to PAID (100). You can use the EX code or the order ID to approve the transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string"
                    },
                    "serviceCode": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string"
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "paymentData": {
                      "properties": {
                        "method": {
                          "description": "Payment method of the transaction.",
                          "type": "string"
                        },
                        "customerKey": {
                          "description": "Customer key of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerId": {
                          "description": "Customer id of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerName": {
                          "description": "Customer name of the customer from the transaction.",
                          "type": "string"
                        },
                        "ipAddress": {
                          "description": "Ip address of the customer from the transaction.",
                          "type": "string"
                        },
                        "secureStatus": {
                          "description": "Secure status of the transaction.",
                          "type": "boolean"
                        },
                        "paymentVerificationMethod": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentData",
                      "x-readme-ref-name": "TransactionStatusPaymentData"
                    },
                    "paymentMethod": {
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentMethod",
                      "x-readme-ref-name": "TransactionStatusPaymentMethod"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "expiredAt": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TransactionStatus",
                  "x-readme-ref-name": "TransactionStatus"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction approve",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountConverted": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountPaid": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "amountRefunded": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": 100,
                        "action": "PAID",
                        "phase": "SUCCESS"
                      },
                      "paymentData": {
                        "method": "iban",
                        "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
                        "customerId": "NL91ABNA0417164300",
                        "customerName": "John Doe",
                        "ipAddress": "127.0.0.1",
                        "secureStatus": false
                      },
                      "paymentMethod": {
                        "id": 10,
                        "subId": 3
                      },
                      "integration": {
                        "testMode": false
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/approve",
                          "rel": "self",
                          "type": "PATCH"
                        },
                        {
                          "href": "/transactions/EX-0171-7899-4460",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/cancel": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction:Cancel",
        "description": "Transactions that have the status pending (which implies that the payment is waiting for an action) can be cancelled. If you cancel a transaction a new processing action cannot be started. A cancel of the transaction will not stop the money flow. The payment state of the transaction will be set to CANCEL (-90). You can use the EX code or the order ID to cancel the transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string"
                    },
                    "serviceCode": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string"
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "paymentData": {
                      "properties": {
                        "method": {
                          "description": "Payment method of the transaction.",
                          "type": "string"
                        },
                        "customerKey": {
                          "description": "Customer key of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerId": {
                          "description": "Customer id of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerName": {
                          "description": "Customer name of the customer from the transaction.",
                          "type": "string"
                        },
                        "ipAddress": {
                          "description": "Ip address of the customer from the transaction.",
                          "type": "string"
                        },
                        "secureStatus": {
                          "description": "Secure status of the transaction.",
                          "type": "boolean"
                        },
                        "paymentVerificationMethod": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentData",
                      "x-readme-ref-name": "TransactionStatusPaymentData"
                    },
                    "paymentMethod": {
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentMethod",
                      "x-readme-ref-name": "TransactionStatusPaymentMethod"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "expiredAt": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TransactionStatus",
                  "x-readme-ref-name": "TransactionStatus"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction cancel",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountConverted": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountPaid": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "amountRefunded": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": -90,
                        "action": "CANCEL",
                        "phase": "CANCELLED"
                      },
                      "paymentData": {
                        "method": "iban",
                        "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
                        "customerId": "NL91ABNA0417164300",
                        "customerName": "John Doe",
                        "ipAddress": "127.0.0.1",
                        "secureStatus": false
                      },
                      "paymentMethod": {
                        "id": 10,
                        "subId": 3
                      },
                      "integration": {
                        "testMode": false
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/cancel",
                          "rel": "self",
                          "type": "PATCH"
                        },
                        {
                          "href": "/transactions/EX-0171-7899-4460",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/capture": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Authorisation:Capture",
        "description": "Transactions that have the status authorize (is used by credit card payments or Buy now, Pay later payments) needs an extra action to convert the payment state to a PAID (100) transaction. This can be achieved by capturing the transaction. You can use the EX code or the order Id to capture the transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "products": {
                    "type": "object",
                    "example": {
                      "TEST_01": 1
                    },
                    "additionalProperties": {
                      "description": "Key is the ID of the product, value is the quantity",
                      "type": "integer"
                    }
                  }
                },
                "type": "object"
              },
              "examples": {
                "amountCapture": {
                  "summary": "Capture based on an amount",
                  "value": {
                    "amount": 10
                  }
                },
                "productCapture": {
                  "summary": "Capture based on a product",
                  "value": {
                    "products": {
                      "TEST_01": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string"
                    },
                    "serviceCode": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string"
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "paymentData": {
                      "properties": {
                        "method": {
                          "description": "Payment method of the transaction.",
                          "type": "string"
                        },
                        "customerKey": {
                          "description": "Customer key of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerId": {
                          "description": "Customer id of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerName": {
                          "description": "Customer name of the customer from the transaction.",
                          "type": "string"
                        },
                        "ipAddress": {
                          "description": "Ip address of the customer from the transaction.",
                          "type": "string"
                        },
                        "secureStatus": {
                          "description": "Secure status of the transaction.",
                          "type": "boolean"
                        },
                        "paymentVerificationMethod": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentData",
                      "x-readme-ref-name": "TransactionStatusPaymentData"
                    },
                    "paymentMethod": {
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentMethod",
                      "x-readme-ref-name": "TransactionStatusPaymentMethod"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "expiredAt": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TransactionStatus",
                  "x-readme-ref-name": "TransactionStatus"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction capture",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountConverted": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountPaid": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "amountRefunded": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": 100,
                        "action": "PAID",
                        "phase": "SUCCESS"
                      },
                      "paymentData": {
                        "method": "iban",
                        "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
                        "customerId": "NL91ABNA0417164300",
                        "customerName": "John Doe",
                        "ipAddress": "127.0.0.1",
                        "secureStatus": false
                      },
                      "paymentMethod": {
                        "id": 10,
                        "subId": 3
                      },
                      "integration": {
                        "testMode": false
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/capture",
                          "rel": "self",
                          "type": "PATCH"
                        },
                        {
                          "href": "/transactions/EX-0171-7899-4460",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/decline": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Verify:Decline",
        "description": "Transactions that have the status verify (which implies that a transaction needs to be checked) can be declined to release the authorisation on a card or to refund the original transaction. The payment state is set to CANCEL (-64). You can use the EX code or the order ID to decline the transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string"
                    },
                    "serviceCode": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string"
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "paymentData": {
                      "properties": {
                        "method": {
                          "description": "Payment method of the transaction.",
                          "type": "string"
                        },
                        "customerKey": {
                          "description": "Customer key of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerId": {
                          "description": "Customer id of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerName": {
                          "description": "Customer name of the customer from the transaction.",
                          "type": "string"
                        },
                        "ipAddress": {
                          "description": "Ip address of the customer from the transaction.",
                          "type": "string"
                        },
                        "secureStatus": {
                          "description": "Secure status of the transaction.",
                          "type": "boolean"
                        },
                        "paymentVerificationMethod": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentData",
                      "x-readme-ref-name": "TransactionStatusPaymentData"
                    },
                    "paymentMethod": {
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentMethod",
                      "x-readme-ref-name": "TransactionStatusPaymentMethod"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "expiredAt": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TransactionStatus",
                  "x-readme-ref-name": "TransactionStatus"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction decline",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountConverted": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountPaid": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "amountRefunded": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": -64,
                        "action": "CANCEL",
                        "phase": "DENIED"
                      },
                      "paymentData": {
                        "method": "iban",
                        "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
                        "customerId": "NL91ABNA0417164300",
                        "customerName": "John Doe",
                        "ipAddress": "127.0.0.1",
                        "secureStatus": false
                      },
                      "paymentMethod": {
                        "id": 10,
                        "subId": 3
                      },
                      "integration": {
                        "testMode": false
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/decline",
                          "rel": "self",
                          "type": "PATCH"
                        },
                        {
                          "href": "/transactions/EX-0171-7899-4460",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/load": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction:Load",
        "description": "Load a transaction which has been started, so that the transaction can be finalized on another device. The transaction can only be loaded if a transaction has the status 20, 50 and 90 (PENDING)",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "serviceId",
                        "amount",
                        "returnUrl"
                      ],
                      "properties": {
                        "id": {
                          "description": "The Id of the transaction.",
                          "type": "string",
                          "example": "EX-1234-1234-1234"
                        },
                        "serviceId": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "description": {
                          "description": "Is shown on the statement of the payer.",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "Example description."
                        },
                        "reference": {
                          "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9]{1,64}$",
                          "example": "12345XXY0123"
                        },
                        "manualTransferCode": {
                          "description": "Payment reference used to identify manual bank transfers",
                          "type": "string",
                          "example": "0000 0000 0000 0000"
                        },
                        "orderId": {
                          "description": "The orderId of the transaction.",
                          "type": "string",
                          "example": "0000000000X00000"
                        },
                        "ipAddress": {
                          "description": "An ip address",
                          "type": "string",
                          "example": "213.126.82.230"
                        },
                        "exchangeUrl": {
                          "description": "The URL where we exchange the status of a transaction.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://demo.pay.nl/exchange.php"
                        },
                        "returnUrl": {
                          "description": "The URL where the payer has to be send to after the payment.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://demo.pay.nl/complete/"
                        },
                        "paymentUrl": {
                          "description": "The payment URL for this transaction",
                          "type": "string",
                          "format": "uri"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "expire": {
                          "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "created": {
                          "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "modified": {
                          "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "amountConverted": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "amountPaid": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "amountRefunded": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "paymentMethod": {
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                              "type": "integer",
                              "example": "10"
                            },
                            "subId": {
                              "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                              "type": "string",
                              "example": "10"
                            },
                            "name": {
                              "description": "The name of the payment method.",
                              "type": "string",
                              "example": "ideal"
                            }
                          },
                          "type": "object",
                          "title": "PaymentMethod",
                          "x-readme-ref-name": "PaymentMethod"
                        },
                        "status": {
                          "properties": {
                            "code": {
                              "description": "The status code.",
                              "type": "integer"
                            },
                            "action": {
                              "description": "The state in which the transaction resides",
                              "type": "string",
                              "example": "PAID"
                            },
                            "phase": {
                              "description": "The current phase in the transaction state",
                              "type": "string",
                              "example": "APPROVED"
                            }
                          },
                          "type": "object",
                          "title": "Status",
                          "x-readme-ref-name": "Status"
                        },
                        "integration": {
                          "properties": {
                            "testMode": {
                              "description": "Indicates if the service is in testmode or not, possible values: false or true",
                              "type": "boolean"
                            }
                          },
                          "type": "object",
                          "title": "Integration",
                          "x-readme-ref-name": "Integration"
                        },
                        "customer": {
                          "properties": {
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "type": {
                              "description": "Either B for business or C for consumer.",
                              "type": "string",
                              "enum": [
                                "B",
                                "C"
                              ]
                            },
                            "ip": {
                              "description": "An ip address",
                              "type": "string",
                              "example": "213.126.82.230"
                            },
                            "birthDate": {
                              "description": "Date of birth as defined in ISO-8601.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "gender": {
                              "description": "The subject's gender. Choose either M for male or F for female.",
                              "type": "string",
                              "example": "M"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                              "type": "string",
                              "enum": [
                                "NL",
                                "EN",
                                "DE",
                                "FR",
                                "IT",
                                "ES"
                              ],
                              "example": "NL"
                            },
                            "trust": {
                              "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                              "type": "integer",
                              "maximum": 10,
                              "minimum": -10,
                              "example": -5
                            },
                            "reference": {
                              "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]{1,64}$",
                              "example": "NL87654321"
                            },
                            "bankAccount": {
                              "required": [
                                "iban",
                                "bic",
                                "owner"
                              ],
                              "properties": {
                                "iban": {
                                  "description": "The International Bank Account Number (IBAN).",
                                  "type": "string",
                                  "example": "NL69INGB0123456789"
                                },
                                "bic": {
                                  "description": "Business Identifier Codes (BIC/SWIFT).",
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "description": "The owner of the bank account.",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John Doe"
                                }
                              },
                              "type": "object",
                              "title": "BankAccount",
                              "x-readme-ref-name": "BankAccount"
                            },
                            "company": {
                              "properties": {
                                "name": {
                                  "description": "The name of your merchant.",
                                  "type": "string",
                                  "example": "CompanyName"
                                },
                                "coc": {
                                  "description": "Your Chamber of commerce registration number. This format differs per country.",
                                  "type": "string",
                                  "example": "12345678"
                                },
                                "vat": {
                                  "description": "Value added tax identification number (VAT identification number).",
                                  "type": "string",
                                  "example": "NL807960147B01"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Company",
                              "x-readme-ref-name": "Company"
                            }
                          },
                          "type": "object",
                          "title": "Customer",
                          "x-readme-ref-name": "Customer"
                        },
                        "order": {
                          "properties": {
                            "countryCode": {
                              "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            },
                            "deliveryDate": {
                              "description": "The date of delivery.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "invoiceDate": {
                              "description": "The date of the invoice",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "deliveryAddress": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "description": "The forename (also known as a given name, Christian name or a first name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John"
                                },
                                "lastName": {
                                  "description": "The surname (also known as a family name or a last name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "Doe"
                                },
                                "streetName": {
                                  "description": "The name of the street",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Visitlane"
                                },
                                "streetNumber": {
                                  "description": "The street number",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "13"
                                },
                                "streetNumberExtension": {
                                  "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "b1"
                                },
                                "zipCode": {
                                  "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                  "type": "string",
                                  "maxLength": 16,
                                  "minLength": 1,
                                  "example": "5678CD"
                                },
                                "city": {
                                  "description": "The name of a city",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Amsterdam"
                                },
                                "regionCode": {
                                  "description": "Region code (iso-3166-2)",
                                  "type": "string",
                                  "example": "ZH"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "maxLength": 2,
                                  "minLength": 2,
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Address",
                              "x-readme-ref-name": "Address"
                            },
                            "invoiceAddress": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "description": "The forename (also known as a given name, Christian name or a first name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John"
                                },
                                "lastName": {
                                  "description": "The surname (also known as a family name or a last name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "Doe"
                                },
                                "streetName": {
                                  "description": "The name of the street",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Visitlane"
                                },
                                "streetNumber": {
                                  "description": "The street number",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "13"
                                },
                                "streetNumberExtension": {
                                  "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "b1"
                                },
                                "zipCode": {
                                  "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                  "type": "string",
                                  "maxLength": 16,
                                  "minLength": 1,
                                  "example": "5678CD"
                                },
                                "city": {
                                  "description": "The name of a city",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Amsterdam"
                                },
                                "regionCode": {
                                  "description": "Region code (iso-3166-2)",
                                  "type": "string",
                                  "example": "ZH"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "maxLength": 2,
                                  "minLength": 2,
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Address",
                              "x-readme-ref-name": "Address"
                            },
                            "products": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "The product identifier.",
                                    "type": "string",
                                    "example": "TEST_01"
                                  },
                                  "description": {
                                    "description": "The description of the product.",
                                    "type": "string",
                                    "example": "Some product description"
                                  },
                                  "type": {
                                    "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                                    "type": "string",
                                    "enum": [
                                      "shipping",
                                      "article",
                                      "discount",
                                      "rounding",
                                      "handling",
                                      "payment",
                                      "credit",
                                      "giftcard",
                                      "emoney",
                                      "crypto"
                                    ]
                                  },
                                  "price": {
                                    "properties": {
                                      "value": {
                                        "description": "The amount in cents.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 10
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "quantity": {
                                    "description": "The quantity.",
                                    "type": "number",
                                    "format": "float"
                                  },
                                  "vatCode": {
                                    "description": "The VAT code to use.",
                                    "type": "string",
                                    "enum": [
                                      "N",
                                      "H",
                                      "L"
                                    ]
                                  }
                                },
                                "type": "object",
                                "title": "Product",
                                "x-readme-ref-name": "Product"
                              }
                            }
                          },
                          "type": "object",
                          "title": "Order",
                          "x-readme-ref-name": "Order"
                        },
                        "stats": {
                          "properties": {
                            "info": {
                              "description": "The used info code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Campagne 99"
                            },
                            "tool": {
                              "description": "The used tool code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Google"
                            },
                            "object": {
                              "description": "The object which can be tracked in stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1
                            },
                            "extra1": {
                              "description": "The first free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Customer 6985615"
                            },
                            "extra2": {
                              "description": "The second free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Invoice 21.3695"
                            },
                            "extra3": {
                              "description": "The third free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Shop Amsterdam"
                            },
                            "domainId": {
                              "description": "The ID of the duplicate content URL",
                              "type": "string",
                              "example": "WU-####-####"
                            }
                          },
                          "type": "object",
                          "title": "Stats",
                          "x-readme-ref-name": "Stats"
                        },
                        "type": {
                          "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                          "type": "string",
                          "enum": [
                            "POS",
                            "ECOM",
                            "CIT",
                            "MIT",
                            "MOTO"
                          ]
                        },
                        "transferData": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The name of the variable to be tracked in the transaction.",
                                "type": "string",
                                "example": "stat1"
                              },
                              "value": {
                                "description": "The value of the variable to be tracked in the transaction.",
                                "type": "string",
                                "example": "ab8827dfc"
                              }
                            },
                            "type": "object",
                            "title": "TransferData",
                            "x-readme-ref-name": "TransferData"
                          },
                          "xml": {
                            "name": "transferData",
                            "wrapped": true
                          }
                        }
                      },
                      "type": "object",
                      "xml": {
                        "name": "transaction"
                      },
                      "title": "Transaction",
                      "x-readme-ref-name": "Transaction"
                    },
                    {
                      "properties": {
                        "serviceCode": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string"
                        },
                        "merchant": {
                          "required": [
                            "code",
                            "name",
                            "status"
                          ],
                          "properties": {
                            "code": {
                              "description": "The merchant id of your company starting with M.",
                              "type": "string",
                              "example": "M-1234-4321"
                            },
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 2,
                              "example": "CompanyName"
                            },
                            "status": {
                              "description": "Merchant state",
                              "type": "string",
                              "example": "ACTIVE"
                            }
                          },
                          "type": "object",
                          "title": "MerchantMinimal",
                          "x-readme-ref-name": "MerchantMinimal"
                        },
                        "tradeName": {
                          "properties": {
                            "code": {
                              "description": "An identifier for this TradeName",
                              "type": "string"
                            },
                            "name": {
                              "description": "A registered TradeName",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "title": "TradeName",
                          "x-readme-ref-name": "TradeName"
                        },
                        "layout": {
                          "properties": {
                            "code": {
                              "description": "Id of layout",
                              "type": "string",
                              "example": "LY-####-####"
                            },
                            "name": {
                              "description": "Name of the layout",
                              "type": "string",
                              "example": "My layout"
                            },
                            "ccsUrl": {
                              "description": "CSS url to the layout css",
                              "type": "string"
                            },
                            "icon": {
                              "description": "Image in base64 encoding",
                              "type": "string"
                            },
                            "supportingColor": {
                              "description": "Supporting hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "headerTextColor": {
                              "description": "Header hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "buttonColor": {
                              "description": "Button hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "buttonTextColor": {
                              "description": "Button text hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            }
                          },
                          "type": "object",
                          "title": "Layout",
                          "x-readme-ref-name": "Layout"
                        },
                        "expiredAt": {
                          "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "xml": {
                        "name": "transactionLoad"
                      }
                    }
                  ],
                  "title": "TransactionLoad",
                  "x-readme-ref-name": "TransactionLoad"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction Load",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "0000 0018 0911 7996",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "returnUrl": "https://pay.nl",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": 20,
                        "action": "PENDING",
                        "phase": "PENDING"
                      },
                      "integration": {
                        "testMode": false
                      },
                      "merchant": {
                        "code": "M-3421-2120",
                        "name": "Company B.V.",
                        "status": "ACTIVE"
                      },
                      "tradeName": {
                        "code": "TM-1740-2882",
                        "name": "TradeName"
                      },
                      "layout": {
                        "code": "LY-1080-1010",
                        "name": "Eigen look & feel",
                        "cssUrl": "https://static.pay.nl/layout/LY-1080-1010/cssfile.css",
                        "icon": "",
                        "supportingColor": "000000",
                        "headerTextColor": "556622",
                        "buttonColor": "56EADD",
                        "buttonTextColor": "CCCCCC"
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/load",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/load": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction:LoadUUID",
        "description": "Load a transaction which has been started, so that the transaction can be finalized on another device. The transaction can only be loaded if a transaction has the status 20, 50 and 90 (PENDING). You need to authenticate with the orderid (as username) and the entrancecode (as password) or only the uuid (as username) of the transaction",
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "required": [
                        "serviceId",
                        "amount",
                        "returnUrl"
                      ],
                      "properties": {
                        "id": {
                          "description": "The Id of the transaction.",
                          "type": "string",
                          "example": "EX-1234-1234-1234"
                        },
                        "serviceId": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string",
                          "example": "SL-####-####"
                        },
                        "description": {
                          "description": "Is shown on the statement of the payer.",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "Example description."
                        },
                        "reference": {
                          "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9]{1,64}$",
                          "example": "12345XXY0123"
                        },
                        "manualTransferCode": {
                          "description": "Payment reference used to identify manual bank transfers",
                          "type": "string",
                          "example": "0000 0000 0000 0000"
                        },
                        "orderId": {
                          "description": "The orderId of the transaction.",
                          "type": "string",
                          "example": "0000000000X00000"
                        },
                        "ipAddress": {
                          "description": "An ip address",
                          "type": "string",
                          "example": "213.126.82.230"
                        },
                        "exchangeUrl": {
                          "description": "The URL where we exchange the status of a transaction.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://demo.pay.nl/exchange.php"
                        },
                        "returnUrl": {
                          "description": "The URL where the payer has to be send to after the payment.",
                          "type": "string",
                          "format": "uri",
                          "example": "https://demo.pay.nl/complete/"
                        },
                        "paymentUrl": {
                          "description": "The payment URL for this transaction",
                          "type": "string",
                          "format": "uri"
                        },
                        "amount": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "expire": {
                          "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "created": {
                          "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "modified": {
                          "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00"
                        },
                        "amountConverted": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "amountPaid": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "amountRefunded": {
                          "required": [
                            "value"
                          ],
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            },
                            "currency": {
                              "description": "The currency in ISO-4217 format.",
                              "type": "string",
                              "example": "EUR"
                            }
                          },
                          "type": "object",
                          "title": "Amount",
                          "x-readme-ref-name": "Amount"
                        },
                        "paymentMethod": {
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                              "type": "integer",
                              "example": "10"
                            },
                            "subId": {
                              "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                              "type": "string",
                              "example": "10"
                            },
                            "name": {
                              "description": "The name of the payment method.",
                              "type": "string",
                              "example": "ideal"
                            }
                          },
                          "type": "object",
                          "title": "PaymentMethod",
                          "x-readme-ref-name": "PaymentMethod"
                        },
                        "status": {
                          "properties": {
                            "code": {
                              "description": "The status code.",
                              "type": "integer"
                            },
                            "action": {
                              "description": "The state in which the transaction resides",
                              "type": "string",
                              "example": "PAID"
                            },
                            "phase": {
                              "description": "The current phase in the transaction state",
                              "type": "string",
                              "example": "APPROVED"
                            }
                          },
                          "type": "object",
                          "title": "Status",
                          "x-readme-ref-name": "Status"
                        },
                        "integration": {
                          "properties": {
                            "testMode": {
                              "description": "Indicates if the service is in testmode or not, possible values: false or true",
                              "type": "boolean"
                            }
                          },
                          "type": "object",
                          "title": "Integration",
                          "x-readme-ref-name": "Integration"
                        },
                        "customer": {
                          "properties": {
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "type": {
                              "description": "Either B for business or C for consumer.",
                              "type": "string",
                              "enum": [
                                "B",
                                "C"
                              ]
                            },
                            "ip": {
                              "description": "An ip address",
                              "type": "string",
                              "example": "213.126.82.230"
                            },
                            "birthDate": {
                              "description": "Date of birth as defined in ISO-8601.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "gender": {
                              "description": "The subject's gender. Choose either M for male or F for female.",
                              "type": "string",
                              "example": "M"
                            },
                            "phone": {
                              "description": "The subject's phone number. Optionally prepended with a + and country code",
                              "type": "string",
                              "example": "0031612345678"
                            },
                            "email": {
                              "description": "An email address.",
                              "type": "string",
                              "format": "email",
                              "example": "sandbox@pay.nl"
                            },
                            "language": {
                              "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                              "type": "string",
                              "enum": [
                                "NL",
                                "EN",
                                "DE",
                                "FR",
                                "IT",
                                "ES"
                              ],
                              "example": "NL"
                            },
                            "trust": {
                              "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                              "type": "integer",
                              "maximum": 10,
                              "minimum": -10,
                              "example": -5
                            },
                            "reference": {
                              "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "pattern": "^[a-zA-Z0-9]{1,64}$",
                              "example": "NL87654321"
                            },
                            "bankAccount": {
                              "required": [
                                "iban",
                                "bic",
                                "owner"
                              ],
                              "properties": {
                                "iban": {
                                  "description": "The International Bank Account Number (IBAN).",
                                  "type": "string",
                                  "example": "NL69INGB0123456789"
                                },
                                "bic": {
                                  "description": "Business Identifier Codes (BIC/SWIFT).",
                                  "type": "string",
                                  "example": "INGBNL2A"
                                },
                                "owner": {
                                  "description": "The owner of the bank account.",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John Doe"
                                }
                              },
                              "type": "object",
                              "title": "BankAccount",
                              "x-readme-ref-name": "BankAccount"
                            },
                            "company": {
                              "properties": {
                                "name": {
                                  "description": "The name of your merchant.",
                                  "type": "string",
                                  "example": "CompanyName"
                                },
                                "coc": {
                                  "description": "Your Chamber of commerce registration number. This format differs per country.",
                                  "type": "string",
                                  "example": "12345678"
                                },
                                "vat": {
                                  "description": "Value added tax identification number (VAT identification number).",
                                  "type": "string",
                                  "example": "NL807960147B01"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Company",
                              "x-readme-ref-name": "Company"
                            }
                          },
                          "type": "object",
                          "title": "Customer",
                          "x-readme-ref-name": "Customer"
                        },
                        "order": {
                          "properties": {
                            "countryCode": {
                              "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            },
                            "deliveryDate": {
                              "description": "The date of delivery.",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "invoiceDate": {
                              "description": "The date of the invoice",
                              "type": "string",
                              "format": "date",
                              "example": "1999-02-15"
                            },
                            "deliveryAddress": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "description": "The forename (also known as a given name, Christian name or a first name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John"
                                },
                                "lastName": {
                                  "description": "The surname (also known as a family name or a last name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "Doe"
                                },
                                "streetName": {
                                  "description": "The name of the street",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Visitlane"
                                },
                                "streetNumber": {
                                  "description": "The street number",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "13"
                                },
                                "streetNumberExtension": {
                                  "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "b1"
                                },
                                "zipCode": {
                                  "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                  "type": "string",
                                  "maxLength": 16,
                                  "minLength": 1,
                                  "example": "5678CD"
                                },
                                "city": {
                                  "description": "The name of a city",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Amsterdam"
                                },
                                "regionCode": {
                                  "description": "Region code (iso-3166-2)",
                                  "type": "string",
                                  "example": "ZH"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "maxLength": 2,
                                  "minLength": 2,
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Address",
                              "x-readme-ref-name": "Address"
                            },
                            "invoiceAddress": {
                              "properties": {
                                "code": {
                                  "type": "string"
                                },
                                "firstName": {
                                  "description": "The forename (also known as a given name, Christian name or a first name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "John"
                                },
                                "lastName": {
                                  "description": "The surname (also known as a family name or a last name).",
                                  "type": "string",
                                  "maxLength": 64,
                                  "minLength": 1,
                                  "example": "Doe"
                                },
                                "streetName": {
                                  "description": "The name of the street",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Visitlane"
                                },
                                "streetNumber": {
                                  "description": "The street number",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "13"
                                },
                                "streetNumberExtension": {
                                  "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                                  "type": "string",
                                  "maxLength": 32,
                                  "minLength": 1,
                                  "example": "b1"
                                },
                                "zipCode": {
                                  "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                                  "type": "string",
                                  "maxLength": 16,
                                  "minLength": 1,
                                  "example": "5678CD"
                                },
                                "city": {
                                  "description": "The name of a city",
                                  "type": "string",
                                  "maxLength": 128,
                                  "minLength": 1,
                                  "example": "Amsterdam"
                                },
                                "regionCode": {
                                  "description": "Region code (iso-3166-2)",
                                  "type": "string",
                                  "example": "ZH"
                                },
                                "countryCode": {
                                  "description": "The country code consisting of 2 uppercase letters",
                                  "type": "string",
                                  "maxLength": 2,
                                  "minLength": 2,
                                  "example": "NL"
                                }
                              },
                              "type": "object",
                              "title": "Address",
                              "x-readme-ref-name": "Address"
                            },
                            "products": {
                              "type": "array",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "The product identifier.",
                                    "type": "string",
                                    "example": "TEST_01"
                                  },
                                  "description": {
                                    "description": "The description of the product.",
                                    "type": "string",
                                    "example": "Some product description"
                                  },
                                  "type": {
                                    "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                                    "type": "string",
                                    "enum": [
                                      "shipping",
                                      "article",
                                      "discount",
                                      "rounding",
                                      "handling",
                                      "payment",
                                      "credit",
                                      "giftcard",
                                      "emoney",
                                      "crypto"
                                    ]
                                  },
                                  "price": {
                                    "properties": {
                                      "value": {
                                        "description": "The amount in cents.",
                                        "type": "integer",
                                        "minimum": 1,
                                        "example": 10
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "quantity": {
                                    "description": "The quantity.",
                                    "type": "number",
                                    "format": "float"
                                  },
                                  "vatCode": {
                                    "description": "The VAT code to use.",
                                    "type": "string",
                                    "enum": [
                                      "N",
                                      "H",
                                      "L"
                                    ]
                                  }
                                },
                                "type": "object",
                                "title": "Product",
                                "x-readme-ref-name": "Product"
                              }
                            }
                          },
                          "type": "object",
                          "title": "Order",
                          "x-readme-ref-name": "Order"
                        },
                        "stats": {
                          "properties": {
                            "info": {
                              "description": "The used info code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Campagne 99"
                            },
                            "tool": {
                              "description": "The used tool code which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Google"
                            },
                            "object": {
                              "description": "The object which can be tracked in stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1
                            },
                            "extra1": {
                              "description": "The first free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Customer 6985615"
                            },
                            "extra2": {
                              "description": "The second free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Invoice 21.3695"
                            },
                            "extra3": {
                              "description": "The third free value which can be tracked in the stats.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Shop Amsterdam"
                            },
                            "domainId": {
                              "description": "The ID of the duplicate content URL",
                              "type": "string",
                              "example": "WU-####-####"
                            }
                          },
                          "type": "object",
                          "title": "Stats",
                          "x-readme-ref-name": "Stats"
                        },
                        "type": {
                          "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                          "type": "string",
                          "enum": [
                            "POS",
                            "ECOM",
                            "CIT",
                            "MIT",
                            "MOTO"
                          ]
                        },
                        "transferData": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "name": {
                                "description": "The name of the variable to be tracked in the transaction.",
                                "type": "string",
                                "example": "stat1"
                              },
                              "value": {
                                "description": "The value of the variable to be tracked in the transaction.",
                                "type": "string",
                                "example": "ab8827dfc"
                              }
                            },
                            "type": "object",
                            "title": "TransferData",
                            "x-readme-ref-name": "TransferData"
                          },
                          "xml": {
                            "name": "transferData",
                            "wrapped": true
                          }
                        }
                      },
                      "type": "object",
                      "xml": {
                        "name": "transaction"
                      },
                      "title": "Transaction",
                      "x-readme-ref-name": "Transaction"
                    },
                    {
                      "properties": {
                        "serviceCode": {
                          "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                          "type": "string"
                        },
                        "merchant": {
                          "required": [
                            "code",
                            "name",
                            "status"
                          ],
                          "properties": {
                            "code": {
                              "description": "The merchant id of your company starting with M.",
                              "type": "string",
                              "example": "M-1234-4321"
                            },
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 2,
                              "example": "CompanyName"
                            },
                            "status": {
                              "description": "Merchant state",
                              "type": "string",
                              "example": "ACTIVE"
                            }
                          },
                          "type": "object",
                          "title": "MerchantMinimal",
                          "x-readme-ref-name": "MerchantMinimal"
                        },
                        "tradeName": {
                          "properties": {
                            "code": {
                              "description": "An identifier for this TradeName",
                              "type": "string"
                            },
                            "name": {
                              "description": "A registered TradeName",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "title": "TradeName",
                          "x-readme-ref-name": "TradeName"
                        },
                        "layout": {
                          "properties": {
                            "code": {
                              "description": "Id of layout",
                              "type": "string",
                              "example": "LY-####-####"
                            },
                            "name": {
                              "description": "Name of the layout",
                              "type": "string",
                              "example": "My layout"
                            },
                            "ccsUrl": {
                              "description": "CSS url to the layout css",
                              "type": "string"
                            },
                            "icon": {
                              "description": "Image in base64 encoding",
                              "type": "string"
                            },
                            "supportingColor": {
                              "description": "Supporting hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "headerTextColor": {
                              "description": "Header hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "buttonColor": {
                              "description": "Button hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            },
                            "buttonTextColor": {
                              "description": "Button text hex color code",
                              "type": "string",
                              "example": "FFFFFF"
                            }
                          },
                          "type": "object",
                          "title": "Layout",
                          "x-readme-ref-name": "Layout"
                        },
                        "expiredAt": {
                          "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "xml": {
                        "name": "transactionLoad"
                      }
                    }
                  ],
                  "title": "TransactionLoad",
                  "x-readme-ref-name": "TransactionLoad"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction Load",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "0000 0018 0911 7996",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "returnUrl": "https://pay.nl",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": 20,
                        "action": "PENDING",
                        "phase": "PENDING"
                      },
                      "integration": {
                        "testMode": false
                      },
                      "merchant": {
                        "code": "M-3421-2120",
                        "name": "Company B.V.",
                        "status": "ACTIVE"
                      },
                      "tradeName": {
                        "code": "TM-1740-2882",
                        "name": "TradeName"
                      },
                      "layout": {
                        "code": "LY-1080-1010",
                        "name": "Eigen look & feel",
                        "cssUrl": "https://static.pay.nl/layout/LY-1080-1010/cssfile.css",
                        "icon": "",
                        "supportingColor": "000000",
                        "headerTextColor": "556622",
                        "buttonColor": "56EADD",
                        "buttonTextColor": "CCCCCC"
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/load",
                          "rel": "self",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/qr": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Submit a new WeChat Quick Pay/Alipay barcode on an existing transaction.",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "contents"
                ],
                "properties": {
                  "contents": {
                    "description": "The qr contents as a base64 string.",
                    "type": "string",
                    "example": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAMAAACahl6sAAADAFBM..."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "serviceId",
                    "amount",
                    "returnUrl"
                  ],
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string",
                      "example": "EX-1234-1234-1234"
                    },
                    "serviceId": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "Example description."
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]{1,64}$",
                      "example": "12345XXY0123"
                    },
                    "manualTransferCode": {
                      "description": "Payment reference used to identify manual bank transfers",
                      "type": "string",
                      "example": "0000 0000 0000 0000"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string",
                      "example": "0000000000X00000"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string",
                      "example": "213.126.82.230"
                    },
                    "exchangeUrl": {
                      "description": "The URL where we exchange the status of a transaction.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://demo.pay.nl/exchange.php"
                    },
                    "returnUrl": {
                      "description": "The URL where the payer has to be send to after the payment.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://demo.pay.nl/complete/"
                    },
                    "paymentUrl": {
                      "description": "The payment URL for this transaction",
                      "type": "string",
                      "format": "uri"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "expire": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "created": {
                      "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "modified": {
                      "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "paymentMethod": {
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer",
                          "example": "10"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "string",
                          "example": "10"
                        },
                        "name": {
                          "description": "The name of the payment method.",
                          "type": "string",
                          "example": "ideal"
                        }
                      },
                      "type": "object",
                      "title": "PaymentMethod",
                      "x-readme-ref-name": "PaymentMethod"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "customer": {
                      "properties": {
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "type": {
                          "description": "Either B for business or C for consumer.",
                          "type": "string",
                          "enum": [
                            "B",
                            "C"
                          ]
                        },
                        "ip": {
                          "description": "An ip address",
                          "type": "string",
                          "example": "213.126.82.230"
                        },
                        "birthDate": {
                          "description": "Date of birth as defined in ISO-8601.",
                          "type": "string",
                          "format": "date",
                          "example": "1999-02-15"
                        },
                        "gender": {
                          "description": "The subject's gender. Choose either M for male or F for female.",
                          "type": "string",
                          "example": "M"
                        },
                        "phone": {
                          "description": "The subject's phone number. Optionally prepended with a + and country code",
                          "type": "string",
                          "example": "0031612345678"
                        },
                        "email": {
                          "description": "An email address.",
                          "type": "string",
                          "format": "email",
                          "example": "sandbox@pay.nl"
                        },
                        "language": {
                          "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                          "type": "string",
                          "enum": [
                            "NL",
                            "EN",
                            "DE",
                            "FR",
                            "IT",
                            "ES"
                          ],
                          "example": "NL"
                        },
                        "trust": {
                          "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                          "type": "integer",
                          "maximum": 10,
                          "minimum": -10,
                          "example": -5
                        },
                        "reference": {
                          "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9]{1,64}$",
                          "example": "NL87654321"
                        },
                        "bankAccount": {
                          "required": [
                            "iban",
                            "bic",
                            "owner"
                          ],
                          "properties": {
                            "iban": {
                              "description": "The International Bank Account Number (IBAN).",
                              "type": "string",
                              "example": "NL69INGB0123456789"
                            },
                            "bic": {
                              "description": "Business Identifier Codes (BIC/SWIFT).",
                              "type": "string",
                              "example": "INGBNL2A"
                            },
                            "owner": {
                              "description": "The owner of the bank account.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John Doe"
                            }
                          },
                          "type": "object",
                          "title": "BankAccount",
                          "x-readme-ref-name": "BankAccount"
                        },
                        "company": {
                          "properties": {
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "example": "CompanyName"
                            },
                            "coc": {
                              "description": "Your Chamber of commerce registration number. This format differs per country.",
                              "type": "string",
                              "example": "12345678"
                            },
                            "vat": {
                              "description": "Value added tax identification number (VAT identification number).",
                              "type": "string",
                              "example": "NL807960147B01"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Company",
                          "x-readme-ref-name": "Company"
                        }
                      },
                      "type": "object",
                      "title": "Customer",
                      "x-readme-ref-name": "Customer"
                    },
                    "order": {
                      "properties": {
                        "countryCode": {
                          "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        },
                        "deliveryDate": {
                          "description": "The date of delivery.",
                          "type": "string",
                          "format": "date",
                          "example": "1999-02-15"
                        },
                        "invoiceDate": {
                          "description": "The date of the invoice",
                          "type": "string",
                          "format": "date",
                          "example": "1999-02-15"
                        },
                        "deliveryAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "invoiceAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The product identifier.",
                                "type": "string",
                                "example": "TEST_01"
                              },
                              "description": {
                                "description": "The description of the product.",
                                "type": "string",
                                "example": "Some product description"
                              },
                              "type": {
                                "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                                "type": "string",
                                "enum": [
                                  "shipping",
                                  "article",
                                  "discount",
                                  "rounding",
                                  "handling",
                                  "payment",
                                  "credit",
                                  "giftcard",
                                  "emoney",
                                  "crypto"
                                ]
                              },
                              "price": {
                                "properties": {
                                  "value": {
                                    "description": "The amount in cents.",
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 10
                                  }
                                },
                                "type": "object"
                              },
                              "quantity": {
                                "description": "The quantity.",
                                "type": "number",
                                "format": "float"
                              },
                              "vatCode": {
                                "description": "The VAT code to use.",
                                "type": "string",
                                "enum": [
                                  "N",
                                  "H",
                                  "L"
                                ]
                              }
                            },
                            "type": "object",
                            "title": "Product",
                            "x-readme-ref-name": "Product"
                          }
                        }
                      },
                      "type": "object",
                      "title": "Order",
                      "x-readme-ref-name": "Order"
                    },
                    "stats": {
                      "properties": {
                        "info": {
                          "description": "The used info code which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Campagne 99"
                        },
                        "tool": {
                          "description": "The used tool code which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Google"
                        },
                        "object": {
                          "description": "The object which can be tracked in stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1
                        },
                        "extra1": {
                          "description": "The first free value which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Customer 6985615"
                        },
                        "extra2": {
                          "description": "The second free value which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Invoice 21.3695"
                        },
                        "extra3": {
                          "description": "The third free value which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Shop Amsterdam"
                        },
                        "domainId": {
                          "description": "The ID of the duplicate content URL",
                          "type": "string",
                          "example": "WU-####-####"
                        }
                      },
                      "type": "object",
                      "title": "Stats",
                      "x-readme-ref-name": "Stats"
                    },
                    "type": {
                      "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                      "type": "string",
                      "enum": [
                        "POS",
                        "ECOM",
                        "CIT",
                        "MIT",
                        "MOTO"
                      ]
                    },
                    "transferData": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of the variable to be tracked in the transaction.",
                            "type": "string",
                            "example": "stat1"
                          },
                          "value": {
                            "description": "The value of the variable to be tracked in the transaction.",
                            "type": "string",
                            "example": "ab8827dfc"
                          }
                        },
                        "type": "object",
                        "title": "TransferData",
                        "x-readme-ref-name": "TransferData"
                      },
                      "xml": {
                        "name": "transferData",
                        "wrapped": true
                      }
                    }
                  },
                  "type": "object",
                  "xml": {
                    "name": "transaction"
                  },
                  "title": "Transaction",
                  "x-readme-ref-name": "Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/recurring": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "summary": "Add a recurring transaction. Ask Pay.nl to activate this option for you. When succesful returns followup links in _links property.",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "description": {
                    "description": "Is shown on the statement of the payer.",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "Example description."
                  },
                  "extra1": {
                    "description": "The first free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Customer 6985615"
                  },
                  "extra2": {
                    "description": "The second free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Invoice 21.3695"
                  },
                  "extra3": {
                    "description": "The third free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Shop Amsterdam"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok"
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/refund": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Transaction:Refund",
        "description": "Add a refund for a transaction. You can use the EX code or the order ID to refund the transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "amount": {
                    "required": [
                      "value"
                    ],
                    "properties": {
                      "value": {
                        "description": "The amount in cents.",
                        "type": "integer",
                        "minimum": 1,
                        "example": 10
                      },
                      "currency": {
                        "description": "The currency in ISO-4217 format.",
                        "type": "string",
                        "example": "EUR"
                      }
                    },
                    "type": "object",
                    "title": "Amount",
                    "x-readme-ref-name": "Amount"
                  },
                  "products": {
                    "type": "object",
                    "example": {
                      "TEST_01": 1
                    },
                    "additionalProperties": {
                      "description": "Key is the ID of the product, value is the quantity",
                      "type": "integer"
                    }
                  },
                  "description": {
                    "description": "The description of the refund.",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "The product never got delivered."
                  },
                  "processDate": {
                    "description": "The ISO date at which this entity will be processed",
                    "type": "string",
                    "format": "date-time",
                    "example": "2019-01-01T12:00:00+02:00"
                  },
                  "vatPercentage": {
                    "description": "the vat percentage this refund applies to. Only applicable for amount, not products, and only for AfterPay.",
                    "type": "number",
                    "format": "float",
                    "example": "21.0"
                  },
                  "exchangeUrl": {
                    "description": "The URL where we exchange the status of a transaction.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://demo.pay.nl/exchange.php"
                  }
                },
                "type": "object"
              },
              "examples": {
                "amountRefund": {
                  "summary": "Refund based on an amount",
                  "value": {
                    "amount": {
                      "value": 10,
                      "currency": "EUR"
                    },
                    "products": [],
                    "description": "The product never got delivered",
                    "processDate": "2019-01-01T12:00:00+02:00",
                    "vatPercentage": "21.0",
                    "exchangeUrl": "https://demo.pay.nl/exchange.php"
                  }
                },
                "productRefund": {
                  "summary": "Refund based on a product",
                  "value": {
                    "amount": null,
                    "products": {
                      "TEST_01": 1
                    },
                    "description": "The product never got delivered",
                    "processDate": "2019-01-01T12:00:00+02:00",
                    "vatPercentage": "21.0",
                    "exchangeUrl": "https://demo.pay.nl/exchange.php"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string",
                      "example": "0000000000X00000"
                    },
                    "transactionId": {
                      "type": "string"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "Example description."
                    },
                    "processDate": {
                      "description": "The ISO date at which this entity will be processed",
                      "type": "string",
                      "format": "date-time",
                      "example": "1999-02-15",
                      "nullable": true
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "refundedTransactions": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "amountRefunded": {
                            "required": [
                              "value"
                            ],
                            "properties": {
                              "value": {
                                "description": "The amount in cents.",
                                "type": "integer",
                                "minimum": 1,
                                "example": 10
                              },
                              "currency": {
                                "description": "The currency in ISO-4217 format.",
                                "type": "string",
                                "example": "EUR"
                              }
                            },
                            "type": "object",
                            "title": "Amount",
                            "x-readme-ref-name": "Amount"
                          },
                          "refund": {
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "type": "object"
                          },
                          "createdAt": {
                            "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true,
                            "example": "2016-06-04T08:15:00+01:00"
                          },
                          "createdBy": {
                            "description": "The reference to an account or token whom created the entity",
                            "type": "string",
                            "pattern": "^A(T)?(-\\d{4}){2}$",
                            "readOnly": true,
                            "example": "A-1234-4321",
                            "nullable": false
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    }
                  },
                  "type": "object"
                },
                "examples": {
                  "refund": {
                    "summary": "Successful refund",
                    "value": {
                      "orderId": "1661180545X1ca9c",
                      "transactionId": "EX-5431-7835-5460",
                      "description": "We have refunded € 0,10 by refunding IBAN bankaccount (NL16RABO1822913977) with € 0,10",
                      "processDate": "2022-12-01T14:37:58+01:00",
                      "amount": {
                        "value": 1000,
                        "currency": "EUR"
                      },
                      "amountRefunded": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "refundedTransactions": [
                        {
                          "amountRefunded": {
                            "value": 10,
                            "currency": "EUR"
                          },
                          "refund": {
                            "id": "RF-1234-1234-1234-1234"
                          },
                          "createdAt": "2022-12-01T14:37:58+01:00",
                          "createdBy": "AT-1234-4321"
                        }
                      ],
                      "createdAt": "2022-12-01T14:37:58+01:00",
                      "createdBy": "AT-1234-4321",
                      "_links": [
                        {
                          "href": "/transactions/EX-5431-7835-5460/refund",
                          "rel": "self",
                          "type": "PATCH"
                        },
                        {
                          "href": "/transactions/EX-5431-7835-5460",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "validation": {
                    "summary": "Empty Amount",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "amount: Is empty",
                      "violations": [
                        {
                          "propertyPath": "amount",
                          "message": "Is empty",
                          "code": "PAY-2828"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable Entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Refund too fast",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Refund too fast",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Refund too fast",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/tokenize": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Pay existing transaction by card token only usable with a creditcard profile.",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "id": {
                    "description": "The id of the company's card.",
                    "type": "integer",
                    "example": "VY-####-####-####"
                  },
                  "token": {
                    "description": "The card token of the company.",
                    "type": "string",
                    "example": "abcdefghijklmnopqrstuvwxyz123456"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "required": [
                    "serviceId",
                    "amount",
                    "returnUrl"
                  ],
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string",
                      "example": "EX-1234-1234-1234"
                    },
                    "serviceId": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string",
                      "example": "SL-####-####"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "Example description."
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]{1,64}$",
                      "example": "12345XXY0123"
                    },
                    "manualTransferCode": {
                      "description": "Payment reference used to identify manual bank transfers",
                      "type": "string",
                      "example": "0000 0000 0000 0000"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string",
                      "example": "0000000000X00000"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string",
                      "example": "213.126.82.230"
                    },
                    "exchangeUrl": {
                      "description": "The URL where we exchange the status of a transaction.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://demo.pay.nl/exchange.php"
                    },
                    "returnUrl": {
                      "description": "The URL where the payer has to be send to after the payment.",
                      "type": "string",
                      "format": "uri",
                      "example": "https://demo.pay.nl/complete/"
                    },
                    "paymentUrl": {
                      "description": "The payment URL for this transaction",
                      "type": "string",
                      "format": "uri"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "expire": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "created": {
                      "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "modified": {
                      "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "paymentMethod": {
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer",
                          "example": "10"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "string",
                          "example": "10"
                        },
                        "name": {
                          "description": "The name of the payment method.",
                          "type": "string",
                          "example": "ideal"
                        }
                      },
                      "type": "object",
                      "title": "PaymentMethod",
                      "x-readme-ref-name": "PaymentMethod"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "customer": {
                      "properties": {
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "type": {
                          "description": "Either B for business or C for consumer.",
                          "type": "string",
                          "enum": [
                            "B",
                            "C"
                          ]
                        },
                        "ip": {
                          "description": "An ip address",
                          "type": "string",
                          "example": "213.126.82.230"
                        },
                        "birthDate": {
                          "description": "Date of birth as defined in ISO-8601.",
                          "type": "string",
                          "format": "date",
                          "example": "1999-02-15"
                        },
                        "gender": {
                          "description": "The subject's gender. Choose either M for male or F for female.",
                          "type": "string",
                          "example": "M"
                        },
                        "phone": {
                          "description": "The subject's phone number. Optionally prepended with a + and country code",
                          "type": "string",
                          "example": "0031612345678"
                        },
                        "email": {
                          "description": "An email address.",
                          "type": "string",
                          "format": "email",
                          "example": "sandbox@pay.nl"
                        },
                        "language": {
                          "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                          "type": "string",
                          "enum": [
                            "NL",
                            "EN",
                            "DE",
                            "FR",
                            "IT",
                            "ES"
                          ],
                          "example": "NL"
                        },
                        "trust": {
                          "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                          "type": "integer",
                          "maximum": 10,
                          "minimum": -10,
                          "example": -5
                        },
                        "reference": {
                          "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "pattern": "^[a-zA-Z0-9]{1,64}$",
                          "example": "NL87654321"
                        },
                        "bankAccount": {
                          "required": [
                            "iban",
                            "bic",
                            "owner"
                          ],
                          "properties": {
                            "iban": {
                              "description": "The International Bank Account Number (IBAN).",
                              "type": "string",
                              "example": "NL69INGB0123456789"
                            },
                            "bic": {
                              "description": "Business Identifier Codes (BIC/SWIFT).",
                              "type": "string",
                              "example": "INGBNL2A"
                            },
                            "owner": {
                              "description": "The owner of the bank account.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John Doe"
                            }
                          },
                          "type": "object",
                          "title": "BankAccount",
                          "x-readme-ref-name": "BankAccount"
                        },
                        "company": {
                          "properties": {
                            "name": {
                              "description": "The name of your merchant.",
                              "type": "string",
                              "example": "CompanyName"
                            },
                            "coc": {
                              "description": "Your Chamber of commerce registration number. This format differs per country.",
                              "type": "string",
                              "example": "12345678"
                            },
                            "vat": {
                              "description": "Value added tax identification number (VAT identification number).",
                              "type": "string",
                              "example": "NL807960147B01"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Company",
                          "x-readme-ref-name": "Company"
                        }
                      },
                      "type": "object",
                      "title": "Customer",
                      "x-readme-ref-name": "Customer"
                    },
                    "order": {
                      "properties": {
                        "countryCode": {
                          "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        },
                        "deliveryDate": {
                          "description": "The date of delivery.",
                          "type": "string",
                          "format": "date",
                          "example": "1999-02-15"
                        },
                        "invoiceDate": {
                          "description": "The date of the invoice",
                          "type": "string",
                          "format": "date",
                          "example": "1999-02-15"
                        },
                        "deliveryAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "invoiceAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "products": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The product identifier.",
                                "type": "string",
                                "example": "TEST_01"
                              },
                              "description": {
                                "description": "The description of the product.",
                                "type": "string",
                                "example": "Some product description"
                              },
                              "type": {
                                "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                                "type": "string",
                                "enum": [
                                  "shipping",
                                  "article",
                                  "discount",
                                  "rounding",
                                  "handling",
                                  "payment",
                                  "credit",
                                  "giftcard",
                                  "emoney",
                                  "crypto"
                                ]
                              },
                              "price": {
                                "properties": {
                                  "value": {
                                    "description": "The amount in cents.",
                                    "type": "integer",
                                    "minimum": 1,
                                    "example": 10
                                  }
                                },
                                "type": "object"
                              },
                              "quantity": {
                                "description": "The quantity.",
                                "type": "number",
                                "format": "float"
                              },
                              "vatCode": {
                                "description": "The VAT code to use.",
                                "type": "string",
                                "enum": [
                                  "N",
                                  "H",
                                  "L"
                                ]
                              }
                            },
                            "type": "object",
                            "title": "Product",
                            "x-readme-ref-name": "Product"
                          }
                        }
                      },
                      "type": "object",
                      "title": "Order",
                      "x-readme-ref-name": "Order"
                    },
                    "stats": {
                      "properties": {
                        "info": {
                          "description": "The used info code which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Campagne 99"
                        },
                        "tool": {
                          "description": "The used tool code which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Google"
                        },
                        "object": {
                          "description": "The object which can be tracked in stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1
                        },
                        "extra1": {
                          "description": "The first free value which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Customer 6985615"
                        },
                        "extra2": {
                          "description": "The second free value which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Invoice 21.3695"
                        },
                        "extra3": {
                          "description": "The third free value which can be tracked in the stats.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Shop Amsterdam"
                        },
                        "domainId": {
                          "description": "The ID of the duplicate content URL",
                          "type": "string",
                          "example": "WU-####-####"
                        }
                      },
                      "type": "object",
                      "title": "Stats",
                      "x-readme-ref-name": "Stats"
                    },
                    "type": {
                      "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                      "type": "string",
                      "enum": [
                        "POS",
                        "ECOM",
                        "CIT",
                        "MIT",
                        "MOTO"
                      ]
                    },
                    "transferData": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "name": {
                            "description": "The name of the variable to be tracked in the transaction.",
                            "type": "string",
                            "example": "stat1"
                          },
                          "value": {
                            "description": "The value of the variable to be tracked in the transaction.",
                            "type": "string",
                            "example": "ab8827dfc"
                          }
                        },
                        "type": "object",
                        "title": "TransferData",
                        "x-readme-ref-name": "TransferData"
                      },
                      "xml": {
                        "name": "transferData",
                        "wrapped": true
                      }
                    }
                  },
                  "type": "object",
                  "xml": {
                    "name": "transaction"
                  },
                  "title": "Transaction",
                  "x-readme-ref-name": "Transaction"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "415": {
            "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    },
    "/transactions/{transactionId}/void": {
      "patch": {
        "tags": [
          "Transactions"
        ],
        "summary": "Authorisation:Void",
        "description": "Transactions that have the status authorize (is used by credit card payments or Buy now, Pay later payments) can be voided to reverse the authorisation and to set the the payment state to CANCEL (-90). You can use the EX Code or the order Id to void the transaction",
        "parameters": [
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "schema": {
              "description": "The Id of the transaction.",
              "type": "string",
              "example": "EX-1234-1234-1234"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "id": {
                      "description": "The Id of the transaction.",
                      "type": "string"
                    },
                    "orderId": {
                      "description": "The orderId of the transaction.",
                      "type": "string"
                    },
                    "serviceCode": {
                      "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                      "type": "string"
                    },
                    "description": {
                      "description": "Is shown on the statement of the payer.",
                      "type": "string"
                    },
                    "reference": {
                      "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "An ip address",
                      "type": "string"
                    },
                    "amount": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountConverted": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountPaid": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "status": {
                      "properties": {
                        "code": {
                          "description": "The status code.",
                          "type": "integer"
                        },
                        "action": {
                          "description": "The state in which the transaction resides",
                          "type": "string",
                          "example": "PAID"
                        },
                        "phase": {
                          "description": "The current phase in the transaction state",
                          "type": "string",
                          "example": "APPROVED"
                        }
                      },
                      "type": "object",
                      "title": "Status",
                      "x-readme-ref-name": "Status"
                    },
                    "paymentData": {
                      "properties": {
                        "method": {
                          "description": "Payment method of the transaction.",
                          "type": "string"
                        },
                        "customerKey": {
                          "description": "Customer key of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerId": {
                          "description": "Customer id of the customer from the transaction.",
                          "type": "string"
                        },
                        "customerName": {
                          "description": "Customer name of the customer from the transaction.",
                          "type": "string"
                        },
                        "ipAddress": {
                          "description": "Ip address of the customer from the transaction.",
                          "type": "string"
                        },
                        "secureStatus": {
                          "description": "Secure status of the transaction.",
                          "type": "boolean"
                        },
                        "paymentVerificationMethod": {
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentData",
                      "x-readme-ref-name": "TransactionStatusPaymentData"
                    },
                    "paymentMethod": {
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        },
                        "subId": {
                          "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                          "type": "integer"
                        }
                      },
                      "type": "object",
                      "title": "TransactionStatusPaymentMethod",
                      "x-readme-ref-name": "TransactionStatusPaymentMethod"
                    },
                    "integration": {
                      "properties": {
                        "testMode": {
                          "description": "Indicates if the service is in testmode or not, possible values: false or true",
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Integration",
                      "x-readme-ref-name": "Integration"
                    },
                    "expiredAt": {
                      "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "nullable": true
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TransactionStatus",
                  "x-readme-ref-name": "TransactionStatus"
                },
                "examples": {
                  "success": {
                    "summary": "Transaction void",
                    "value": {
                      "id": "EX-0171-7899-4460",
                      "orderId": "1234567891X33ce1",
                      "serviceCode": "SL-4878-2340",
                      "description": "Example description",
                      "reference": "12345XXY0123",
                      "ipAddress": "86.83.126.161",
                      "amount": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountConverted": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "amountPaid": {
                        "value": 0,
                        "currency": "EUR"
                      },
                      "amountRefunded": {
                        "value": 10,
                        "currency": "EUR"
                      },
                      "status": {
                        "code": -90,
                        "action": "CANCEL",
                        "phase": "CANCELLED"
                      },
                      "paymentData": {
                        "method": "iban",
                        "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
                        "customerId": "NL91ABNA0417164300",
                        "customerName": "John Doe",
                        "ipAddress": "127.0.0.1",
                        "secureStatus": false
                      },
                      "paymentMethod": {
                        "id": 10,
                        "subId": 3
                      },
                      "integration": {
                        "testMode": false
                      },
                      "expiresAt": "2021-09-04T12:14:01+02:00",
                      "createdAt": "2021-09-04T12:14:01+02:00",
                      "createdBy": "AT-0073-4553",
                      "modifiedAt": null,
                      "modifiedBy": null,
                      "deletedAt": null,
                      "deletedBy": null,
                      "_links": [
                        {
                          "href": "/transactions/EX-0171-7899-4460/void",
                          "rel": "self",
                          "type": "PATCH"
                        },
                        {
                          "href": "/transactions/EX-0171-7899-4460",
                          "rel": "details",
                          "type": "GET"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Supplied credentials are invalid"
          },
          "403": {
            "description": "Forbidden. Supplied credentials have no rights"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Used HTTP method is not allowed"
          },
          "406": {
            "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
          },
          "422": {
            "description": "Unprocessable entity, see response body for more information",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "detail": {
                      "type": "string"
                    },
                    "violations": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "propertyPath": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "code": {
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "title": "Violation",
                        "x-readme-ref-name": "Violation"
                      }
                    }
                  },
                  "type": "object",
                  "title": "Error",
                  "x-readme-ref-name": "Error"
                },
                "examples": {
                  "error": {
                    "summary": "Unprocessable",
                    "value": {
                      "type": "https://developer.pay.nl/docs/error-codes",
                      "title": "An error occurred",
                      "detail": "Unable to complete request",
                      "violations": [
                        {
                          "propertyPath": null,
                          "message": "Unable to complete request",
                          "code": "PAY-3000"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit reached."
          },
          "500": {
            "description": "An internal error occurred"
          }
        },
        "security": [
          {
            "basicAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "AcceptanceDocument": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "Code of the acceptance document.",
                "type": "string",
                "example": "D-1234-1234"
              },
              "type": {
                "description": "Type of the acceptance document.",
                "type": "string",
                "example": "identification"
              },
              "status": {
                "description": "Status of the acceptance document.",
                "type": "string",
                "example": "UPLOADED"
              }
            },
            "type": "object",
            "title": "Document",
            "x-readme-ref-name": "Document"
          },
          {
            "required": [
              "code",
              "type",
              "status",
              "translations",
              "createdAt",
              "createdBy",
              "modifiedAt",
              "modifiedBy",
              "acceptedAt",
              "deletedAt",
              "deletedBy"
            ],
            "properties": {
              "translations": {
                "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                "type": "object",
                "uniqueItems": true,
                "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                "nullable": true,
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "acceptedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object"
          }
        ],
        "title": "AcceptanceDocument",
        "x-readme-ref-name": "AcceptanceDocument"
      },
      "Account": {
        "required": [
          "code",
          "email",
          "firstName",
          "lastName",
          "language",
          "nationality",
          "dateofBirth",
          "phone",
          "merchants",
          "documents"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "A-1234-4321"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "type": "string",
            "example": "John"
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "type": "string",
            "example": "Doe"
          },
          "language": {
            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
            "type": "string",
            "example": "NL"
          },
          "nationality": {
            "description": "Nationality of the person.",
            "type": "string",
            "example": "NL"
          },
          "dateOfBirth": {
            "description": "Date of birth of the person.",
            "type": "string",
            "example": "1999-12-12"
          },
          "phone": {
            "description": "The subject's phone number. Optionally prepended with a + and country code",
            "type": "string",
            "example": "0031612345678"
          },
          "visitAddress": {
            "required": [
              "code",
              "streetName",
              "zipCode",
              "city",
              "countryCode"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Location",
            "x-readme-ref-name": "Location"
          },
          "merchants": {
            "type": "array",
            "items": {
              "required": [
                "code",
                "name",
                "licenseCode",
                "package",
                "rights",
                "accountManager"
              ],
              "properties": {
                "code": {
                  "description": "The merchant id of your company starting with M.",
                  "type": "string",
                  "example": "M-1234-4321"
                },
                "name": {
                  "description": "The name of your merchant.",
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 2,
                  "example": "CompanyName"
                },
                "licenseCode": {
                  "description": "License code.",
                  "type": "string",
                  "example": "AL-1234-4321"
                },
                "package": {
                  "type": "string"
                },
                "rights": {
                  "type": "string",
                  "enum": [
                    "ALL",
                    "SPECIFIED"
                  ]
                },
                "accountManager": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "documents": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "properties": {
                    "code": {
                      "description": "Code of the acceptance document.",
                      "type": "string",
                      "example": "D-1234-1234"
                    },
                    "type": {
                      "description": "Type of the acceptance document.",
                      "type": "string",
                      "example": "identification"
                    },
                    "status": {
                      "description": "Status of the acceptance document.",
                      "type": "string",
                      "example": "UPLOADED"
                    }
                  },
                  "type": "object",
                  "title": "Document",
                  "x-readme-ref-name": "Document"
                },
                {
                  "required": [
                    "code",
                    "type",
                    "status",
                    "translations",
                    "createdAt",
                    "createdBy",
                    "modifiedAt",
                    "modifiedBy",
                    "acceptedAt",
                    "deletedAt",
                    "deletedBy"
                  ],
                  "properties": {
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "acceptedAt": {
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object"
                }
              ],
              "title": "AcceptanceDocument",
              "x-readme-ref-name": "AcceptanceDocument"
            }
          }
        },
        "type": "object",
        "title": "Account",
        "x-readme-ref-name": "Account"
      },
      "AccountCompliance": {
        "type": "object",
        "title": "AccountCompliance",
        "x-readme-ref-name": "AccountCompliance"
      },
      "AccountRelation": {
        "required": [
          "email"
        ],
        "properties": {
          "code": {
            "description": "The account code",
            "type": "string",
            "example": "A-1234-4321"
          },
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "John"
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Doe"
          },
          "language": {
            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
            "type": "string",
            "maxLength": 3,
            "minLength": 1,
            "example": "NL"
          },
          "merchants": {
            "description": "A list of connected merchants",
            "type": "array",
            "items": {
              "properties": {
                "accountLinkCode": {
                  "description": "The code that links an account to a merchant",
                  "type": "string",
                  "example": "AL-####-####"
                },
                "merchantCode": {
                  "description": "The merchant id of your company starting with M.",
                  "type": "string",
                  "example": "M-####-####"
                },
                "companyName": {
                  "description": "The name of your merchant.",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "example": "CompanyName"
                },
                "package": {
                  "description": "A Pay package.",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "example": "pioneer"
                },
                "allRights": {
                  "description": "The account has full access to this merchant",
                  "type": "string",
                  "format": "bool",
                  "example": "FALSE"
                },
                "accountManager": {
                  "description": "The account manager for this merchant",
                  "type": "string",
                  "maxLength": 255,
                  "minLength": 1,
                  "example": "John Smith"
                }
              },
              "type": "object",
              "title": "AccountRelationMerchant",
              "x-readme-ref-name": "AccountRelationMerchant"
            }
          }
        },
        "type": "object",
        "title": "AccountRelation",
        "x-readme-ref-name": "AccountRelation"
      },
      "AccountRelationMerchant": {
        "properties": {
          "accountLinkCode": {
            "description": "The code that links an account to a merchant",
            "type": "string",
            "example": "AL-####-####"
          },
          "merchantCode": {
            "description": "The merchant id of your company starting with M.",
            "type": "string",
            "example": "M-####-####"
          },
          "companyName": {
            "description": "The name of your merchant.",
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": "CompanyName"
          },
          "package": {
            "description": "A Pay package.",
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": "pioneer"
          },
          "allRights": {
            "description": "The account has full access to this merchant",
            "type": "string",
            "format": "bool",
            "example": "FALSE"
          },
          "accountManager": {
            "description": "The account manager for this merchant",
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "example": "John Smith"
          }
        },
        "type": "object",
        "title": "AccountRelationMerchant",
        "x-readme-ref-name": "AccountRelationMerchant"
      },
      "Address": {
        "properties": {
          "code": {
            "type": "string"
          },
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "John"
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Doe"
          },
          "streetName": {
            "description": "The name of the street",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Visitlane"
          },
          "streetNumber": {
            "description": "The street number",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "13"
          },
          "streetNumberExtension": {
            "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "b1"
          },
          "zipCode": {
            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "example": "5678CD"
          },
          "city": {
            "description": "The name of a city",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Amsterdam"
          },
          "regionCode": {
            "description": "Region code (iso-3166-2)",
            "type": "string",
            "example": "ZH"
          },
          "countryCode": {
            "description": "The country code consisting of 2 uppercase letters",
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "example": "NL"
          }
        },
        "type": "object",
        "title": "Address",
        "x-readme-ref-name": "Address"
      },
      "Amount": {
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "description": "The amount in cents.",
            "type": "integer",
            "minimum": 1,
            "example": 10
          },
          "currency": {
            "description": "The currency in ISO-4217 format.",
            "type": "string",
            "example": "EUR"
          }
        },
        "type": "object",
        "title": "Amount",
        "x-readme-ref-name": "Amount"
      },
      "AuthenticationToken": {
        "required": [
          "code",
          "secret",
          "name",
          "merchant",
          "createdAt",
          "createdBy",
          "modifiedAt",
          "modifiedBy",
          "deletedAt",
          "deletedBy"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "AT-1234-4321"
          },
          "secret": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "merchant": {
            "required": [
              "code",
              "name",
              "status"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              }
            },
            "type": "object",
            "title": "MerchantMinimal",
            "x-readme-ref-name": "MerchantMinimal"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "AuthenticationToken",
        "x-readme-ref-name": "AuthenticationToken"
      },
      "Authorisationgroup": {
        "properties": {
          "code": {
            "description": "Authorisation group identifier",
            "type": "string",
            "example": "AG-1234-4321"
          },
          "name": {
            "description": "Name of the authorisation group",
            "type": "string",
            "example": "John Doe"
          },
          "description": {
            "description": "Description of the authorisation group",
            "type": "string",
            "example": "John Doe of test company"
          },
          "purpose": {
            "properties": {
              "account": {
                "type": "boolean",
                "example": true
              },
              "token": {
                "type": "boolean",
                "example": true
              },
              "relation": {
                "type": "boolean",
                "example": true
              },
              "merchant": {
                "type": "boolean",
                "example": true
              }
            },
            "type": "object"
          },
          "public": {
            "description": "Indicate if the authorisation group is public",
            "type": "boolean",
            "example": true
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Authorisationgroup",
        "x-readme-ref-name": "Authorisationgroup"
      },
      "Balance": {
        "required": [
          "balance",
          "invoices",
          "costs",
          "nextClearing",
          "lastClearing"
        ],
        "properties": {
          "balance": {
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "invoices": {
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          },
          "costs": {
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          },
          "availableBalance": {
            "required": [
              "amount",
              "currency"
            ],
            "properties": {
              "amount": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              },
              "turnoverGroups": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "integer"
                    },
                    "currency": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object",
            "nullable": true
          },
          "nextClearing": {
            "required": [
              "state",
              "date",
              "amount",
              "currency"
            ],
            "properties": {
              "state": {
                "type": "string"
              },
              "date": {
                "type": "integer",
                "format": "date",
                "nullable": true
              },
              "amount": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "lastClearing": {
            "required": [
              "date",
              "amount",
              "currency"
            ],
            "properties": {
              "date": {
                "type": "integer",
                "format": "date",
                "nullable": true
              },
              "amount": {
                "type": "integer"
              },
              "currency": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object",
        "title": "Balance",
        "x-readme-ref-name": "Balance"
      },
      "BankAccount": {
        "required": [
          "iban",
          "bic",
          "owner"
        ],
        "properties": {
          "iban": {
            "description": "The International Bank Account Number (IBAN).",
            "type": "string",
            "example": "NL69INGB0123456789"
          },
          "bic": {
            "description": "Business Identifier Codes (BIC/SWIFT).",
            "type": "string",
            "example": "INGBNL2A"
          },
          "owner": {
            "description": "The owner of the bank account.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "John Doe"
          }
        },
        "type": "object",
        "title": "BankAccount",
        "x-readme-ref-name": "BankAccount"
      },
      "BillingDataGroup": {
        "required": [
          "id",
          "name",
          "translations",
          "billingLineTypes",
          "createdAt",
          "modifiedAt",
          "deletedAt"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "billingLineTypes": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "translations",
                "createdAt",
                "modifiedAt",
                "deletedAt"
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "translations": {
                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                  "type": "object",
                  "uniqueItems": true,
                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                  "nullable": true,
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "LineType",
              "x-readme-ref-name": "LineType"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "BillingDataGroup",
        "x-readme-ref-name": "BillingDataGroup"
      },
      "BillingUnitType": {
        "required": [
          "id",
          "name",
          "createdAt",
          "modifiedAt",
          "deletedAt"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "BillingUnitType",
        "x-readme-ref-name": "BillingUnitType"
      },
      "Card": {
        "properties": {
          "id": {
            "description": "The identifier of the card scheme used.",
            "type": "integer",
            "example": "1009"
          },
          "name": {
            "description": "The name of the card scheme used.",
            "type": "string",
            "example": "Maestro"
          },
          "expireMonth": {
            "description": "The month in which the card expires",
            "type": "string",
            "example": "01"
          },
          "expireYear": {
            "description": "THe year in which the card expires",
            "type": "string",
            "example": "2023"
          },
          "pin": {
            "description": "The card pincode",
            "type": "string",
            "example": "12345"
          },
          "type": {
            "description": "The type of card",
            "type": "string",
            "enum": [
              "POS",
              "ECOM",
              "CIT",
              "MIT",
              "MOTO",
              "WALLET"
            ]
          }
        },
        "type": "object",
        "title": "Card",
        "x-readme-ref-name": "Card"
      },
      "Category": {
        "properties": {
          "code": {
            "description": "The category (code) identifier",
            "type": "string",
            "maxLength": 40,
            "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
            "example": "CY-1234-4321"
          },
          "name": {
            "description": "The category name.",
            "type": "string",
            "example": "Digitale diensten gambling (kansspelen)"
          },
          "description": {
            "description": "The category's description.",
            "type": "string",
            "example": "Kansspelen"
          },
          "sequence": {
            "description": "The sequence of the category.",
            "type": "integer"
          },
          "available": {
            "description": "The category's availability.",
            "type": "boolean"
          },
          "initialMCC": {
            "description": "The initial MCC of the category.",
            "type": "integer",
            "example": "General Contractors-Residential and Commercial",
            "nullable": true
          },
          "initialRiskCategory": {
            "description": "The initial risk category of the category.",
            "type": "string",
            "example": "Low risk"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "paymentMethods": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "description": "The payment profile identifier.",
                  "type": "integer",
                  "example": "1630"
                },
                "name": {
                  "description": "The name of the payment profile.",
                  "type": "string",
                  "example": "Pin (Maestro)"
                }
              },
              "type": "object"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Category",
        "x-readme-ref-name": "Category"
      },
      "ClearingDataGroup": {
        "required": [
          "id",
          "name",
          "translations",
          "clearingLineTypes",
          "createdAt",
          "modifiedAt",
          "deletedAt"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "clearingLineTypes": {
            "type": "array",
            "items": {
              "required": [
                "id",
                "name",
                "translations",
                "createdAt",
                "modifiedAt",
                "deletedAt"
              ],
              "properties": {
                "id": {
                  "type": "integer"
                },
                "name": {
                  "type": "string"
                },
                "translations": {
                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                  "type": "object",
                  "uniqueItems": true,
                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                  "nullable": true,
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "LineType",
              "x-readme-ref-name": "LineType"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "ClearingDataGroup",
        "x-readme-ref-name": "ClearingDataGroup"
      },
      "ClearingLine": {
        "required": [
          "code",
          "merchant",
          "turnoverGroup",
          "clearingLineType",
          "unitType",
          "amount",
          "valueDate",
          "clearingDate",
          "settlementDate",
          "processedDate",
          "state",
          "clearingID"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "merchant": {
            "required": [
              "code",
              "contractPackage"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "contractPackage": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "turnoverGroup": {
            "required": [
              "code",
              "name"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          },
          "clearingLineType": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          },
          "unitType": {
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object",
            "nullable": true
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "valueDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "clearingDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "settlementDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "processedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "state": {
            "type": "string",
            "enum": [
              "PROCESSED",
              "CLEARED",
              "SETTLED"
            ]
          },
          "clearingID": {
            "type": "string",
            "nullable": true
          }
        },
        "type": "object",
        "title": "ClearingLine",
        "x-readme-ref-name": "ClearingLine"
      },
      "Company": {
        "properties": {
          "name": {
            "description": "The name of your merchant.",
            "type": "string",
            "example": "CompanyName"
          },
          "coc": {
            "description": "Your Chamber of commerce registration number. This format differs per country.",
            "type": "string",
            "example": "12345678"
          },
          "vat": {
            "description": "Value added tax identification number (VAT identification number).",
            "type": "string",
            "example": "NL807960147B01"
          },
          "countryCode": {
            "description": "The country code consisting of 2 uppercase letters",
            "type": "string",
            "example": "NL"
          }
        },
        "type": "object",
        "title": "Company",
        "x-readme-ref-name": "Company"
      },
      "CompanyCard": {
        "properties": {
          "id": {
            "description": "The id of the company's card.",
            "type": "integer",
            "example": "VY-####-####-####"
          },
          "token": {
            "description": "The card token of the company.",
            "type": "string",
            "example": "abcdefghijklmnopqrstuvwxyz123456"
          }
        },
        "type": "object",
        "title": "CompanyCard",
        "x-readme-ref-name": "CompanyCard"
      },
      "CompanyType": {
        "properties": {
          "id": {
            "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
            "type": "integer"
          },
          "name": {
            "description": "Name of the company type.",
            "type": "string"
          },
          "countryCode": {
            "description": "Country where company type exists for.",
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "CompanyType",
        "x-readme-ref-name": "CompanyType"
      },
      "ComplianceData": {
        "properties": {
          "pep": {
            "description": "Indicate if the person is a Politically Exposed Person (PEP).",
            "type": "boolean",
            "example": "true"
          },
          "pepDescription": {
            "description": "Describe in your own words why this person is a PEP.",
            "type": "string",
            "example": "The person is active as an alderman in the municipality where he lives."
          },
          "dateOfBirth": {
            "description": "Date of birth of the person.",
            "type": "string",
            "format": "date-time",
            "example": "1999-12-12"
          },
          "nationality": {
            "description": "Nationality of the person.",
            "type": "string",
            "example": "NL"
          },
          "idDocumentNumber": {
            "description": "The id document number of the person",
            "type": "string",
            "example": ""
          }
        },
        "type": "object",
        "title": "ComplianceData",
        "x-readme-ref-name": "ComplianceData"
      },
      "ComplianceDataPerson": {
        "allOf": [
          {
            "properties": {
              "pep": {
                "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                "type": "boolean",
                "example": "true"
              },
              "pepDescription": {
                "description": "Describe in your own words why this person is a PEP.",
                "type": "string",
                "example": "The person is active as an alderman in the municipality where he lives."
              },
              "dateOfBirth": {
                "description": "Date of birth of the person.",
                "type": "string",
                "format": "date-time",
                "example": "1999-12-12"
              },
              "nationality": {
                "description": "Nationality of the person.",
                "type": "string",
                "example": "NL"
              },
              "idDocumentNumber": {
                "description": "The id document number of the person",
                "type": "string",
                "example": ""
              }
            },
            "type": "object",
            "title": "ComplianceData",
            "x-readme-ref-name": "ComplianceData"
          },
          {
            "properties": {
              "ubo": {
                "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                "type": "string",
                "enum": [
                  "no",
                  "direct",
                  "indirect",
                  "pseudo"
                ],
                "example": "direct"
              },
              "uboPercentage": {
                "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                "type": "integer",
                "example": "25"
              },
              "authorizedToSign": {
                "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                "type": "string",
                "enum": [
                  "no",
                  "alone",
                  "shared"
                ],
                "example": "shared"
              },
              "relationshipDescription": {
                "description": "Describe in your own words the relation the person has with this company.",
                "type": "string",
                "example": "John Doe of test company"
              }
            },
            "type": "object"
          }
        ],
        "title": "ComplianceDataPerson",
        "x-readme-ref-name": "ComplianceDataPerson"
      },
      "ComplianceDataPersonPartial": {
        "allOf": [
          {
            "allOf": [
              {
                "properties": {
                  "pep": {
                    "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                    "type": "boolean",
                    "example": "true"
                  },
                  "pepDescription": {
                    "description": "Describe in your own words why this person is a PEP.",
                    "type": "string",
                    "example": "The person is active as an alderman in the municipality where he lives."
                  },
                  "dateOfBirth": {
                    "description": "Date of birth of the person.",
                    "type": "string",
                    "format": "date-time",
                    "example": "1999-12-12"
                  },
                  "nationality": {
                    "description": "Nationality of the person.",
                    "type": "string",
                    "example": "NL"
                  },
                  "idDocumentNumber": {
                    "description": "The id document number of the person",
                    "type": "string",
                    "example": ""
                  }
                },
                "type": "object",
                "title": "ComplianceData",
                "x-readme-ref-name": "ComplianceData"
              },
              {
                "properties": {
                  "ubo": {
                    "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                    "type": "string",
                    "enum": [
                      "no",
                      "direct",
                      "indirect",
                      "pseudo"
                    ],
                    "example": "direct"
                  },
                  "uboPercentage": {
                    "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                    "type": "integer",
                    "example": "25"
                  },
                  "authorizedToSign": {
                    "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                    "type": "string",
                    "enum": [
                      "no",
                      "alone",
                      "shared"
                    ],
                    "example": "shared"
                  },
                  "relationshipDescription": {
                    "description": "Describe in your own words the relation the person has with this company.",
                    "type": "string",
                    "example": "John Doe of test company"
                  }
                },
                "type": "object"
              }
            ],
            "title": "ComplianceDataPerson",
            "x-readme-ref-name": "ComplianceDataPerson"
          },
          {
            "properties": {
              "pep": {
                "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                "type": "boolean",
                "example": "true"
              },
              "pepDescription": {
                "description": "Describe in your own words why this person is a PEP.",
                "type": "string",
                "example": "The person is active as an alderman in the municipality where he lives."
              },
              "dateOfBirth": {
                "description": "Date of birth of the person.",
                "type": "string",
                "format": "date-time",
                "example": "1999-12-12"
              },
              "nationality": {
                "description": "Nationality of the person.",
                "type": "string",
                "example": "NL"
              },
              "idDocumentNumber": {
                "description": "The id document number of the person",
                "type": "string",
                "example": ""
              }
            },
            "type": "object",
            "title": "ComplianceData",
            "x-readme-ref-name": "ComplianceData"
          },
          {
            "properties": {
              "authorizedToSign": {
                "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                "type": "string",
                "enum": [
                  "no",
                  "alone",
                  "shared"
                ],
                "example": "shared"
              },
              "pep": {
                "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                "type": "boolean",
                "example": "true"
              },
              "pepDescription": {
                "description": "Describe in your own words why this person is a PEP.",
                "type": "string",
                "example": "The person is active as an alderman in the municipality where he lives."
              },
              "ubo": {
                "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                "type": "string",
                "enum": [
                  "no",
                  "direct",
                  "indirect",
                  "pseudo"
                ],
                "example": "direct"
              },
              "uboPercentage": {
                "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                "type": "integer",
                "example": "25"
              },
              "relationshipDescription": {
                "description": "Describe in your own words the relation the person has with this company.",
                "type": "string",
                "example": "John Doe of test company"
              }
            }
          }
        ],
        "title": "ComplianceDataPersonPartial",
        "x-readme-ref-name": "ComplianceDataPersonPartial"
      },
      "ContactMethod": {
        "properties": {
          "code": {
            "description": "The contact method ID of your company starting with CM.",
            "type": "string",
            "example": "CM-1234-4321"
          },
          "type": {
            "description": "The type of contact method.",
            "type": "string",
            "enum": [
              "email",
              "email_support",
              "phone",
              "phone_helpdesk",
              "phone_off_hours",
              "url",
              "email_msnskype"
            ],
            "example": "The type of contact method."
          },
          "value": {
            "description": "The value of the contact method.",
            "type": "string",
            "example": "088-88 666 22"
          },
          "description": {
            "description": "The description of the contact method.",
            "type": "string"
          },
          "public": {
            "description": "Is the contact method public accessible",
            "type": "boolean",
            "example": "true"
          },
          "notifications": {
            "description": "Does the contact method needs to receive notifications",
            "type": "boolean",
            "example": "false"
          }
        },
        "type": "object",
        "title": "ContactMethod",
        "x-readme-ref-name": "ContactMethod"
      },
      "Country": {
        "properties": {
          "code": {
            "description": "Code of the country",
            "type": "string"
          },
          "isoNumber": {
            "description": "Iso number of the country",
            "type": "integer"
          },
          "name": {
            "description": "Name of the country",
            "type": "string"
          },
          "nationality": {
            "type": "string",
            "nullable": true
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "locales": {
            "description": "Country locales",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "phonePrefix": {
            "description": "International phone prefix of country",
            "type": "integer"
          },
          "signupAllowed": {
            "description": "Sign up allowed",
            "type": "boolean"
          },
          "inEU": {
            "description": "Country is in EU",
            "type": "boolean"
          },
          "highRisk": {
            "description": "High Risk country",
            "type": "boolean"
          },
          "ibanLength": {
            "description": "iBan lenght of country",
            "type": "integer"
          },
          "image": {
            "description": "Image of the country flag",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Country",
        "x-readme-ref-name": "Country"
      },
      "Currency": {
        "properties": {
          "id": {
            "description": "Id of the currency.",
            "type": "integer"
          },
          "tag": {
            "description": "The currency in ISO-4217 format.",
            "type": "string",
            "example": "EUR"
          },
          "name": {
            "description": "Full name of the currency.",
            "type": "string",
            "example": "Euro."
          },
          "isoCurrencyNumber": {
            "description": "ISO number of the currency.",
            "type": "integer"
          },
          "symbol": {
            "description": "Symbol of the currency.",
            "type": "string"
          },
          "exchangeRate": {
            "description": "Exchange rate of the currency.",
            "type": "number"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Currency",
        "x-readme-ref-name": "Currency"
      },
      "Customer": {
        "properties": {
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "John"
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Doe"
          },
          "type": {
            "description": "Either B for business or C for consumer.",
            "type": "string",
            "enum": [
              "B",
              "C"
            ]
          },
          "ip": {
            "description": "An ip address",
            "type": "string",
            "example": "213.126.82.230"
          },
          "birthDate": {
            "description": "Date of birth as defined in ISO-8601.",
            "type": "string",
            "format": "date",
            "example": "1999-02-15"
          },
          "gender": {
            "description": "The subject's gender. Choose either M for male or F for female.",
            "type": "string",
            "example": "M"
          },
          "phone": {
            "description": "The subject's phone number. Optionally prepended with a + and country code",
            "type": "string",
            "example": "0031612345678"
          },
          "email": {
            "description": "An email address.",
            "type": "string",
            "format": "email",
            "example": "sandbox@pay.nl"
          },
          "language": {
            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
            "type": "string",
            "enum": [
              "NL",
              "EN",
              "DE",
              "FR",
              "IT",
              "ES"
            ],
            "example": "NL"
          },
          "trust": {
            "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
            "type": "integer",
            "maximum": 10,
            "minimum": -10,
            "example": -5
          },
          "reference": {
            "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]{1,64}$",
            "example": "NL87654321"
          },
          "bankAccount": {
            "required": [
              "iban",
              "bic",
              "owner"
            ],
            "properties": {
              "iban": {
                "description": "The International Bank Account Number (IBAN).",
                "type": "string",
                "example": "NL69INGB0123456789"
              },
              "bic": {
                "description": "Business Identifier Codes (BIC/SWIFT).",
                "type": "string",
                "example": "INGBNL2A"
              },
              "owner": {
                "description": "The owner of the bank account.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John Doe"
              }
            },
            "type": "object",
            "title": "BankAccount",
            "x-readme-ref-name": "BankAccount"
          },
          "company": {
            "properties": {
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "example": "CompanyName"
              },
              "coc": {
                "description": "Your Chamber of commerce registration number. This format differs per country.",
                "type": "string",
                "example": "12345678"
              },
              "vat": {
                "description": "Value added tax identification number (VAT identification number).",
                "type": "string",
                "example": "NL807960147B01"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Company",
            "x-readme-ref-name": "Company"
          }
        },
        "type": "object",
        "title": "Customer",
        "x-readme-ref-name": "Customer"
      },
      "Directdebit": {
        "properties": {
          "id": {
            "description": "The direct debit identifier.",
            "type": "string",
            "example": "IL-####-####-####"
          },
          "paymentSessionId": {
            "description": "The payment session identifier.",
            "type": "string",
            "example": 100000000
          },
          "processDate": {
            "description": "The ISO date at which this entity will be processed",
            "type": "string",
            "format": "date-time",
            "example": "2019-01-01T12:00:00+02:00"
          },
          "type": {
            "description": "The type of direct debit. One of: single, mandate, recurring.",
            "type": "string",
            "example": "single"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "declined": {
            "properties": {
              "code": {
                "description": "The status code.",
                "type": "integer"
              },
              "action": {
                "description": "The state in which the transaction resides",
                "type": "string",
                "example": "PAID"
              },
              "phase": {
                "description": "The current phase in the transaction state",
                "type": "string",
                "example": "APPROVED"
              }
            },
            "type": "object",
            "title": "Status",
            "x-readme-ref-name": "Status"
          },
          "status": {
            "properties": {
              "code": {
                "description": "The status code.",
                "type": "integer"
              },
              "action": {
                "description": "The state in which the transaction resides",
                "type": "string",
                "example": "PAID"
              },
              "phase": {
                "description": "The current phase in the transaction state",
                "type": "string",
                "example": "APPROVED"
              }
            },
            "type": "object",
            "title": "Status",
            "x-readme-ref-name": "Status"
          },
          "description": {
            "description": "The description of the direct debit.",
            "type": "string",
            "maxLength": 32
          },
          "bankAccount": {
            "required": [
              "iban",
              "bic",
              "owner"
            ],
            "properties": {
              "iban": {
                "description": "The International Bank Account Number (IBAN).",
                "type": "string",
                "example": "NL69INGB0123456789"
              },
              "bic": {
                "description": "Business Identifier Codes (BIC/SWIFT).",
                "type": "string",
                "example": "INGBNL2A"
              },
              "owner": {
                "description": "The owner of the bank account.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John Doe"
              }
            },
            "type": "object",
            "title": "BankAccount",
            "x-readme-ref-name": "BankAccount"
          },
          "exchangeUrl": {
            "description": "The exchange URL to call.",
            "type": "string",
            "format": "uri"
          }
        },
        "type": "object",
        "title": "Directdebit",
        "x-readme-ref-name": "Directdebit"
      },
      "Document": {
        "properties": {
          "code": {
            "description": "Code of the acceptance document.",
            "type": "string",
            "example": "D-1234-1234"
          },
          "type": {
            "description": "Type of the acceptance document.",
            "type": "string",
            "example": "identification"
          },
          "status": {
            "description": "Status of the acceptance document.",
            "type": "string",
            "example": "UPLOADED"
          }
        },
        "type": "object",
        "title": "Document",
        "x-readme-ref-name": "Document"
      },
      "DocumentEmbedded": {
        "properties": {
          "code": {
            "description": "Code of the acceptance document.",
            "type": "string",
            "example": "D-1234-1234"
          },
          "name": {
            "description": "Name of the document.",
            "type": "string",
            "example": "Agreemnent"
          },
          "description": {
            "description": "Description of the type of document.",
            "type": "string",
            "example": "This is a merchant agreement."
          },
          "files": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "description": "File name",
                  "type": "string",
                  "example": "agreement.pdf"
                },
                "mimeType": {
                  "description": "Mime-type of the file.",
                  "type": "string",
                  "example": "application/pdf"
                },
                "size": {
                  "description": "Amount of bytes",
                  "type": "integer",
                  "example": 518721
                },
                "contents": {
                  "description": "Base64 encoded file.",
                  "type": "string",
                  "example": "cGhwa2Fib3V0ZXI="
                }
              },
              "type": "object",
              "title": "FileEmbedded",
              "x-readme-ref-name": "FileEmbedded"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "DocumentEmbedded",
        "x-readme-ref-name": "DocumentEmbedded"
      },
      "FileEmbedded": {
        "properties": {
          "name": {
            "description": "File name",
            "type": "string",
            "example": "agreement.pdf"
          },
          "mimeType": {
            "description": "Mime-type of the file.",
            "type": "string",
            "example": "application/pdf"
          },
          "size": {
            "description": "Amount of bytes",
            "type": "integer",
            "example": 518721
          },
          "contents": {
            "description": "Base64 encoded file.",
            "type": "string",
            "example": "cGhwa2Fib3V0ZXI="
          }
        },
        "type": "object",
        "title": "FileEmbedded",
        "x-readme-ref-name": "FileEmbedded"
      },
      "FinanceTransactionLine": {
        "properties": {
          "code": {
            "type": "string"
          },
          "type": {
            "description": "The type of invoice line. Can either be SELL or BUY.",
            "type": "string",
            "enum": [
              "BUY",
              "SELL"
            ]
          },
          "unitType": {
            "description": "The specification for the unit's type",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "description": "The unit type ID",
                "type": "integer",
                "example": "12"
              },
              "name": {
                "description": "The unit type's name",
                "type": "string",
                "example": "percentage"
              }
            },
            "type": "object",
            "nullable": true
          },
          "amount": {
            "type": "number"
          },
          "costs": {
            "description": "The costs revue per financial transaction with the corresponding currency",
            "properties": {
              "revenue": {
                "description": "The revenue for the costs as a decimal (/float)",
                "type": "number",
                "example": "23.45"
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object"
          },
          "processedDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "type": "object",
        "title": "FinanceTransactionLine",
        "x-readme-ref-name": "FinanceTransactionLine"
      },
      "Integration": {
        "properties": {
          "testMode": {
            "description": "Indicates if the service is in testmode or not, possible values: false or true",
            "type": "boolean"
          }
        },
        "type": "object",
        "title": "Integration",
        "x-readme-ref-name": "Integration"
      },
      "IntegrationPlugin": {
        "properties": {
          "code": {
            "description": "A code for this integration",
            "type": "string",
            "example": "PL-0000-0000"
          },
          "name": {
            "description": "An integration name.",
            "type": "string"
          },
          "description": {
            "description": "Description of the integration.",
            "type": "string"
          },
          "status": {
            "description": "Status of the integration.",
            "type": "string"
          },
          "image": {
            "description": "Image of the integration.",
            "type": "string"
          },
          "url": {
            "description": "Url to the integration.",
            "type": "string"
          },
          "urlInfo": {
            "description": "Url to more information in the documentation about this integration.",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "versions": {
            "items": {
              "properties": {
                "code": {
                  "description": "A code for this integration version",
                  "type": "string",
                  "example": "PV-0000-0000"
                },
                "version": {
                  "description": "Integration version.",
                  "type": "string"
                },
                "developer": {
                  "description": "Developer of the integration version.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the integration.",
                  "type": "string"
                },
                "urlDownload": {
                  "description": "Url to download.",
                  "type": "string"
                },
                "urlManual": {
                  "description": "Url to manual.",
                  "type": "string"
                },
                "urlShopDemo": {
                  "description": "Url to shopDemo.",
                  "type": "string"
                },
                "urlGithub": {
                  "description": "Url to github.",
                  "type": "string"
                },
                "urlImage": {
                  "description": "Url to image.",
                  "type": "string"
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "IntegrationPluginVersion",
              "x-readme-ref-name": "IntegrationPluginVersion"
            }
          }
        },
        "type": "object",
        "title": "IntegrationPlugin",
        "x-readme-ref-name": "IntegrationPlugin"
      },
      "IntegrationPluginVersion": {
        "properties": {
          "code": {
            "description": "A code for this integration version",
            "type": "string",
            "example": "PV-0000-0000"
          },
          "version": {
            "description": "Integration version.",
            "type": "string"
          },
          "developer": {
            "description": "Developer of the integration version.",
            "type": "string"
          },
          "status": {
            "description": "Status of the integration.",
            "type": "string"
          },
          "urlDownload": {
            "description": "Url to download.",
            "type": "string"
          },
          "urlManual": {
            "description": "Url to manual.",
            "type": "string"
          },
          "urlShopDemo": {
            "description": "Url to shopDemo.",
            "type": "string"
          },
          "urlGithub": {
            "description": "Url to github.",
            "type": "string"
          },
          "urlImage": {
            "description": "Url to image.",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "IntegrationPluginVersion",
        "x-readme-ref-name": "IntegrationPluginVersion"
      },
      "Interval": {
        "properties": {
          "period": {
            "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "trimester",
              "halfyear",
              "year",
              "manual"
            ]
          },
          "quantity": {
            "description": "Indicated the number of times this order should be executed.",
            "type": "integer",
            "example": 1
          },
          "value": {
            "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
            "type": "integer",
            "example": 1
          }
        },
        "type": "object",
        "title": "Interval",
        "x-readme-ref-name": "Interval"
      },
      "InvoiceLine": {
        "required": [
          "code",
          "merchant",
          "turnoverGroup",
          "billingLineType",
          "unitType",
          "amount",
          "vatPercentage",
          "date",
          "valueDate",
          "paymentDate",
          "processedDate",
          "state",
          "invoiceID"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "merchant": {
            "description": "The corresponding merchant for the invoice line",
            "required": [
              "code",
              "contractPackage"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "contractPackage": {
                "description": "The merchant's package type",
                "type": "string",
                "example": "Business"
              }
            },
            "type": "object"
          },
          "turnoverGroup": {
            "description": "The turnover group for the invoice line",
            "required": [
              "code",
              "name"
            ],
            "properties": {
              "code": {
                "description": "The turnover group code",
                "type": "string",
                "example": "CT-1234-4321"
              },
              "name": {
                "description": "The turnover group name",
                "type": "string",
                "example": "Ecommerce"
              }
            },
            "type": "object",
            "nullable": true
          },
          "billingLineType": {
            "description": "The type of billing used for the invoice, c.q. payment method",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "description": "ID of the billing type",
                "type": "integer",
                "example": "706"
              },
              "name": {
                "description": "The name for the corresponding billing type",
                "type": "string",
                "example": "Visa Mastercard"
              }
            },
            "type": "object",
            "nullable": true
          },
          "volume": {
            "description": "The volume of the invoice line",
            "properties": {
              "amount": {
                "description": "Amount of the volume as decimal",
                "type": "number",
                "example": "3.80"
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object"
          },
          "totalCosts": {
            "description": "The total costs per invoice line",
            "type": "array",
            "items": {
              "properties": {
                "totalCosts": {
                  "description": "$totalCosts",
                  "properties": {
                    "type": {
                      "description": "The type of total costs",
                      "type": "string",
                      "example": "BUY"
                    },
                    "totalCosts": {
                      "description": "The total costs amount as decimal",
                      "type": "number",
                      "example": "0.23"
                    },
                    "currency": {
                      "description": "The currency in ISO-4217 format.",
                      "type": "string",
                      "example": "EUR"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "transactions": {
            "type": "integer"
          },
          "payers": {
            "type": "integer"
          },
          "vatPercentage": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "valueDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "paymentDate": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "state": {
            "type": "string",
            "enum": [
              "OPEN",
              "PAYABLE",
              "PAID"
            ],
            "nullable": true
          },
          "invoiceID": {
            "type": "string",
            "nullable": true
          },
          "lines": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "type": {
                  "description": "The type of invoice line. Can either be SELL or BUY.",
                  "type": "string",
                  "enum": [
                    "BUY",
                    "SELL"
                  ]
                },
                "unitType": {
                  "description": "The specification for the unit's type",
                  "required": [
                    "id",
                    "name"
                  ],
                  "properties": {
                    "id": {
                      "description": "The unit type ID",
                      "type": "integer",
                      "example": "12"
                    },
                    "name": {
                      "description": "The unit type's name",
                      "type": "string",
                      "example": "percentage"
                    }
                  },
                  "type": "object",
                  "nullable": true
                },
                "amount": {
                  "type": "number"
                },
                "costs": {
                  "description": "The costs revue per financial transaction with the corresponding currency",
                  "properties": {
                    "revenue": {
                      "description": "The revenue for the costs as a decimal (/float)",
                      "type": "number",
                      "example": "23.45"
                    },
                    "currency": {
                      "description": "The currency in ISO-4217 format.",
                      "type": "string",
                      "example": "EUR"
                    }
                  },
                  "type": "object"
                },
                "processedDate": {
                  "type": "string",
                  "format": "date",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "FinanceTransactionLine",
              "x-readme-ref-name": "FinanceTransactionLine"
            }
          }
        },
        "type": "object",
        "title": "InvoiceLine",
        "x-readme-ref-name": "InvoiceLine"
      },
      "Issuer": {
        "properties": {
          "id": {
            "description": "The identifier for this issuer",
            "type": "integer",
            "example": "1"
          },
          "code": {
            "description": "A code for this issuer",
            "type": "string",
            "example": "PB-0000-0000"
          },
          "name": {
            "description": "The issuer name.",
            "type": "string"
          },
          "bic": {
            "description": "The Bank Identifier Code.",
            "type": "string"
          },
          "issuerId": {
            "description": "ID of the issuer.",
            "type": "string"
          },
          "available": {
            "description": "Is available.",
            "type": "boolean"
          },
          "status": {
            "description": "Status.",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          "image": {
            "description": "Image of the integration.",
            "type": "string"
          },
          "paymentMethod": {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                "type": "integer",
                "example": "10"
              },
              "name": {
                "description": "The name of the payment method.",
                "type": "string",
                "example": "ideal"
              }
            },
            "type": "object",
            "title": "IssuerPaymentMethod",
            "x-readme-ref-name": "IssuerPaymentMethod"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Issuer",
        "x-readme-ref-name": "Issuer"
      },
      "IssuerPaymentMethod": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
            "type": "integer",
            "example": "10"
          },
          "name": {
            "description": "The name of the payment method.",
            "type": "string",
            "example": "ideal"
          }
        },
        "type": "object",
        "title": "IssuerPaymentMethod",
        "x-readme-ref-name": "IssuerPaymentMethod"
      },
      "JWT": {
        "properties": {
          "accessToken": {
            "description": "Token used to make API calls",
            "type": "string",
            "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJBLTE1ODQtOTMxNyIsImlhdCI6MTY2OTEyOTg0OSwiZXhwIjoxNjY5MTM3MDQ5fQ.7g61s7PN58Ope8t70ysnvOqbcOjGDFzyWanZeFqx8cQ"
          },
          "refreshToken": {
            "description": "Token used to exchange for new ones",
            "type": "string",
            "example": "5fe027d96cded0c92b2337d4068a336dc41b956683a501c95d4896d9cb9f1103dc0b6d3388f17c1ef6a578ed9aa3c9d1c133355e9d9a4fa5dbb53d22e0aba0dc"
          },
          "accessTokenExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          },
          "refreshTokenExpiresAt": {
            "type": "string",
            "format": "date-time",
            "nullable": false
          }
        },
        "type": "object",
        "title": "JWT",
        "x-readme-ref-name": "JWT"
      },
      "Language": {
        "properties": {
          "code": {
            "description": "The language code",
            "type": "string",
            "example": "en_US"
          },
          "name": {
            "description": "The language name.",
            "type": "string"
          },
          "adminLanguageAvailable": {
            "description": "Language is available in the administration panel.",
            "type": "boolean"
          },
          "hostedPaymentPageLanguageAvailable": {
            "description": "Language is available on a hosted payment page.",
            "type": "boolean"
          },
          "payerCommunicationLanguageAvailable": {
            "description": "Language is available for communication to the payer.",
            "type": "boolean"
          },
          "contractLanguageAvailable": {
            "description": "Language is available for contracts.",
            "type": "boolean"
          },
          "image": {
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Language",
        "x-readme-ref-name": "Language"
      },
      "Layout": {
        "properties": {
          "code": {
            "description": "Id of layout",
            "type": "string",
            "example": "LY-####-####"
          },
          "name": {
            "description": "Name of the layout",
            "type": "string",
            "example": "My layout"
          },
          "ccsUrl": {
            "description": "CSS url to the layout css",
            "type": "string"
          },
          "icon": {
            "description": "Image in base64 encoding",
            "type": "string"
          },
          "supportingColor": {
            "description": "Supporting hex color code",
            "type": "string",
            "example": "FFFFFF"
          },
          "headerTextColor": {
            "description": "Header hex color code",
            "type": "string",
            "example": "FFFFFF"
          },
          "buttonColor": {
            "description": "Button hex color code",
            "type": "string",
            "example": "FFFFFF"
          },
          "buttonTextColor": {
            "description": "Button text hex color code",
            "type": "string",
            "example": "FFFFFF"
          }
        },
        "type": "object",
        "title": "Layout",
        "x-readme-ref-name": "Layout"
      },
      "License": {
        "properties": {
          "code": {
            "description": "License code.",
            "type": "string",
            "example": "AL-1234-4321"
          },
          "name": {
            "description": "Name of the license.",
            "type": "string",
            "example": "John Doe"
          },
          "merchant": {
            "allOf": [
              {
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  },
                  "publicName": {
                    "description": "The public name of your merchant.",
                    "type": "string",
                    "example": "CompanyName"
                  },
                  "boardingStatus": {
                    "description": "The status of the boarding process for this merchant.",
                    "type": "string",
                    "enum": [
                      "REGISTERED",
                      "ONBOARDING",
                      "ACCEPTED",
                      "SUSPENDED",
                      "OFFBOARDED"
                    ],
                    "example": "REGISTERED"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string",
                    "example": "ACTIVE"
                  },
                  "payoutStatus": {
                    "description": "Merchant payout state",
                    "type": "string",
                    "enum": [
                      "ENABLED",
                      "DISABLED"
                    ],
                    "example": "Enabled"
                  },
                  "coc": {
                    "description": "Your Chamber of commerce registration number. This format differs per country.",
                    "type": "string",
                    "example": "12345678"
                  },
                  "vat": {
                    "description": "Value added tax identification number (VAT identification number).",
                    "type": "string",
                    "example": "NL807960147B01"
                  },
                  "companyTypeId": {
                    "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                    "type": "string",
                    "example": "1"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "example": "NL"
                  },
                  "contractLanguage": {
                    "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                    "type": "string",
                    "example": "nl_NL"
                  },
                  "contractPackage": {
                    "type": "string"
                  },
                  "accountManager": {
                    "description": "The email address of the active account manager.",
                    "type": "string",
                    "example": "account.manager@pay.nl"
                  },
                  "website": {
                    "description": "The website.",
                    "type": "string",
                    "format": "uri",
                    "example": "https://www.my-website.com"
                  },
                  "categories": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "code": {
                          "description": "The category (code) identifier",
                          "type": "string",
                          "maxLength": 40,
                          "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                          "example": "CY-1234-4321"
                        },
                        "name": {
                          "description": "The category name.",
                          "type": "string",
                          "example": "Digitale diensten gambling (kansspelen)"
                        },
                        "description": {
                          "description": "The category's description.",
                          "type": "string",
                          "example": "Kansspelen"
                        },
                        "sequence": {
                          "description": "The sequence of the category.",
                          "type": "integer"
                        },
                        "available": {
                          "description": "The category's availability.",
                          "type": "boolean"
                        },
                        "initialMCC": {
                          "description": "The initial MCC of the category.",
                          "type": "integer",
                          "example": "General Contractors-Residential and Commercial",
                          "nullable": true
                        },
                        "initialRiskCategory": {
                          "description": "The initial risk category of the category.",
                          "type": "string",
                          "example": "Low risk"
                        },
                        "translations": {
                          "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                          "type": "object",
                          "uniqueItems": true,
                          "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                          "nullable": true,
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentMethods": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The payment profile identifier.",
                                "type": "integer",
                                "example": "1630"
                              },
                              "name": {
                                "description": "The name of the payment profile.",
                                "type": "string",
                                "example": "Pin (Maestro)"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "Category",
                      "x-readme-ref-name": "Category"
                    }
                  },
                  "integrations": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "code": {
                          "description": "The plugin identifier.",
                          "type": "string",
                          "example": "PL-3010-1000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "clearingAccounts": {
                    "type": "array",
                    "items": {
                      "required": [
                        "code",
                        "status",
                        "method",
                        "iban"
                      ],
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "APPROVED",
                            "DENIED",
                            "NOT_CHECKED"
                          ]
                        },
                        "method": {
                          "type": "string",
                          "enum": [
                            "iban"
                          ]
                        },
                        "iban": {
                          "required": [
                            "iban",
                            "bic",
                            "owner"
                          ],
                          "properties": {
                            "iban": {
                              "description": "The International Bank Account Number (IBAN).",
                              "type": "string",
                              "example": "NL69INGB0123456789"
                            },
                            "bic": {
                              "description": "Business Identifier Codes (BIC/SWIFT).",
                              "type": "string",
                              "example": "INGBNL2A"
                            },
                            "owner": {
                              "description": "The owner of the bank account.",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John Doe"
                            }
                          },
                          "type": "object",
                          "title": "BankAccount",
                          "x-readme-ref-name": "BankAccount"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "postalAddress": {
                    "required": [
                      "code",
                      "streetName",
                      "zipCode",
                      "city",
                      "countryCode"
                    ],
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Location",
                    "x-readme-ref-name": "Location"
                  },
                  "visitAddress": {
                    "required": [
                      "code",
                      "streetName",
                      "zipCode",
                      "city",
                      "countryCode"
                    ],
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Location",
                    "x-readme-ref-name": "Location"
                  },
                  "contactMethods": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "code": {
                          "description": "The contact method ID of your company starting with CM.",
                          "type": "string",
                          "example": "CM-1234-4321"
                        },
                        "type": {
                          "description": "The type of contact method.",
                          "type": "string",
                          "enum": [
                            "email",
                            "email_support",
                            "phone",
                            "phone_helpdesk",
                            "phone_off_hours",
                            "url",
                            "email_msnskype"
                          ],
                          "example": "The type of contact method."
                        },
                        "value": {
                          "description": "The value of the contact method.",
                          "type": "string",
                          "example": "088-88 666 22"
                        },
                        "description": {
                          "description": "The description of the contact method.",
                          "type": "string"
                        },
                        "public": {
                          "description": "Is the contact method public accessible",
                          "type": "boolean",
                          "example": "true"
                        },
                        "notifications": {
                          "description": "Does the contact method needs to receive notifications",
                          "type": "boolean",
                          "example": "false"
                        }
                      },
                      "type": "object",
                      "title": "ContactMethod",
                      "x-readme-ref-name": "ContactMethod"
                    }
                  },
                  "authenticationTokens": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "authenticationTokens": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "trademarks": {
                    "type": "array",
                    "items": {
                      "required": [
                        "name"
                      ],
                      "properties": {
                        "code": {
                          "description": "An identifier for this trademark",
                          "type": "string",
                          "example": "TM-0000-0000"
                        },
                        "type": {
                          "type": "string"
                        },
                        "name": {
                          "description": "A registered trademark name.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Status of the trademark.",
                          "type": "string"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "Trademark",
                      "x-readme-ref-name": "Trademark"
                    }
                  },
                  "licenses": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "AL-1234-4321"
                        },
                        "secret": {
                          "type": "string",
                          "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountCode": {
                          "type": "string",
                          "example": "A-1234-4321"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John",
                          "nullable": true
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "email": {
                          "description": "An email address.",
                          "type": "string",
                          "format": "email",
                          "example": "sandbox@pay.nl"
                        },
                        "language": {
                          "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                          "type": "string",
                          "enum": [
                            "NL",
                            "EN",
                            "DE",
                            "FR",
                            "IT",
                            "ES"
                          ],
                          "example": "NL"
                        },
                        "phone": {
                          "description": "The subject's phone number. Optionally prepended with a + and country code",
                          "type": "string",
                          "example": "0031612345678"
                        },
                        "visitAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "complianceData": {
                          "allOf": [
                            {
                              "properties": {
                                "pep": {
                                  "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "pepDescription": {
                                  "description": "Describe in your own words why this person is a PEP.",
                                  "type": "string",
                                  "example": "The person is active as an alderman in the municipality where he lives."
                                },
                                "dateOfBirth": {
                                  "description": "Date of birth of the person.",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "1999-12-12"
                                },
                                "nationality": {
                                  "description": "Nationality of the person.",
                                  "type": "string",
                                  "example": "NL"
                                },
                                "idDocumentNumber": {
                                  "description": "The id document number of the person",
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "type": "object",
                              "title": "ComplianceData",
                              "x-readme-ref-name": "ComplianceData"
                            },
                            {
                              "properties": {
                                "ubo": {
                                  "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                                  "type": "string",
                                  "enum": [
                                    "no",
                                    "direct",
                                    "indirect",
                                    "pseudo"
                                  ],
                                  "example": "direct"
                                },
                                "uboPercentage": {
                                  "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                                  "type": "integer",
                                  "example": "25"
                                },
                                "authorizedToSign": {
                                  "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                                  "type": "string",
                                  "enum": [
                                    "no",
                                    "alone",
                                    "shared"
                                  ],
                                  "example": "shared"
                                },
                                "relationshipDescription": {
                                  "description": "Describe in your own words the relation the person has with this company.",
                                  "type": "string",
                                  "example": "John Doe of test company"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "title": "ComplianceDataPerson",
                          "x-readme-ref-name": "ComplianceDataPerson"
                        }
                      },
                      "type": "object",
                      "title": "Person",
                      "x-readme-ref-name": "Person"
                    }
                  },
                  "services": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "secret": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "category": {
                          "properties": {
                            "code": {
                              "description": "The category (code) identifier",
                              "type": "string",
                              "maxLength": 40,
                              "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                              "example": "CY-1234-4321"
                            },
                            "name": {
                              "description": "The category name.",
                              "type": "string",
                              "example": "Digitale diensten gambling (kansspelen)"
                            }
                          },
                          "type": "object"
                        },
                        "integration": {
                          "properties": {
                            "code": {
                              "description": "The plugin identifier.",
                              "type": "string",
                              "example": "PL-3010-1000"
                            },
                            "name": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "website": {
                          "description": "The website URL.",
                          "type": "string",
                          "example": "https://www.pay.nl"
                        },
                        "urls": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "code": {
                                "description": "The code of the website URL.",
                                "type": "string",
                                "example": "WU-1234-1234"
                              },
                              "website": {
                                "description": "The website URL.",
                                "type": "string",
                                "example": "https://www.pay.nl"
                              }
                            },
                            "type": "object",
                            "title": "WebsiteUrl",
                            "x-readme-ref-name": "WebsiteUrl"
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "partner": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "M-1234-4321"
                        },
                        "name": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        },
                        "accessToMerchant": {
                          "type": "boolean"
                        }
                      },
                      "type": "object",
                      "title": "Partner",
                      "x-readme-ref-name": "Partner"
                    }
                  },
                  "createdAt": {
                    "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": false
                  },
                  "createdBy": {
                    "description": "The reference to an account or token whom created the entity",
                    "type": "string",
                    "pattern": "^A(T)?(-\\d{4}){2}$",
                    "readOnly": true,
                    "example": "A-1234-4321",
                    "nullable": false
                  },
                  "acceptedAt": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": true
                  },
                  "suspendedAt": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": true
                  },
                  "suspendedBy": {
                    "description": "SUSPENDED_BY_DESCRIPTION",
                    "type": "string",
                    "example": "A-1234-4321",
                    "nullable": true
                  },
                  "modifiedAt": {
                    "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": true
                  },
                  "modifiedBy": {
                    "description": "The reference to an account or token whom modified the entity",
                    "type": "string",
                    "pattern": "^A(T)?(-\\d{4}){2}$",
                    "readOnly": true,
                    "example": "A-1234-4321",
                    "nullable": true
                  },
                  "deletedAt": {
                    "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": true
                  },
                  "deletedBy": {
                    "description": "The reference to an account or token whom deleted the entity",
                    "type": "string",
                    "pattern": "^A(T)?(-\\d{4}){2}$",
                    "readOnly": true,
                    "example": "A-1234-4321",
                    "nullable": true
                  },
                  "reviewedAt": {
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": true
                  },
                  "nextReviewDate": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "type": "object",
                "title": "Merchant",
                "x-readme-ref-name": "Merchant"
              },
              {
                "properties": {
                  "whitelabel": {
                    "properties": {
                      "primaryColor": {
                        "description": "Primary color of the whitelabel.",
                        "type": "string",
                        "example": "000000"
                      },
                      "secondaryColor": {
                        "description": "Secondary color of the whitelabel.",
                        "type": "string",
                        "example": "000000"
                      },
                      "footerData": {
                        "description": "Footer data of the whitelabel",
                        "type": "string",
                        "example": ""
                      }
                    },
                    "type": "object",
                    "title": "Whitelabel",
                    "x-readme-ref-name": "Whitelabel"
                  },
                  "primaryContacts": {
                    "description": "The primary contacts linked to the merchant.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": "Hans"
                  }
                },
                "type": "object"
              }
            ],
            "title": "MerchantCompliance",
            "x-readme-ref-name": "MerchantCompliance"
          },
          "authorizedToSign": {
            "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
            "type": "string",
            "enum": [
              "no",
              "alone",
              "shared"
            ],
            "example": "shared"
          },
          "ubo": {
            "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
            "type": "string",
            "enum": [
              "no",
              "direct",
              "indirect",
              "pseudo"
            ],
            "example": "direct"
          },
          "uboPercentage": {
            "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
            "type": "integer",
            "example": "25"
          },
          "relationshipDescription": {
            "description": "Describe in your own words the relation the person has with this company.",
            "type": "string",
            "example": "John Doe of test company"
          },
          "creator": {
            "description": "The creator of the license.",
            "type": "string",
            "example": "Papa Doe"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "License",
        "x-readme-ref-name": "License"
      },
      "LineType": {
        "required": [
          "id",
          "name",
          "translations",
          "createdAt",
          "modifiedAt",
          "deletedAt"
        ],
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "LineType",
        "x-readme-ref-name": "LineType"
      },
      "Link": {
        "required": [
          "href",
          "rel",
          "type"
        ],
        "properties": {
          "href": {
            "description": "",
            "type": "string",
            "readOnly": true,
            "example": "",
            "nullable": false
          },
          "rel": {
            "description": "",
            "type": "string",
            "readOnly": true,
            "example": "",
            "nullable": false
          },
          "type": {
            "description": "",
            "type": "string",
            "readOnly": true,
            "example": "",
            "nullable": false
          }
        },
        "type": "object",
        "title": "Link",
        "x-readme-ref-name": "Link"
      },
      "Location": {
        "required": [
          "code",
          "streetName",
          "zipCode",
          "city",
          "countryCode"
        ],
        "properties": {
          "code": {
            "type": "string"
          },
          "streetName": {
            "description": "The name of the street",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Visitlane"
          },
          "streetNumber": {
            "description": "The street number",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "13"
          },
          "zipCode": {
            "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
            "type": "string",
            "maxLength": 16,
            "minLength": 1,
            "example": "5678CD"
          },
          "city": {
            "description": "The name of a city",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Amsterdam"
          },
          "countryCode": {
            "description": "The country code consisting of 2 uppercase letters",
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "example": "NL"
          }
        },
        "type": "object",
        "title": "Location",
        "x-readme-ref-name": "Location"
      },
      "LoginSession": {
        "properties": {
          "sessionCode": {
            "type": "string",
            "example": "LA-1234-4321"
          },
          "handshake": {
            "type": "string",
            "example": "agftj386jdfjk3489dsfdf824dff"
          },
          "internalId": {
            "type": "string",
            "example": "John Doe's Bakery"
          },
          "licenseCode": {
            "type": "string",
            "example": "AL-1234-4321"
          },
          "redirectUrl": {
            "type": "string",
            "example": "https://dashboard.bakery.com",
            "nullable": true
          }
        },
        "type": "object",
        "title": "LoginSession",
        "x-readme-ref-name": "LoginSession"
      },
      "Mandate": {
        "properties": {
          "id": {
            "description": "The direct debit identifier.",
            "type": "string",
            "example": "IL-####-####-####"
          },
          "type": {
            "description": "The type of direct debit. One of: single, mandate, recurring.",
            "type": "string",
            "example": "single"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "description": {
            "description": "The description of the direct debit.",
            "type": "string"
          },
          "statistics": {
            "properties": {
              "info": {
                "description": "The used info code which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Campagne 99"
              },
              "tool": {
                "description": "The used tool code which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Google"
              },
              "object": {
                "description": "The object which can be tracked in stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              },
              "extra1": {
                "description": "The first free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Customer 6985615"
              },
              "extra2": {
                "description": "The second free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Invoice 21.3695"
              },
              "extra3": {
                "description": "The third free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Shop Amsterdam"
              },
              "domainId": {
                "description": "The ID of the duplicate content URL",
                "type": "string",
                "example": "WU-####-####"
              }
            },
            "type": "object",
            "title": "Stats",
            "x-readme-ref-name": "Stats"
          },
          "customer": {
            "properties": {
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "type": {
                "description": "Either B for business or C for consumer.",
                "type": "string",
                "enum": [
                  "B",
                  "C"
                ]
              },
              "ip": {
                "description": "An ip address",
                "type": "string",
                "example": "213.126.82.230"
              },
              "birthDate": {
                "description": "Date of birth as defined in ISO-8601.",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "gender": {
                "description": "The subject's gender. Choose either M for male or F for female.",
                "type": "string",
                "example": "M"
              },
              "phone": {
                "description": "The subject's phone number. Optionally prepended with a + and country code",
                "type": "string",
                "example": "0031612345678"
              },
              "email": {
                "description": "An email address.",
                "type": "string",
                "format": "email",
                "example": "sandbox@pay.nl"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "enum": [
                  "NL",
                  "EN",
                  "DE",
                  "FR",
                  "IT",
                  "ES"
                ],
                "example": "NL"
              },
              "trust": {
                "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                "type": "integer",
                "maximum": 10,
                "minimum": -10,
                "example": -5
              },
              "reference": {
                "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]{1,64}$",
                "example": "NL87654321"
              },
              "bankAccount": {
                "required": [
                  "iban",
                  "bic",
                  "owner"
                ],
                "properties": {
                  "iban": {
                    "description": "The International Bank Account Number (IBAN).",
                    "type": "string",
                    "example": "NL69INGB0123456789"
                  },
                  "bic": {
                    "description": "Business Identifier Codes (BIC/SWIFT).",
                    "type": "string",
                    "example": "INGBNL2A"
                  },
                  "owner": {
                    "description": "The owner of the bank account.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John Doe"
                  }
                },
                "type": "object",
                "title": "BankAccount",
                "x-readme-ref-name": "BankAccount"
              },
              "company": {
                "properties": {
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "example": "CompanyName"
                  },
                  "coc": {
                    "description": "Your Chamber of commerce registration number. This format differs per country.",
                    "type": "string",
                    "example": "12345678"
                  },
                  "vat": {
                    "description": "Value added tax identification number (VAT identification number).",
                    "type": "string",
                    "example": "NL807960147B01"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Company",
                "x-readme-ref-name": "Company"
              }
            },
            "type": "object",
            "title": "Customer",
            "x-readme-ref-name": "Customer"
          },
          "interval": {
            "properties": {
              "period": {
                "description": "Specify the period frequency. Must be one of: day,week,month,trimester,halfyear,year,manual.",
                "type": "string",
                "enum": [
                  "day",
                  "week",
                  "month",
                  "trimester",
                  "halfyear",
                  "year",
                  "manual"
                ]
              },
              "quantity": {
                "description": "Indicated the number of times this order should be executed.",
                "type": "integer",
                "example": 1
              },
              "value": {
                "description": "Specify the frequency for a period. For examply a weekly period, but only every second week.",
                "type": "integer",
                "example": 1
              }
            },
            "type": "object",
            "title": "Interval",
            "x-readme-ref-name": "Interval"
          },
          "state": {
            "description": "State of the order. Options are: first, active, last, deleted, single.",
            "type": "string"
          }
        },
        "type": "object",
        "title": "Mandate",
        "x-readme-ref-name": "Mandate"
      },
      "Mcc": {
        "properties": {
          "code": {
            "description": "A MCC code",
            "type": "integer",
            "example": "XXXX"
          },
          "description": {
            "description": "Description of the MCC code.",
            "type": "string"
          },
          "highRisk": {
            "description": "Should this MCC code be considered high risk?",
            "type": "boolean"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Mcc",
        "x-readme-ref-name": "Mcc"
      },
      "Merchant": {
        "properties": {
          "code": {
            "description": "The merchant id of your company starting with M.",
            "type": "string",
            "example": "M-1234-4321"
          },
          "name": {
            "description": "The name of your merchant.",
            "type": "string",
            "maxLength": 128,
            "minLength": 2,
            "example": "CompanyName"
          },
          "publicName": {
            "description": "The public name of your merchant.",
            "type": "string",
            "example": "CompanyName"
          },
          "boardingStatus": {
            "description": "The status of the boarding process for this merchant.",
            "type": "string",
            "enum": [
              "REGISTERED",
              "ONBOARDING",
              "ACCEPTED",
              "SUSPENDED",
              "OFFBOARDED"
            ],
            "example": "REGISTERED"
          },
          "status": {
            "description": "Merchant state",
            "type": "string",
            "example": "ACTIVE"
          },
          "payoutStatus": {
            "description": "Merchant payout state",
            "type": "string",
            "enum": [
              "ENABLED",
              "DISABLED"
            ],
            "example": "Enabled"
          },
          "coc": {
            "description": "Your Chamber of commerce registration number. This format differs per country.",
            "type": "string",
            "example": "12345678"
          },
          "vat": {
            "description": "Value added tax identification number (VAT identification number).",
            "type": "string",
            "example": "NL807960147B01"
          },
          "companyTypeId": {
            "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
            "type": "string",
            "example": "1"
          },
          "countryCode": {
            "description": "The country code consisting of 2 uppercase letters",
            "type": "string",
            "example": "NL"
          },
          "contractLanguage": {
            "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
            "type": "string",
            "example": "nl_NL"
          },
          "contractPackage": {
            "type": "string"
          },
          "accountManager": {
            "description": "The email address of the active account manager.",
            "type": "string",
            "example": "account.manager@pay.nl"
          },
          "website": {
            "description": "The website.",
            "type": "string",
            "format": "uri",
            "example": "https://www.my-website.com"
          },
          "categories": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "The category (code) identifier",
                  "type": "string",
                  "maxLength": 40,
                  "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                  "example": "CY-1234-4321"
                },
                "name": {
                  "description": "The category name.",
                  "type": "string",
                  "example": "Digitale diensten gambling (kansspelen)"
                },
                "description": {
                  "description": "The category's description.",
                  "type": "string",
                  "example": "Kansspelen"
                },
                "sequence": {
                  "description": "The sequence of the category.",
                  "type": "integer"
                },
                "available": {
                  "description": "The category's availability.",
                  "type": "boolean"
                },
                "initialMCC": {
                  "description": "The initial MCC of the category.",
                  "type": "integer",
                  "example": "General Contractors-Residential and Commercial",
                  "nullable": true
                },
                "initialRiskCategory": {
                  "description": "The initial risk category of the category.",
                  "type": "string",
                  "example": "Low risk"
                },
                "translations": {
                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                  "type": "object",
                  "uniqueItems": true,
                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                  "nullable": true,
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "paymentMethods": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "description": "The payment profile identifier.",
                        "type": "integer",
                        "example": "1630"
                      },
                      "name": {
                        "description": "The name of the payment profile.",
                        "type": "string",
                        "example": "Pin (Maestro)"
                      }
                    },
                    "type": "object"
                  }
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "Category",
              "x-readme-ref-name": "Category"
            }
          },
          "integrations": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "The plugin identifier.",
                  "type": "string",
                  "example": "PL-3010-1000"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "clearingAccounts": {
            "type": "array",
            "items": {
              "required": [
                "code",
                "status",
                "method",
                "iban"
              ],
              "properties": {
                "code": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "APPROVED",
                    "DENIED",
                    "NOT_CHECKED"
                  ]
                },
                "method": {
                  "type": "string",
                  "enum": [
                    "iban"
                  ]
                },
                "iban": {
                  "required": [
                    "iban",
                    "bic",
                    "owner"
                  ],
                  "properties": {
                    "iban": {
                      "description": "The International Bank Account Number (IBAN).",
                      "type": "string",
                      "example": "NL69INGB0123456789"
                    },
                    "bic": {
                      "description": "Business Identifier Codes (BIC/SWIFT).",
                      "type": "string",
                      "example": "INGBNL2A"
                    },
                    "owner": {
                      "description": "The owner of the bank account.",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John Doe"
                    }
                  },
                  "type": "object",
                  "title": "BankAccount",
                  "x-readme-ref-name": "BankAccount"
                }
              },
              "type": "object"
            }
          },
          "postalAddress": {
            "required": [
              "code",
              "streetName",
              "zipCode",
              "city",
              "countryCode"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Location",
            "x-readme-ref-name": "Location"
          },
          "visitAddress": {
            "required": [
              "code",
              "streetName",
              "zipCode",
              "city",
              "countryCode"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Location",
            "x-readme-ref-name": "Location"
          },
          "contactMethods": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "The contact method ID of your company starting with CM.",
                  "type": "string",
                  "example": "CM-1234-4321"
                },
                "type": {
                  "description": "The type of contact method.",
                  "type": "string",
                  "enum": [
                    "email",
                    "email_support",
                    "phone",
                    "phone_helpdesk",
                    "phone_off_hours",
                    "url",
                    "email_msnskype"
                  ],
                  "example": "The type of contact method."
                },
                "value": {
                  "description": "The value of the contact method.",
                  "type": "string",
                  "example": "088-88 666 22"
                },
                "description": {
                  "description": "The description of the contact method.",
                  "type": "string"
                },
                "public": {
                  "description": "Is the contact method public accessible",
                  "type": "boolean",
                  "example": "true"
                },
                "notifications": {
                  "description": "Does the contact method needs to receive notifications",
                  "type": "boolean",
                  "example": "false"
                }
              },
              "type": "object",
              "title": "ContactMethod",
              "x-readme-ref-name": "ContactMethod"
            }
          },
          "authenticationTokens": {
            "type": "array",
            "items": {
              "properties": {
                "authenticationTokens": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "trademarks": {
            "type": "array",
            "items": {
              "required": [
                "name"
              ],
              "properties": {
                "code": {
                  "description": "An identifier for this trademark",
                  "type": "string",
                  "example": "TM-0000-0000"
                },
                "type": {
                  "type": "string"
                },
                "name": {
                  "description": "A registered trademark name.",
                  "type": "string"
                },
                "status": {
                  "description": "Status of the trademark.",
                  "type": "string"
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "createdBy": {
                  "description": "The reference to an account or token whom created the entity",
                  "type": "string",
                  "pattern": "^A(T)?(-\\d{4}){2}$",
                  "readOnly": true,
                  "example": "A-1234-4321",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "modifiedBy": {
                  "description": "The reference to an account or token whom modified the entity",
                  "type": "string",
                  "pattern": "^A(T)?(-\\d{4}){2}$",
                  "readOnly": true,
                  "example": "A-1234-4321",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedBy": {
                  "description": "The reference to an account or token whom deleted the entity",
                  "type": "string",
                  "pattern": "^A(T)?(-\\d{4}){2}$",
                  "readOnly": true,
                  "example": "A-1234-4321",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "Trademark",
              "x-readme-ref-name": "Trademark"
            }
          },
          "licenses": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "AL-1234-4321"
                },
                "secret": {
                  "type": "string",
                  "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                },
                "name": {
                  "type": "string"
                },
                "accountCode": {
                  "type": "string",
                  "example": "A-1234-4321"
                },
                "firstName": {
                  "description": "The forename (also known as a given name, Christian name or a first name).",
                  "type": "string",
                  "maxLength": 64,
                  "minLength": 1,
                  "example": "John",
                  "nullable": true
                },
                "lastName": {
                  "description": "The surname (also known as a family name or a last name).",
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 1,
                  "example": "Doe"
                },
                "email": {
                  "description": "An email address.",
                  "type": "string",
                  "format": "email",
                  "example": "sandbox@pay.nl"
                },
                "language": {
                  "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                  "type": "string",
                  "enum": [
                    "NL",
                    "EN",
                    "DE",
                    "FR",
                    "IT",
                    "ES"
                  ],
                  "example": "NL"
                },
                "phone": {
                  "description": "The subject's phone number. Optionally prepended with a + and country code",
                  "type": "string",
                  "example": "0031612345678"
                },
                "visitAddress": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "firstName": {
                      "description": "The forename (also known as a given name, Christian name or a first name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John"
                    },
                    "lastName": {
                      "description": "The surname (also known as a family name or a last name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "Doe"
                    },
                    "streetName": {
                      "description": "The name of the street",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Visitlane"
                    },
                    "streetNumber": {
                      "description": "The street number",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "13"
                    },
                    "streetNumberExtension": {
                      "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                      "type": "string",
                      "maxLength": 32,
                      "minLength": 1,
                      "example": "b1"
                    },
                    "zipCode": {
                      "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                      "type": "string",
                      "maxLength": 16,
                      "minLength": 1,
                      "example": "5678CD"
                    },
                    "city": {
                      "description": "The name of a city",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Amsterdam"
                    },
                    "regionCode": {
                      "description": "Region code (iso-3166-2)",
                      "type": "string",
                      "example": "ZH"
                    },
                    "countryCode": {
                      "description": "The country code consisting of 2 uppercase letters",
                      "type": "string",
                      "maxLength": 2,
                      "minLength": 2,
                      "example": "NL"
                    }
                  },
                  "type": "object",
                  "title": "Address",
                  "x-readme-ref-name": "Address"
                },
                "complianceData": {
                  "allOf": [
                    {
                      "properties": {
                        "pep": {
                          "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                          "type": "boolean",
                          "example": "true"
                        },
                        "pepDescription": {
                          "description": "Describe in your own words why this person is a PEP.",
                          "type": "string",
                          "example": "The person is active as an alderman in the municipality where he lives."
                        },
                        "dateOfBirth": {
                          "description": "Date of birth of the person.",
                          "type": "string",
                          "format": "date-time",
                          "example": "1999-12-12"
                        },
                        "nationality": {
                          "description": "Nationality of the person.",
                          "type": "string",
                          "example": "NL"
                        },
                        "idDocumentNumber": {
                          "description": "The id document number of the person",
                          "type": "string",
                          "example": ""
                        }
                      },
                      "type": "object",
                      "title": "ComplianceData",
                      "x-readme-ref-name": "ComplianceData"
                    },
                    {
                      "properties": {
                        "ubo": {
                          "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                          "type": "string",
                          "enum": [
                            "no",
                            "direct",
                            "indirect",
                            "pseudo"
                          ],
                          "example": "direct"
                        },
                        "uboPercentage": {
                          "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                          "type": "integer",
                          "example": "25"
                        },
                        "authorizedToSign": {
                          "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                          "type": "string",
                          "enum": [
                            "no",
                            "alone",
                            "shared"
                          ],
                          "example": "shared"
                        },
                        "relationshipDescription": {
                          "description": "Describe in your own words the relation the person has with this company.",
                          "type": "string",
                          "example": "John Doe of test company"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "ComplianceDataPerson",
                  "x-readme-ref-name": "ComplianceDataPerson"
                }
              },
              "type": "object",
              "title": "Person",
              "x-readme-ref-name": "Person"
            }
          },
          "services": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string"
                },
                "secret": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "category": {
                  "properties": {
                    "code": {
                      "description": "The category (code) identifier",
                      "type": "string",
                      "maxLength": 40,
                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                      "example": "CY-1234-4321"
                    },
                    "name": {
                      "description": "The category name.",
                      "type": "string",
                      "example": "Digitale diensten gambling (kansspelen)"
                    }
                  },
                  "type": "object"
                },
                "integration": {
                  "properties": {
                    "code": {
                      "description": "The plugin identifier.",
                      "type": "string",
                      "example": "PL-3010-1000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "website": {
                  "description": "The website URL.",
                  "type": "string",
                  "example": "https://www.pay.nl"
                },
                "urls": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "code": {
                        "description": "The code of the website URL.",
                        "type": "string",
                        "example": "WU-1234-1234"
                      },
                      "website": {
                        "description": "The website URL.",
                        "type": "string",
                        "example": "https://www.pay.nl"
                      }
                    },
                    "type": "object",
                    "title": "WebsiteUrl",
                    "x-readme-ref-name": "WebsiteUrl"
                  }
                }
              },
              "type": "object"
            }
          },
          "partner": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "type": "string",
                  "example": "M-1234-4321"
                },
                "name": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "accessToMerchant": {
                  "type": "boolean"
                }
              },
              "type": "object",
              "title": "Partner",
              "x-readme-ref-name": "Partner"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "acceptedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "suspendedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "suspendedBy": {
            "description": "SUSPENDED_BY_DESCRIPTION",
            "type": "string",
            "example": "A-1234-4321",
            "nullable": true
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "reviewedAt": {
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "nextReviewDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "type": "object",
        "title": "Merchant",
        "x-readme-ref-name": "Merchant"
      },
      "MerchantBankAccount": {
        "properties": {
          "code": {
            "description": "The merchant bank account id of your company starting with BA.",
            "type": "string",
            "example": "BA-1234-4321"
          },
          "status": {
            "description": "The current check status of the clearing account.",
            "type": "string",
            "example": "NOT_CHECKED"
          },
          "method": {
            "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
            "type": "string",
            "example": "iban"
          },
          "iban": {
            "required": [
              "iban",
              "bic",
              "owner"
            ],
            "properties": {
              "iban": {
                "description": "The International Bank Account Number (IBAN).",
                "type": "string",
                "example": "NL69INGB0123456789"
              },
              "bic": {
                "description": "Business Identifier Codes (BIC/SWIFT).",
                "type": "string",
                "example": "INGBNL2A"
              },
              "owner": {
                "description": "The owner of the bank account.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John Doe"
              }
            },
            "type": "object",
            "title": "BankAccount",
            "x-readme-ref-name": "BankAccount"
          },
          "merchant": {
            "required": [
              "code",
              "name",
              "status"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              }
            },
            "type": "object",
            "title": "MerchantMinimal",
            "x-readme-ref-name": "MerchantMinimal"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "MerchantBankAccount",
        "x-readme-ref-name": "MerchantBankAccount"
      },
      "MerchantCompliance": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "publicName": {
                "description": "The public name of your merchant.",
                "type": "string",
                "example": "CompanyName"
              },
              "boardingStatus": {
                "description": "The status of the boarding process for this merchant.",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "ONBOARDING",
                  "ACCEPTED",
                  "SUSPENDED",
                  "OFFBOARDED"
                ],
                "example": "REGISTERED"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              },
              "payoutStatus": {
                "description": "Merchant payout state",
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ],
                "example": "Enabled"
              },
              "coc": {
                "description": "Your Chamber of commerce registration number. This format differs per country.",
                "type": "string",
                "example": "12345678"
              },
              "vat": {
                "description": "Value added tax identification number (VAT identification number).",
                "type": "string",
                "example": "NL807960147B01"
              },
              "companyTypeId": {
                "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                "type": "string",
                "example": "1"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "example": "NL"
              },
              "contractLanguage": {
                "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                "type": "string",
                "example": "nl_NL"
              },
              "contractPackage": {
                "type": "string"
              },
              "accountManager": {
                "description": "The email address of the active account manager.",
                "type": "string",
                "example": "account.manager@pay.nl"
              },
              "website": {
                "description": "The website.",
                "type": "string",
                "format": "uri",
                "example": "https://www.my-website.com"
              },
              "categories": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The category (code) identifier",
                      "type": "string",
                      "maxLength": 40,
                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                      "example": "CY-1234-4321"
                    },
                    "name": {
                      "description": "The category name.",
                      "type": "string",
                      "example": "Digitale diensten gambling (kansspelen)"
                    },
                    "description": {
                      "description": "The category's description.",
                      "type": "string",
                      "example": "Kansspelen"
                    },
                    "sequence": {
                      "description": "The sequence of the category.",
                      "type": "integer"
                    },
                    "available": {
                      "description": "The category's availability.",
                      "type": "boolean"
                    },
                    "initialMCC": {
                      "description": "The initial MCC of the category.",
                      "type": "integer",
                      "example": "General Contractors-Residential and Commercial",
                      "nullable": true
                    },
                    "initialRiskCategory": {
                      "description": "The initial risk category of the category.",
                      "type": "string",
                      "example": "Low risk"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The payment profile identifier.",
                            "type": "integer",
                            "example": "1630"
                          },
                          "name": {
                            "description": "The name of the payment profile.",
                            "type": "string",
                            "example": "Pin (Maestro)"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Category",
                  "x-readme-ref-name": "Category"
                }
              },
              "integrations": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The plugin identifier.",
                      "type": "string",
                      "example": "PL-3010-1000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "clearingAccounts": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "status",
                    "method",
                    "iban"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "APPROVED",
                        "DENIED",
                        "NOT_CHECKED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "iban"
                      ]
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    }
                  },
                  "type": "object"
                }
              },
              "postalAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "visitAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "contactMethods": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The contact method ID of your company starting with CM.",
                      "type": "string",
                      "example": "CM-1234-4321"
                    },
                    "type": {
                      "description": "The type of contact method.",
                      "type": "string",
                      "enum": [
                        "email",
                        "email_support",
                        "phone",
                        "phone_helpdesk",
                        "phone_off_hours",
                        "url",
                        "email_msnskype"
                      ],
                      "example": "The type of contact method."
                    },
                    "value": {
                      "description": "The value of the contact method.",
                      "type": "string",
                      "example": "088-88 666 22"
                    },
                    "description": {
                      "description": "The description of the contact method.",
                      "type": "string"
                    },
                    "public": {
                      "description": "Is the contact method public accessible",
                      "type": "boolean",
                      "example": "true"
                    },
                    "notifications": {
                      "description": "Does the contact method needs to receive notifications",
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object",
                  "title": "ContactMethod",
                  "x-readme-ref-name": "ContactMethod"
                }
              },
              "authenticationTokens": {
                "type": "array",
                "items": {
                  "properties": {
                    "authenticationTokens": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "trademarks": {
                "type": "array",
                "items": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                }
              },
              "licenses": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "secret": {
                      "type": "string",
                      "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                    },
                    "name": {
                      "type": "string"
                    },
                    "accountCode": {
                      "type": "string",
                      "example": "A-1234-4321"
                    },
                    "firstName": {
                      "description": "The forename (also known as a given name, Christian name or a first name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John",
                      "nullable": true
                    },
                    "lastName": {
                      "description": "The surname (also known as a family name or a last name).",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Doe"
                    },
                    "email": {
                      "description": "An email address.",
                      "type": "string",
                      "format": "email",
                      "example": "sandbox@pay.nl"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "enum": [
                        "NL",
                        "EN",
                        "DE",
                        "FR",
                        "IT",
                        "ES"
                      ],
                      "example": "NL"
                    },
                    "phone": {
                      "description": "The subject's phone number. Optionally prepended with a + and country code",
                      "type": "string",
                      "example": "0031612345678"
                    },
                    "visitAddress": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "streetNumberExtension": {
                          "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "b1"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "regionCode": {
                          "description": "Region code (iso-3166-2)",
                          "type": "string",
                          "example": "ZH"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Address",
                      "x-readme-ref-name": "Address"
                    },
                    "complianceData": {
                      "allOf": [
                        {
                          "properties": {
                            "pep": {
                              "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                              "type": "boolean",
                              "example": "true"
                            },
                            "pepDescription": {
                              "description": "Describe in your own words why this person is a PEP.",
                              "type": "string",
                              "example": "The person is active as an alderman in the municipality where he lives."
                            },
                            "dateOfBirth": {
                              "description": "Date of birth of the person.",
                              "type": "string",
                              "format": "date-time",
                              "example": "1999-12-12"
                            },
                            "nationality": {
                              "description": "Nationality of the person.",
                              "type": "string",
                              "example": "NL"
                            },
                            "idDocumentNumber": {
                              "description": "The id document number of the person",
                              "type": "string",
                              "example": ""
                            }
                          },
                          "type": "object",
                          "title": "ComplianceData",
                          "x-readme-ref-name": "ComplianceData"
                        },
                        {
                          "properties": {
                            "ubo": {
                              "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                              "type": "string",
                              "enum": [
                                "no",
                                "direct",
                                "indirect",
                                "pseudo"
                              ],
                              "example": "direct"
                            },
                            "uboPercentage": {
                              "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                              "type": "integer",
                              "example": "25"
                            },
                            "authorizedToSign": {
                              "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                              "type": "string",
                              "enum": [
                                "no",
                                "alone",
                                "shared"
                              ],
                              "example": "shared"
                            },
                            "relationshipDescription": {
                              "description": "Describe in your own words the relation the person has with this company.",
                              "type": "string",
                              "example": "John Doe of test company"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ComplianceDataPerson",
                      "x-readme-ref-name": "ComplianceDataPerson"
                    }
                  },
                  "type": "object",
                  "title": "Person",
                  "x-readme-ref-name": "Person"
                }
              },
              "services": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "category": {
                      "properties": {
                        "code": {
                          "description": "The category (code) identifier",
                          "type": "string",
                          "maxLength": 40,
                          "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                          "example": "CY-1234-4321"
                        },
                        "name": {
                          "description": "The category name.",
                          "type": "string",
                          "example": "Digitale diensten gambling (kansspelen)"
                        }
                      },
                      "type": "object"
                    },
                    "integration": {
                      "properties": {
                        "code": {
                          "description": "The plugin identifier.",
                          "type": "string",
                          "example": "PL-3010-1000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "website": {
                      "description": "The website URL.",
                      "type": "string",
                      "example": "https://www.pay.nl"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The code of the website URL.",
                            "type": "string",
                            "example": "WU-1234-1234"
                          },
                          "website": {
                            "description": "The website URL.",
                            "type": "string",
                            "example": "https://www.pay.nl"
                          }
                        },
                        "type": "object",
                        "title": "WebsiteUrl",
                        "x-readme-ref-name": "WebsiteUrl"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "partner": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "accessToMerchant": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "title": "Partner",
                  "x-readme-ref-name": "Partner"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "acceptedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedBy": {
                "description": "SUSPENDED_BY_DESCRIPTION",
                "type": "string",
                "example": "A-1234-4321",
                "nullable": true
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "reviewedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "nextReviewDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object",
            "title": "Merchant",
            "x-readme-ref-name": "Merchant"
          },
          {
            "properties": {
              "whitelabel": {
                "properties": {
                  "primaryColor": {
                    "description": "Primary color of the whitelabel.",
                    "type": "string",
                    "example": "000000"
                  },
                  "secondaryColor": {
                    "description": "Secondary color of the whitelabel.",
                    "type": "string",
                    "example": "000000"
                  },
                  "footerData": {
                    "description": "Footer data of the whitelabel",
                    "type": "string",
                    "example": ""
                  }
                },
                "type": "object",
                "title": "Whitelabel",
                "x-readme-ref-name": "Whitelabel"
              },
              "primaryContacts": {
                "description": "The primary contacts linked to the merchant.",
                "type": "array",
                "items": {
                  "type": "string"
                },
                "example": "Hans"
              }
            },
            "type": "object"
          }
        ],
        "title": "MerchantCompliance",
        "x-readme-ref-name": "MerchantCompliance"
      },
      "MerchantContactMethod": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "The contact method ID of your company starting with CM.",
                "type": "string",
                "example": "CM-1234-4321"
              },
              "type": {
                "description": "The type of contact method.",
                "type": "string",
                "enum": [
                  "email",
                  "email_support",
                  "phone",
                  "phone_helpdesk",
                  "phone_off_hours",
                  "url",
                  "email_msnskype"
                ],
                "example": "The type of contact method."
              },
              "value": {
                "description": "The value of the contact method.",
                "type": "string",
                "example": "088-88 666 22"
              },
              "description": {
                "description": "The description of the contact method.",
                "type": "string"
              },
              "public": {
                "description": "Is the contact method public accessible",
                "type": "boolean",
                "example": "true"
              },
              "notifications": {
                "description": "Does the contact method needs to receive notifications",
                "type": "boolean",
                "example": "false"
              }
            },
            "type": "object",
            "title": "ContactMethod",
            "x-readme-ref-name": "ContactMethod"
          },
          {
            "properties": {
              "merchant": {
                "required": [
                  "code",
                  "name",
                  "status"
                ],
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string",
                    "example": "ACTIVE"
                  }
                },
                "type": "object",
                "title": "MerchantMinimal",
                "x-readme-ref-name": "MerchantMinimal"
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object"
          }
        ],
        "title": "MerchantContactMethod",
        "x-readme-ref-name": "MerchantContactMethod"
      },
      "MerchantCreate": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "publicName": {
                "description": "The public name of your merchant.",
                "type": "string",
                "example": "CompanyName"
              },
              "boardingStatus": {
                "description": "The status of the boarding process for this merchant.",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "ONBOARDING",
                  "ACCEPTED",
                  "SUSPENDED",
                  "OFFBOARDED"
                ],
                "example": "REGISTERED"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              },
              "payoutStatus": {
                "description": "Merchant payout state",
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ],
                "example": "Enabled"
              },
              "coc": {
                "description": "Your Chamber of commerce registration number. This format differs per country.",
                "type": "string",
                "example": "12345678"
              },
              "vat": {
                "description": "Value added tax identification number (VAT identification number).",
                "type": "string",
                "example": "NL807960147B01"
              },
              "companyTypeId": {
                "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                "type": "string",
                "example": "1"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "example": "NL"
              },
              "contractLanguage": {
                "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                "type": "string",
                "example": "nl_NL"
              },
              "contractPackage": {
                "type": "string"
              },
              "accountManager": {
                "description": "The email address of the active account manager.",
                "type": "string",
                "example": "account.manager@pay.nl"
              },
              "website": {
                "description": "The website.",
                "type": "string",
                "format": "uri",
                "example": "https://www.my-website.com"
              },
              "categories": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The category (code) identifier",
                      "type": "string",
                      "maxLength": 40,
                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                      "example": "CY-1234-4321"
                    },
                    "name": {
                      "description": "The category name.",
                      "type": "string",
                      "example": "Digitale diensten gambling (kansspelen)"
                    },
                    "description": {
                      "description": "The category's description.",
                      "type": "string",
                      "example": "Kansspelen"
                    },
                    "sequence": {
                      "description": "The sequence of the category.",
                      "type": "integer"
                    },
                    "available": {
                      "description": "The category's availability.",
                      "type": "boolean"
                    },
                    "initialMCC": {
                      "description": "The initial MCC of the category.",
                      "type": "integer",
                      "example": "General Contractors-Residential and Commercial",
                      "nullable": true
                    },
                    "initialRiskCategory": {
                      "description": "The initial risk category of the category.",
                      "type": "string",
                      "example": "Low risk"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The payment profile identifier.",
                            "type": "integer",
                            "example": "1630"
                          },
                          "name": {
                            "description": "The name of the payment profile.",
                            "type": "string",
                            "example": "Pin (Maestro)"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Category",
                  "x-readme-ref-name": "Category"
                }
              },
              "integrations": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The plugin identifier.",
                      "type": "string",
                      "example": "PL-3010-1000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "clearingAccounts": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "status",
                    "method",
                    "iban"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "APPROVED",
                        "DENIED",
                        "NOT_CHECKED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "iban"
                      ]
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    }
                  },
                  "type": "object"
                }
              },
              "postalAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "visitAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "contactMethods": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The contact method ID of your company starting with CM.",
                      "type": "string",
                      "example": "CM-1234-4321"
                    },
                    "type": {
                      "description": "The type of contact method.",
                      "type": "string",
                      "enum": [
                        "email",
                        "email_support",
                        "phone",
                        "phone_helpdesk",
                        "phone_off_hours",
                        "url",
                        "email_msnskype"
                      ],
                      "example": "The type of contact method."
                    },
                    "value": {
                      "description": "The value of the contact method.",
                      "type": "string",
                      "example": "088-88 666 22"
                    },
                    "description": {
                      "description": "The description of the contact method.",
                      "type": "string"
                    },
                    "public": {
                      "description": "Is the contact method public accessible",
                      "type": "boolean",
                      "example": "true"
                    },
                    "notifications": {
                      "description": "Does the contact method needs to receive notifications",
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object",
                  "title": "ContactMethod",
                  "x-readme-ref-name": "ContactMethod"
                }
              },
              "authenticationTokens": {
                "type": "array",
                "items": {
                  "properties": {
                    "authenticationTokens": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "trademarks": {
                "type": "array",
                "items": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                }
              },
              "licenses": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "secret": {
                      "type": "string",
                      "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                    },
                    "name": {
                      "type": "string"
                    },
                    "accountCode": {
                      "type": "string",
                      "example": "A-1234-4321"
                    },
                    "firstName": {
                      "description": "The forename (also known as a given name, Christian name or a first name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John",
                      "nullable": true
                    },
                    "lastName": {
                      "description": "The surname (also known as a family name or a last name).",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Doe"
                    },
                    "email": {
                      "description": "An email address.",
                      "type": "string",
                      "format": "email",
                      "example": "sandbox@pay.nl"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "enum": [
                        "NL",
                        "EN",
                        "DE",
                        "FR",
                        "IT",
                        "ES"
                      ],
                      "example": "NL"
                    },
                    "phone": {
                      "description": "The subject's phone number. Optionally prepended with a + and country code",
                      "type": "string",
                      "example": "0031612345678"
                    },
                    "visitAddress": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "streetNumberExtension": {
                          "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "b1"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "regionCode": {
                          "description": "Region code (iso-3166-2)",
                          "type": "string",
                          "example": "ZH"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Address",
                      "x-readme-ref-name": "Address"
                    },
                    "complianceData": {
                      "allOf": [
                        {
                          "properties": {
                            "pep": {
                              "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                              "type": "boolean",
                              "example": "true"
                            },
                            "pepDescription": {
                              "description": "Describe in your own words why this person is a PEP.",
                              "type": "string",
                              "example": "The person is active as an alderman in the municipality where he lives."
                            },
                            "dateOfBirth": {
                              "description": "Date of birth of the person.",
                              "type": "string",
                              "format": "date-time",
                              "example": "1999-12-12"
                            },
                            "nationality": {
                              "description": "Nationality of the person.",
                              "type": "string",
                              "example": "NL"
                            },
                            "idDocumentNumber": {
                              "description": "The id document number of the person",
                              "type": "string",
                              "example": ""
                            }
                          },
                          "type": "object",
                          "title": "ComplianceData",
                          "x-readme-ref-name": "ComplianceData"
                        },
                        {
                          "properties": {
                            "ubo": {
                              "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                              "type": "string",
                              "enum": [
                                "no",
                                "direct",
                                "indirect",
                                "pseudo"
                              ],
                              "example": "direct"
                            },
                            "uboPercentage": {
                              "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                              "type": "integer",
                              "example": "25"
                            },
                            "authorizedToSign": {
                              "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                              "type": "string",
                              "enum": [
                                "no",
                                "alone",
                                "shared"
                              ],
                              "example": "shared"
                            },
                            "relationshipDescription": {
                              "description": "Describe in your own words the relation the person has with this company.",
                              "type": "string",
                              "example": "John Doe of test company"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ComplianceDataPerson",
                      "x-readme-ref-name": "ComplianceDataPerson"
                    }
                  },
                  "type": "object",
                  "title": "Person",
                  "x-readme-ref-name": "Person"
                }
              },
              "services": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "category": {
                      "properties": {
                        "code": {
                          "description": "The category (code) identifier",
                          "type": "string",
                          "maxLength": 40,
                          "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                          "example": "CY-1234-4321"
                        },
                        "name": {
                          "description": "The category name.",
                          "type": "string",
                          "example": "Digitale diensten gambling (kansspelen)"
                        }
                      },
                      "type": "object"
                    },
                    "integration": {
                      "properties": {
                        "code": {
                          "description": "The plugin identifier.",
                          "type": "string",
                          "example": "PL-3010-1000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "website": {
                      "description": "The website URL.",
                      "type": "string",
                      "example": "https://www.pay.nl"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The code of the website URL.",
                            "type": "string",
                            "example": "WU-1234-1234"
                          },
                          "website": {
                            "description": "The website URL.",
                            "type": "string",
                            "example": "https://www.pay.nl"
                          }
                        },
                        "type": "object",
                        "title": "WebsiteUrl",
                        "x-readme-ref-name": "WebsiteUrl"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "partner": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "accessToMerchant": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "title": "Partner",
                  "x-readme-ref-name": "Partner"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "acceptedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedBy": {
                "description": "SUSPENDED_BY_DESCRIPTION",
                "type": "string",
                "example": "A-1234-4321",
                "nullable": true
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "reviewedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "nextReviewDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object",
            "title": "Merchant",
            "x-readme-ref-name": "Merchant"
          },
          {
            "properties": {
              "service": {
                "required": [
                  "name",
                  "description",
                  "categoryCode",
                  "integrationCode",
                  "publication"
                ],
                "properties": {
                  "name": {
                    "description": "The name of your service.",
                    "type": "string",
                    "example": "My first service!"
                  },
                  "description": {
                    "description": "The description of the service.",
                    "type": "string"
                  },
                  "categoryCode": {
                    "type": "string",
                    "example": "CY-1234-4321"
                  },
                  "integrationCode": {
                    "type": "string",
                    "example": "PV-1234-4321"
                  },
                  "publication": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "title": "MerchantCreate",
        "x-readme-ref-name": "MerchantCreate"
      },
      "MerchantInfo": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "publicName": {
                "description": "The public name of your merchant.",
                "type": "string",
                "example": "CompanyName"
              },
              "boardingStatus": {
                "description": "The status of the boarding process for this merchant.",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "ONBOARDING",
                  "ACCEPTED",
                  "SUSPENDED",
                  "OFFBOARDED"
                ],
                "example": "REGISTERED"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              },
              "payoutStatus": {
                "description": "Merchant payout state",
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ],
                "example": "Enabled"
              },
              "coc": {
                "description": "Your Chamber of commerce registration number. This format differs per country.",
                "type": "string",
                "example": "12345678"
              },
              "vat": {
                "description": "Value added tax identification number (VAT identification number).",
                "type": "string",
                "example": "NL807960147B01"
              },
              "companyTypeId": {
                "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                "type": "string",
                "example": "1"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "example": "NL"
              },
              "contractLanguage": {
                "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                "type": "string",
                "example": "nl_NL"
              },
              "contractPackage": {
                "type": "string"
              },
              "accountManager": {
                "description": "The email address of the active account manager.",
                "type": "string",
                "example": "account.manager@pay.nl"
              },
              "website": {
                "description": "The website.",
                "type": "string",
                "format": "uri",
                "example": "https://www.my-website.com"
              },
              "categories": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The category (code) identifier",
                      "type": "string",
                      "maxLength": 40,
                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                      "example": "CY-1234-4321"
                    },
                    "name": {
                      "description": "The category name.",
                      "type": "string",
                      "example": "Digitale diensten gambling (kansspelen)"
                    },
                    "description": {
                      "description": "The category's description.",
                      "type": "string",
                      "example": "Kansspelen"
                    },
                    "sequence": {
                      "description": "The sequence of the category.",
                      "type": "integer"
                    },
                    "available": {
                      "description": "The category's availability.",
                      "type": "boolean"
                    },
                    "initialMCC": {
                      "description": "The initial MCC of the category.",
                      "type": "integer",
                      "example": "General Contractors-Residential and Commercial",
                      "nullable": true
                    },
                    "initialRiskCategory": {
                      "description": "The initial risk category of the category.",
                      "type": "string",
                      "example": "Low risk"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The payment profile identifier.",
                            "type": "integer",
                            "example": "1630"
                          },
                          "name": {
                            "description": "The name of the payment profile.",
                            "type": "string",
                            "example": "Pin (Maestro)"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Category",
                  "x-readme-ref-name": "Category"
                }
              },
              "integrations": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The plugin identifier.",
                      "type": "string",
                      "example": "PL-3010-1000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "clearingAccounts": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "status",
                    "method",
                    "iban"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "APPROVED",
                        "DENIED",
                        "NOT_CHECKED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "iban"
                      ]
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    }
                  },
                  "type": "object"
                }
              },
              "postalAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "visitAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "contactMethods": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The contact method ID of your company starting with CM.",
                      "type": "string",
                      "example": "CM-1234-4321"
                    },
                    "type": {
                      "description": "The type of contact method.",
                      "type": "string",
                      "enum": [
                        "email",
                        "email_support",
                        "phone",
                        "phone_helpdesk",
                        "phone_off_hours",
                        "url",
                        "email_msnskype"
                      ],
                      "example": "The type of contact method."
                    },
                    "value": {
                      "description": "The value of the contact method.",
                      "type": "string",
                      "example": "088-88 666 22"
                    },
                    "description": {
                      "description": "The description of the contact method.",
                      "type": "string"
                    },
                    "public": {
                      "description": "Is the contact method public accessible",
                      "type": "boolean",
                      "example": "true"
                    },
                    "notifications": {
                      "description": "Does the contact method needs to receive notifications",
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object",
                  "title": "ContactMethod",
                  "x-readme-ref-name": "ContactMethod"
                }
              },
              "authenticationTokens": {
                "type": "array",
                "items": {
                  "properties": {
                    "authenticationTokens": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "trademarks": {
                "type": "array",
                "items": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                }
              },
              "licenses": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "secret": {
                      "type": "string",
                      "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                    },
                    "name": {
                      "type": "string"
                    },
                    "accountCode": {
                      "type": "string",
                      "example": "A-1234-4321"
                    },
                    "firstName": {
                      "description": "The forename (also known as a given name, Christian name or a first name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John",
                      "nullable": true
                    },
                    "lastName": {
                      "description": "The surname (also known as a family name or a last name).",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Doe"
                    },
                    "email": {
                      "description": "An email address.",
                      "type": "string",
                      "format": "email",
                      "example": "sandbox@pay.nl"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "enum": [
                        "NL",
                        "EN",
                        "DE",
                        "FR",
                        "IT",
                        "ES"
                      ],
                      "example": "NL"
                    },
                    "phone": {
                      "description": "The subject's phone number. Optionally prepended with a + and country code",
                      "type": "string",
                      "example": "0031612345678"
                    },
                    "visitAddress": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "streetNumberExtension": {
                          "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "b1"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "regionCode": {
                          "description": "Region code (iso-3166-2)",
                          "type": "string",
                          "example": "ZH"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Address",
                      "x-readme-ref-name": "Address"
                    },
                    "complianceData": {
                      "allOf": [
                        {
                          "properties": {
                            "pep": {
                              "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                              "type": "boolean",
                              "example": "true"
                            },
                            "pepDescription": {
                              "description": "Describe in your own words why this person is a PEP.",
                              "type": "string",
                              "example": "The person is active as an alderman in the municipality where he lives."
                            },
                            "dateOfBirth": {
                              "description": "Date of birth of the person.",
                              "type": "string",
                              "format": "date-time",
                              "example": "1999-12-12"
                            },
                            "nationality": {
                              "description": "Nationality of the person.",
                              "type": "string",
                              "example": "NL"
                            },
                            "idDocumentNumber": {
                              "description": "The id document number of the person",
                              "type": "string",
                              "example": ""
                            }
                          },
                          "type": "object",
                          "title": "ComplianceData",
                          "x-readme-ref-name": "ComplianceData"
                        },
                        {
                          "properties": {
                            "ubo": {
                              "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                              "type": "string",
                              "enum": [
                                "no",
                                "direct",
                                "indirect",
                                "pseudo"
                              ],
                              "example": "direct"
                            },
                            "uboPercentage": {
                              "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                              "type": "integer",
                              "example": "25"
                            },
                            "authorizedToSign": {
                              "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                              "type": "string",
                              "enum": [
                                "no",
                                "alone",
                                "shared"
                              ],
                              "example": "shared"
                            },
                            "relationshipDescription": {
                              "description": "Describe in your own words the relation the person has with this company.",
                              "type": "string",
                              "example": "John Doe of test company"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ComplianceDataPerson",
                      "x-readme-ref-name": "ComplianceDataPerson"
                    }
                  },
                  "type": "object",
                  "title": "Person",
                  "x-readme-ref-name": "Person"
                }
              },
              "services": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "category": {
                      "properties": {
                        "code": {
                          "description": "The category (code) identifier",
                          "type": "string",
                          "maxLength": 40,
                          "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                          "example": "CY-1234-4321"
                        },
                        "name": {
                          "description": "The category name.",
                          "type": "string",
                          "example": "Digitale diensten gambling (kansspelen)"
                        }
                      },
                      "type": "object"
                    },
                    "integration": {
                      "properties": {
                        "code": {
                          "description": "The plugin identifier.",
                          "type": "string",
                          "example": "PL-3010-1000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "website": {
                      "description": "The website URL.",
                      "type": "string",
                      "example": "https://www.pay.nl"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The code of the website URL.",
                            "type": "string",
                            "example": "WU-1234-1234"
                          },
                          "website": {
                            "description": "The website URL.",
                            "type": "string",
                            "example": "https://www.pay.nl"
                          }
                        },
                        "type": "object",
                        "title": "WebsiteUrl",
                        "x-readme-ref-name": "WebsiteUrl"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "partner": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "accessToMerchant": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "title": "Partner",
                  "x-readme-ref-name": "Partner"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "acceptedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedBy": {
                "description": "SUSPENDED_BY_DESCRIPTION",
                "type": "string",
                "example": "A-1234-4321",
                "nullable": true
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "reviewedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "nextReviewDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object",
            "title": "Merchant",
            "x-readme-ref-name": "Merchant"
          },
          {
            "properties": {
              "documents": {
                "properties": {
                  "code": {
                    "description": "Code of the acceptance document.",
                    "type": "string",
                    "example": "D-1234-1234"
                  },
                  "type": {
                    "description": "Type of the acceptance document.",
                    "type": "string",
                    "example": "identification"
                  },
                  "status": {
                    "description": "Status of the acceptance document.",
                    "type": "string",
                    "example": "UPLOADED"
                  }
                },
                "type": "object",
                "title": "Document",
                "x-readme-ref-name": "Document"
              },
              "licenses": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "AL-1234-4321"
                        },
                        "secret": {
                          "type": "string",
                          "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                        },
                        "name": {
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "email": {
                          "description": "An email address.",
                          "type": "string",
                          "format": "email",
                          "example": "sandbox@pay.nl"
                        },
                        "language": {
                          "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                          "type": "string",
                          "enum": [
                            "NL",
                            "EN",
                            "DE",
                            "FR",
                            "IT",
                            "ES"
                          ],
                          "example": "NL"
                        },
                        "visitAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "complianceData": {
                          "properties": {
                            "pep": {
                              "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                              "type": "boolean",
                              "example": "true"
                            },
                            "pepDescription": {
                              "description": "Describe in your own words why this person is a PEP.",
                              "type": "string",
                              "example": "The person is active as an alderman in the municipality where he lives."
                            },
                            "dateOfBirth": {
                              "description": "Date of birth of the person.",
                              "type": "string",
                              "format": "date-time",
                              "example": "1999-12-12"
                            },
                            "nationality": {
                              "description": "Nationality of the person.",
                              "type": "string",
                              "example": "NL"
                            },
                            "idDocumentNumber": {
                              "description": "The id document number of the person",
                              "type": "string",
                              "example": ""
                            }
                          },
                          "type": "object",
                          "title": "ComplianceData",
                          "x-readme-ref-name": "ComplianceData"
                        },
                        "documents": {
                          "properties": {
                            "code": {
                              "description": "Code of the acceptance document.",
                              "type": "string",
                              "example": "D-1234-1234"
                            },
                            "type": {
                              "description": "Type of the acceptance document.",
                              "type": "string",
                              "example": "identification"
                            },
                            "status": {
                              "description": "Status of the acceptance document.",
                              "type": "string",
                              "example": "UPLOADED"
                            }
                          },
                          "type": "object",
                          "title": "Document",
                          "x-readme-ref-name": "Document"
                        },
                        "createdAt": {
                          "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": false
                        },
                        "createdBy": {
                          "description": "The reference to an account or token whom created the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": false
                        },
                        "modifiedAt": {
                          "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "modifiedBy": {
                          "description": "The reference to an account or token whom modified the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        },
                        "acceptedAt": {
                          "description": "The date and time an account was accepted.",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "2023-11-01T10:19:25+01:00",
                          "nullable": false
                        },
                        "deletedAt": {
                          "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2016-06-04T08:15:00+01:00",
                          "nullable": true
                        },
                        "deletedBy": {
                          "description": "The reference to an account or token whom deleted the entity",
                          "type": "string",
                          "pattern": "^A(T)?(-\\d{4}){2}$",
                          "readOnly": true,
                          "example": "A-1234-4321",
                          "nullable": true
                        }
                      },
                      "type": "object",
                      "title": "PersonCompliance",
                      "x-readme-ref-name": "PersonCompliance"
                    }
                  ],
                  "title": "PersonComplianceMinimal",
                  "x-readme-ref-name": "PersonComplianceMinimal"
                }
              }
            },
            "type": "object"
          }
        ],
        "title": "MerchantInfo",
        "x-readme-ref-name": "MerchantInfo"
      },
      "MerchantInfoInternal": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "publicName": {
                "description": "The public name of your merchant.",
                "type": "string",
                "example": "CompanyName"
              },
              "boardingStatus": {
                "description": "The status of the boarding process for this merchant.",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "ONBOARDING",
                  "ACCEPTED",
                  "SUSPENDED",
                  "OFFBOARDED"
                ],
                "example": "REGISTERED"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              },
              "payoutStatus": {
                "description": "Merchant payout state",
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ],
                "example": "Enabled"
              },
              "coc": {
                "description": "Your Chamber of commerce registration number. This format differs per country.",
                "type": "string",
                "example": "12345678"
              },
              "vat": {
                "description": "Value added tax identification number (VAT identification number).",
                "type": "string",
                "example": "NL807960147B01"
              },
              "companyTypeId": {
                "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                "type": "string",
                "example": "1"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "example": "NL"
              },
              "contractLanguage": {
                "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                "type": "string",
                "example": "nl_NL"
              },
              "contractPackage": {
                "type": "string"
              },
              "accountManager": {
                "description": "The email address of the active account manager.",
                "type": "string",
                "example": "account.manager@pay.nl"
              },
              "website": {
                "description": "The website.",
                "type": "string",
                "format": "uri",
                "example": "https://www.my-website.com"
              },
              "categories": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The category (code) identifier",
                      "type": "string",
                      "maxLength": 40,
                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                      "example": "CY-1234-4321"
                    },
                    "name": {
                      "description": "The category name.",
                      "type": "string",
                      "example": "Digitale diensten gambling (kansspelen)"
                    },
                    "description": {
                      "description": "The category's description.",
                      "type": "string",
                      "example": "Kansspelen"
                    },
                    "sequence": {
                      "description": "The sequence of the category.",
                      "type": "integer"
                    },
                    "available": {
                      "description": "The category's availability.",
                      "type": "boolean"
                    },
                    "initialMCC": {
                      "description": "The initial MCC of the category.",
                      "type": "integer",
                      "example": "General Contractors-Residential and Commercial",
                      "nullable": true
                    },
                    "initialRiskCategory": {
                      "description": "The initial risk category of the category.",
                      "type": "string",
                      "example": "Low risk"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The payment profile identifier.",
                            "type": "integer",
                            "example": "1630"
                          },
                          "name": {
                            "description": "The name of the payment profile.",
                            "type": "string",
                            "example": "Pin (Maestro)"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Category",
                  "x-readme-ref-name": "Category"
                }
              },
              "integrations": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The plugin identifier.",
                      "type": "string",
                      "example": "PL-3010-1000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "clearingAccounts": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "status",
                    "method",
                    "iban"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "APPROVED",
                        "DENIED",
                        "NOT_CHECKED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "iban"
                      ]
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    }
                  },
                  "type": "object"
                }
              },
              "postalAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "visitAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "contactMethods": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The contact method ID of your company starting with CM.",
                      "type": "string",
                      "example": "CM-1234-4321"
                    },
                    "type": {
                      "description": "The type of contact method.",
                      "type": "string",
                      "enum": [
                        "email",
                        "email_support",
                        "phone",
                        "phone_helpdesk",
                        "phone_off_hours",
                        "url",
                        "email_msnskype"
                      ],
                      "example": "The type of contact method."
                    },
                    "value": {
                      "description": "The value of the contact method.",
                      "type": "string",
                      "example": "088-88 666 22"
                    },
                    "description": {
                      "description": "The description of the contact method.",
                      "type": "string"
                    },
                    "public": {
                      "description": "Is the contact method public accessible",
                      "type": "boolean",
                      "example": "true"
                    },
                    "notifications": {
                      "description": "Does the contact method needs to receive notifications",
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object",
                  "title": "ContactMethod",
                  "x-readme-ref-name": "ContactMethod"
                }
              },
              "authenticationTokens": {
                "type": "array",
                "items": {
                  "properties": {
                    "authenticationTokens": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "trademarks": {
                "type": "array",
                "items": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                }
              },
              "licenses": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "secret": {
                      "type": "string",
                      "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                    },
                    "name": {
                      "type": "string"
                    },
                    "accountCode": {
                      "type": "string",
                      "example": "A-1234-4321"
                    },
                    "firstName": {
                      "description": "The forename (also known as a given name, Christian name or a first name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John",
                      "nullable": true
                    },
                    "lastName": {
                      "description": "The surname (also known as a family name or a last name).",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Doe"
                    },
                    "email": {
                      "description": "An email address.",
                      "type": "string",
                      "format": "email",
                      "example": "sandbox@pay.nl"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "enum": [
                        "NL",
                        "EN",
                        "DE",
                        "FR",
                        "IT",
                        "ES"
                      ],
                      "example": "NL"
                    },
                    "phone": {
                      "description": "The subject's phone number. Optionally prepended with a + and country code",
                      "type": "string",
                      "example": "0031612345678"
                    },
                    "visitAddress": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "streetNumberExtension": {
                          "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "b1"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "regionCode": {
                          "description": "Region code (iso-3166-2)",
                          "type": "string",
                          "example": "ZH"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Address",
                      "x-readme-ref-name": "Address"
                    },
                    "complianceData": {
                      "allOf": [
                        {
                          "properties": {
                            "pep": {
                              "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                              "type": "boolean",
                              "example": "true"
                            },
                            "pepDescription": {
                              "description": "Describe in your own words why this person is a PEP.",
                              "type": "string",
                              "example": "The person is active as an alderman in the municipality where he lives."
                            },
                            "dateOfBirth": {
                              "description": "Date of birth of the person.",
                              "type": "string",
                              "format": "date-time",
                              "example": "1999-12-12"
                            },
                            "nationality": {
                              "description": "Nationality of the person.",
                              "type": "string",
                              "example": "NL"
                            },
                            "idDocumentNumber": {
                              "description": "The id document number of the person",
                              "type": "string",
                              "example": ""
                            }
                          },
                          "type": "object",
                          "title": "ComplianceData",
                          "x-readme-ref-name": "ComplianceData"
                        },
                        {
                          "properties": {
                            "ubo": {
                              "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                              "type": "string",
                              "enum": [
                                "no",
                                "direct",
                                "indirect",
                                "pseudo"
                              ],
                              "example": "direct"
                            },
                            "uboPercentage": {
                              "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                              "type": "integer",
                              "example": "25"
                            },
                            "authorizedToSign": {
                              "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                              "type": "string",
                              "enum": [
                                "no",
                                "alone",
                                "shared"
                              ],
                              "example": "shared"
                            },
                            "relationshipDescription": {
                              "description": "Describe in your own words the relation the person has with this company.",
                              "type": "string",
                              "example": "John Doe of test company"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ComplianceDataPerson",
                      "x-readme-ref-name": "ComplianceDataPerson"
                    }
                  },
                  "type": "object",
                  "title": "Person",
                  "x-readme-ref-name": "Person"
                }
              },
              "services": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "category": {
                      "properties": {
                        "code": {
                          "description": "The category (code) identifier",
                          "type": "string",
                          "maxLength": 40,
                          "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                          "example": "CY-1234-4321"
                        },
                        "name": {
                          "description": "The category name.",
                          "type": "string",
                          "example": "Digitale diensten gambling (kansspelen)"
                        }
                      },
                      "type": "object"
                    },
                    "integration": {
                      "properties": {
                        "code": {
                          "description": "The plugin identifier.",
                          "type": "string",
                          "example": "PL-3010-1000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "website": {
                      "description": "The website URL.",
                      "type": "string",
                      "example": "https://www.pay.nl"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The code of the website URL.",
                            "type": "string",
                            "example": "WU-1234-1234"
                          },
                          "website": {
                            "description": "The website URL.",
                            "type": "string",
                            "example": "https://www.pay.nl"
                          }
                        },
                        "type": "object",
                        "title": "WebsiteUrl",
                        "x-readme-ref-name": "WebsiteUrl"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "partner": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "accessToMerchant": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "title": "Partner",
                  "x-readme-ref-name": "Partner"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "acceptedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedBy": {
                "description": "SUSPENDED_BY_DESCRIPTION",
                "type": "string",
                "example": "A-1234-4321",
                "nullable": true
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "reviewedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "nextReviewDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object",
            "title": "Merchant",
            "x-readme-ref-name": "Merchant"
          },
          {
            "properties": {
              "clearingFrequency": {
                "description": "Clearing frequency.",
                "type": "string",
                "example": "manual"
              },
              "invoiceFrequency": {
                "description": "Invoice frequency.",
                "type": "string",
                "example": "month"
              },
              "grade": {
                "description": "Grade of the merchant.",
                "type": "string",
                "example": "D"
              },
              "outPaymentScheme": {
                "description": "Outpayment scheme of the merchant.",
                "type": "string",
                "example": ""
              },
              "refundPolicy": {
                "description": "Refund policy of the merchant.",
                "type": "string",
                "example": "Standard"
              },
              "administration": {
                "description": "Administration of the merchant.",
                "type": "string",
                "example": "Standard merchant"
              },
              "documents": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "Code of the acceptance document.",
                      "type": "string",
                      "example": "D-1234-1234"
                    },
                    "type": {
                      "description": "Type of the acceptance document.",
                      "type": "string",
                      "example": "identification"
                    },
                    "status": {
                      "description": "Status of the acceptance document.",
                      "type": "string",
                      "example": "UPLOADED"
                    }
                  },
                  "type": "object",
                  "title": "Document",
                  "x-readme-ref-name": "Document"
                }
              },
              "licenses": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "properties": {
                        "code": {
                          "type": "string",
                          "example": "AL-1234-4321"
                        },
                        "secret": {
                          "type": "string",
                          "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                        },
                        "name": {
                          "type": "string"
                        },
                        "accountCode": {
                          "type": "string",
                          "example": "A-1234-4321"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John",
                          "nullable": true
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "email": {
                          "description": "An email address.",
                          "type": "string",
                          "format": "email",
                          "example": "sandbox@pay.nl"
                        },
                        "language": {
                          "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                          "type": "string",
                          "enum": [
                            "NL",
                            "EN",
                            "DE",
                            "FR",
                            "IT",
                            "ES"
                          ],
                          "example": "NL"
                        },
                        "phone": {
                          "description": "The subject's phone number. Optionally prepended with a + and country code",
                          "type": "string",
                          "example": "0031612345678"
                        },
                        "visitAddress": {
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "firstName": {
                              "description": "The forename (also known as a given name, Christian name or a first name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "John"
                            },
                            "lastName": {
                              "description": "The surname (also known as a family name or a last name).",
                              "type": "string",
                              "maxLength": 64,
                              "minLength": 1,
                              "example": "Doe"
                            },
                            "streetName": {
                              "description": "The name of the street",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Visitlane"
                            },
                            "streetNumber": {
                              "description": "The street number",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "13"
                            },
                            "streetNumberExtension": {
                              "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                              "type": "string",
                              "maxLength": 32,
                              "minLength": 1,
                              "example": "b1"
                            },
                            "zipCode": {
                              "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                              "type": "string",
                              "maxLength": 16,
                              "minLength": 1,
                              "example": "5678CD"
                            },
                            "city": {
                              "description": "The name of a city",
                              "type": "string",
                              "maxLength": 128,
                              "minLength": 1,
                              "example": "Amsterdam"
                            },
                            "regionCode": {
                              "description": "Region code (iso-3166-2)",
                              "type": "string",
                              "example": "ZH"
                            },
                            "countryCode": {
                              "description": "The country code consisting of 2 uppercase letters",
                              "type": "string",
                              "maxLength": 2,
                              "minLength": 2,
                              "example": "NL"
                            }
                          },
                          "type": "object",
                          "title": "Address",
                          "x-readme-ref-name": "Address"
                        },
                        "complianceData": {
                          "allOf": [
                            {
                              "properties": {
                                "pep": {
                                  "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                                  "type": "boolean",
                                  "example": "true"
                                },
                                "pepDescription": {
                                  "description": "Describe in your own words why this person is a PEP.",
                                  "type": "string",
                                  "example": "The person is active as an alderman in the municipality where he lives."
                                },
                                "dateOfBirth": {
                                  "description": "Date of birth of the person.",
                                  "type": "string",
                                  "format": "date-time",
                                  "example": "1999-12-12"
                                },
                                "nationality": {
                                  "description": "Nationality of the person.",
                                  "type": "string",
                                  "example": "NL"
                                },
                                "idDocumentNumber": {
                                  "description": "The id document number of the person",
                                  "type": "string",
                                  "example": ""
                                }
                              },
                              "type": "object",
                              "title": "ComplianceData",
                              "x-readme-ref-name": "ComplianceData"
                            },
                            {
                              "properties": {
                                "ubo": {
                                  "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                                  "type": "string",
                                  "enum": [
                                    "no",
                                    "direct",
                                    "indirect",
                                    "pseudo"
                                  ],
                                  "example": "direct"
                                },
                                "uboPercentage": {
                                  "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                                  "type": "integer",
                                  "example": "25"
                                },
                                "authorizedToSign": {
                                  "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                                  "type": "string",
                                  "enum": [
                                    "no",
                                    "alone",
                                    "shared"
                                  ],
                                  "example": "shared"
                                },
                                "relationshipDescription": {
                                  "description": "Describe in your own words the relation the person has with this company.",
                                  "type": "string",
                                  "example": "John Doe of test company"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "title": "ComplianceDataPerson",
                          "x-readme-ref-name": "ComplianceDataPerson"
                        }
                      },
                      "type": "object",
                      "title": "Person",
                      "x-readme-ref-name": "Person"
                    },
                    {
                      "properties": {
                        "documents": {
                          "properties": {
                            "code": {
                              "description": "Code of the acceptance document.",
                              "type": "string",
                              "example": "D-1234-1234"
                            },
                            "type": {
                              "description": "Type of the acceptance document.",
                              "type": "string",
                              "example": "identification"
                            },
                            "status": {
                              "description": "Status of the acceptance document.",
                              "type": "string",
                              "example": "UPLOADED"
                            }
                          },
                          "type": "object",
                          "title": "Document",
                          "x-readme-ref-name": "Document"
                        },
                        "notificationGroup": {
                          "properties": {
                            "technical": {
                              "type": "boolean"
                            },
                            "financial": {
                              "type": "boolean"
                            },
                            "operations": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        },
                        "platform": {
                          "required": [
                            "authorisation"
                          ],
                          "properties": {
                            "loginAccount": {
                              "type": "boolean"
                            },
                            "loginTpa": {
                              "type": "boolean"
                            },
                            "authorisation": {
                              "type": "string",
                              "enum": [
                                "all",
                                "specified"
                              ]
                            },
                            "authorisationGroups": {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "AG-1234-4321"
                              }
                            }
                          },
                          "type": "object"
                        },
                        "roles": {
                          "properties": {
                            "primaryContactPerson": {
                              "type": "boolean"
                            },
                            "internalAdministrator": {
                              "type": "boolean"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "title": "PersonInfoInternal",
                  "x-readme-ref-name": "PersonInfoInternal"
                }
              }
            },
            "type": "object"
          }
        ],
        "title": "MerchantInfoInternal",
        "x-readme-ref-name": "MerchantInfoInternal"
      },
      "MerchantMinimal": {
        "required": [
          "code",
          "name",
          "status"
        ],
        "properties": {
          "code": {
            "description": "The merchant id of your company starting with M.",
            "type": "string",
            "example": "M-1234-4321"
          },
          "name": {
            "description": "The name of your merchant.",
            "type": "string",
            "maxLength": 128,
            "minLength": 2,
            "example": "CompanyName"
          },
          "status": {
            "description": "Merchant state",
            "type": "string",
            "example": "ACTIVE"
          }
        },
        "type": "object",
        "title": "MerchantMinimal",
        "x-readme-ref-name": "MerchantMinimal"
      },
      "MerchantPartial": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "publicName": {
                "description": "The public name of your merchant.",
                "type": "string",
                "example": "CompanyName"
              },
              "boardingStatus": {
                "description": "The status of the boarding process for this merchant.",
                "type": "string",
                "enum": [
                  "REGISTERED",
                  "ONBOARDING",
                  "ACCEPTED",
                  "SUSPENDED",
                  "OFFBOARDED"
                ],
                "example": "REGISTERED"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              },
              "payoutStatus": {
                "description": "Merchant payout state",
                "type": "string",
                "enum": [
                  "ENABLED",
                  "DISABLED"
                ],
                "example": "Enabled"
              },
              "coc": {
                "description": "Your Chamber of commerce registration number. This format differs per country.",
                "type": "string",
                "example": "12345678"
              },
              "vat": {
                "description": "Value added tax identification number (VAT identification number).",
                "type": "string",
                "example": "NL807960147B01"
              },
              "companyTypeId": {
                "description": "ID of the company type. The available company types can be retrieved with the Core Data API Companytypes (https://developer.pay.nl/reference/get_companytypes)",
                "type": "string",
                "example": "1"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "example": "NL"
              },
              "contractLanguage": {
                "description": "The language code supplied needs to be a locale in i18n format. The available languages can be retrieved with the Core Data API Languages (https://developer.pay.nl/reference/get_languages) where the contractLanguageAvailable flag is set to 'True'",
                "type": "string",
                "example": "nl_NL"
              },
              "contractPackage": {
                "type": "string"
              },
              "accountManager": {
                "description": "The email address of the active account manager.",
                "type": "string",
                "example": "account.manager@pay.nl"
              },
              "website": {
                "description": "The website.",
                "type": "string",
                "format": "uri",
                "example": "https://www.my-website.com"
              },
              "categories": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The category (code) identifier",
                      "type": "string",
                      "maxLength": 40,
                      "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                      "example": "CY-1234-4321"
                    },
                    "name": {
                      "description": "The category name.",
                      "type": "string",
                      "example": "Digitale diensten gambling (kansspelen)"
                    },
                    "description": {
                      "description": "The category's description.",
                      "type": "string",
                      "example": "Kansspelen"
                    },
                    "sequence": {
                      "description": "The sequence of the category.",
                      "type": "integer"
                    },
                    "available": {
                      "description": "The category's availability.",
                      "type": "boolean"
                    },
                    "initialMCC": {
                      "description": "The initial MCC of the category.",
                      "type": "integer",
                      "example": "General Contractors-Residential and Commercial",
                      "nullable": true
                    },
                    "initialRiskCategory": {
                      "description": "The initial risk category of the category.",
                      "type": "string",
                      "example": "Low risk"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "paymentMethods": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The payment profile identifier.",
                            "type": "integer",
                            "example": "1630"
                          },
                          "name": {
                            "description": "The name of the payment profile.",
                            "type": "string",
                            "example": "Pin (Maestro)"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Category",
                  "x-readme-ref-name": "Category"
                }
              },
              "integrations": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The plugin identifier.",
                      "type": "string",
                      "example": "PL-3010-1000"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "clearingAccounts": {
                "type": "array",
                "items": {
                  "required": [
                    "code",
                    "status",
                    "method",
                    "iban"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "APPROVED",
                        "DENIED",
                        "NOT_CHECKED"
                      ]
                    },
                    "method": {
                      "type": "string",
                      "enum": [
                        "iban"
                      ]
                    },
                    "iban": {
                      "required": [
                        "iban",
                        "bic",
                        "owner"
                      ],
                      "properties": {
                        "iban": {
                          "description": "The International Bank Account Number (IBAN).",
                          "type": "string",
                          "example": "NL69INGB0123456789"
                        },
                        "bic": {
                          "description": "Business Identifier Codes (BIC/SWIFT).",
                          "type": "string",
                          "example": "INGBNL2A"
                        },
                        "owner": {
                          "description": "The owner of the bank account.",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John Doe"
                        }
                      },
                      "type": "object",
                      "title": "BankAccount",
                      "x-readme-ref-name": "BankAccount"
                    }
                  },
                  "type": "object"
                }
              },
              "postalAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "visitAddress": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "contactMethods": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "The contact method ID of your company starting with CM.",
                      "type": "string",
                      "example": "CM-1234-4321"
                    },
                    "type": {
                      "description": "The type of contact method.",
                      "type": "string",
                      "enum": [
                        "email",
                        "email_support",
                        "phone",
                        "phone_helpdesk",
                        "phone_off_hours",
                        "url",
                        "email_msnskype"
                      ],
                      "example": "The type of contact method."
                    },
                    "value": {
                      "description": "The value of the contact method.",
                      "type": "string",
                      "example": "088-88 666 22"
                    },
                    "description": {
                      "description": "The description of the contact method.",
                      "type": "string"
                    },
                    "public": {
                      "description": "Is the contact method public accessible",
                      "type": "boolean",
                      "example": "true"
                    },
                    "notifications": {
                      "description": "Does the contact method needs to receive notifications",
                      "type": "boolean",
                      "example": "false"
                    }
                  },
                  "type": "object",
                  "title": "ContactMethod",
                  "x-readme-ref-name": "ContactMethod"
                }
              },
              "authenticationTokens": {
                "type": "array",
                "items": {
                  "properties": {
                    "authenticationTokens": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "trademarks": {
                "type": "array",
                "items": {
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "code": {
                      "description": "An identifier for this trademark",
                      "type": "string",
                      "example": "TM-0000-0000"
                    },
                    "type": {
                      "type": "string"
                    },
                    "name": {
                      "description": "A registered trademark name.",
                      "type": "string"
                    },
                    "status": {
                      "description": "Status of the trademark.",
                      "type": "string"
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "Trademark",
                  "x-readme-ref-name": "Trademark"
                }
              },
              "licenses": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "AL-1234-4321"
                    },
                    "secret": {
                      "type": "string",
                      "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
                    },
                    "name": {
                      "type": "string"
                    },
                    "accountCode": {
                      "type": "string",
                      "example": "A-1234-4321"
                    },
                    "firstName": {
                      "description": "The forename (also known as a given name, Christian name or a first name).",
                      "type": "string",
                      "maxLength": 64,
                      "minLength": 1,
                      "example": "John",
                      "nullable": true
                    },
                    "lastName": {
                      "description": "The surname (also known as a family name or a last name).",
                      "type": "string",
                      "maxLength": 128,
                      "minLength": 1,
                      "example": "Doe"
                    },
                    "email": {
                      "description": "An email address.",
                      "type": "string",
                      "format": "email",
                      "example": "sandbox@pay.nl"
                    },
                    "language": {
                      "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                      "type": "string",
                      "enum": [
                        "NL",
                        "EN",
                        "DE",
                        "FR",
                        "IT",
                        "ES"
                      ],
                      "example": "NL"
                    },
                    "phone": {
                      "description": "The subject's phone number. Optionally prepended with a + and country code",
                      "type": "string",
                      "example": "0031612345678"
                    },
                    "visitAddress": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "firstName": {
                          "description": "The forename (also known as a given name, Christian name or a first name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "John"
                        },
                        "lastName": {
                          "description": "The surname (also known as a family name or a last name).",
                          "type": "string",
                          "maxLength": 64,
                          "minLength": 1,
                          "example": "Doe"
                        },
                        "streetName": {
                          "description": "The name of the street",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Visitlane"
                        },
                        "streetNumber": {
                          "description": "The street number",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "13"
                        },
                        "streetNumberExtension": {
                          "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                          "type": "string",
                          "maxLength": 32,
                          "minLength": 1,
                          "example": "b1"
                        },
                        "zipCode": {
                          "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                          "type": "string",
                          "maxLength": 16,
                          "minLength": 1,
                          "example": "5678CD"
                        },
                        "city": {
                          "description": "The name of a city",
                          "type": "string",
                          "maxLength": 128,
                          "minLength": 1,
                          "example": "Amsterdam"
                        },
                        "regionCode": {
                          "description": "Region code (iso-3166-2)",
                          "type": "string",
                          "example": "ZH"
                        },
                        "countryCode": {
                          "description": "The country code consisting of 2 uppercase letters",
                          "type": "string",
                          "maxLength": 2,
                          "minLength": 2,
                          "example": "NL"
                        }
                      },
                      "type": "object",
                      "title": "Address",
                      "x-readme-ref-name": "Address"
                    },
                    "complianceData": {
                      "allOf": [
                        {
                          "properties": {
                            "pep": {
                              "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                              "type": "boolean",
                              "example": "true"
                            },
                            "pepDescription": {
                              "description": "Describe in your own words why this person is a PEP.",
                              "type": "string",
                              "example": "The person is active as an alderman in the municipality where he lives."
                            },
                            "dateOfBirth": {
                              "description": "Date of birth of the person.",
                              "type": "string",
                              "format": "date-time",
                              "example": "1999-12-12"
                            },
                            "nationality": {
                              "description": "Nationality of the person.",
                              "type": "string",
                              "example": "NL"
                            },
                            "idDocumentNumber": {
                              "description": "The id document number of the person",
                              "type": "string",
                              "example": ""
                            }
                          },
                          "type": "object",
                          "title": "ComplianceData",
                          "x-readme-ref-name": "ComplianceData"
                        },
                        {
                          "properties": {
                            "ubo": {
                              "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                              "type": "string",
                              "enum": [
                                "no",
                                "direct",
                                "indirect",
                                "pseudo"
                              ],
                              "example": "direct"
                            },
                            "uboPercentage": {
                              "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                              "type": "integer",
                              "example": "25"
                            },
                            "authorizedToSign": {
                              "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                              "type": "string",
                              "enum": [
                                "no",
                                "alone",
                                "shared"
                              ],
                              "example": "shared"
                            },
                            "relationshipDescription": {
                              "description": "Describe in your own words the relation the person has with this company.",
                              "type": "string",
                              "example": "John Doe of test company"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "title": "ComplianceDataPerson",
                      "x-readme-ref-name": "ComplianceDataPerson"
                    }
                  },
                  "type": "object",
                  "title": "Person",
                  "x-readme-ref-name": "Person"
                }
              },
              "services": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "secret": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "category": {
                      "properties": {
                        "code": {
                          "description": "The category (code) identifier",
                          "type": "string",
                          "maxLength": 40,
                          "pattern": "^[A-Z]{1,2}(-\\d{4}){2,}$",
                          "example": "CY-1234-4321"
                        },
                        "name": {
                          "description": "The category name.",
                          "type": "string",
                          "example": "Digitale diensten gambling (kansspelen)"
                        }
                      },
                      "type": "object"
                    },
                    "integration": {
                      "properties": {
                        "code": {
                          "description": "The plugin identifier.",
                          "type": "string",
                          "example": "PL-3010-1000"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "website": {
                      "description": "The website URL.",
                      "type": "string",
                      "example": "https://www.pay.nl"
                    },
                    "urls": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "code": {
                            "description": "The code of the website URL.",
                            "type": "string",
                            "example": "WU-1234-1234"
                          },
                          "website": {
                            "description": "The website URL.",
                            "type": "string",
                            "example": "https://www.pay.nl"
                          }
                        },
                        "type": "object",
                        "title": "WebsiteUrl",
                        "x-readme-ref-name": "WebsiteUrl"
                      }
                    }
                  },
                  "type": "object"
                }
              },
              "partner": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "type": "string",
                      "example": "M-1234-4321"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "accessToMerchant": {
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "title": "Partner",
                  "x-readme-ref-name": "Partner"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "acceptedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedAt": {
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "suspendedBy": {
                "description": "SUSPENDED_BY_DESCRIPTION",
                "type": "string",
                "example": "A-1234-4321",
                "nullable": true
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "reviewedAt": {
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "nextReviewDate": {
                "type": "string",
                "format": "date-time"
              }
            },
            "type": "object",
            "title": "Merchant",
            "x-readme-ref-name": "Merchant"
          }
        ],
        "title": "MerchantPartial",
        "x-readme-ref-name": "MerchantPartial"
      },
      "Notification": {
        "properties": {
          "type": {
            "description": "Use \"push\" for push messages, or \"email\" to send out an email. For more information check the following page: https://paynl.readme.io/reference/accounts-1",
            "type": "string",
            "enum": [
              "push",
              "email"
            ]
          },
          "recipient": {
            "description": "The recipient of the notification. For push messages, use your device id (AD-XXXX-XXXX). For email, provide a valid email address (XXXX@XXXX.XX).",
            "type": "string",
            "example": "AD-1234-1234"
          }
        },
        "type": "object",
        "title": "Notification",
        "x-readme-ref-name": "Notification"
      },
      "NotificationGroup": {
        "properties": {
          "technical": {
            "type": "boolean"
          },
          "financial": {
            "type": "boolean"
          },
          "operations": {
            "type": "boolean"
          }
        },
        "type": "object",
        "title": "NotificationGroup",
        "x-readme-ref-name": "NotificationGroup"
      },
      "Order": {
        "properties": {
          "countryCode": {
            "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
            "type": "string",
            "maxLength": 2,
            "minLength": 2,
            "example": "NL"
          },
          "deliveryDate": {
            "description": "The date of delivery.",
            "type": "string",
            "format": "date",
            "example": "1999-02-15"
          },
          "invoiceDate": {
            "description": "The date of the invoice",
            "type": "string",
            "format": "date",
            "example": "1999-02-15"
          },
          "deliveryAddress": {
            "properties": {
              "code": {
                "type": "string"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "streetNumberExtension": {
                "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "b1"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "regionCode": {
                "description": "Region code (iso-3166-2)",
                "type": "string",
                "example": "ZH"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Address",
            "x-readme-ref-name": "Address"
          },
          "invoiceAddress": {
            "properties": {
              "code": {
                "type": "string"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "streetNumberExtension": {
                "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "b1"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "regionCode": {
                "description": "Region code (iso-3166-2)",
                "type": "string",
                "example": "ZH"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Address",
            "x-readme-ref-name": "Address"
          },
          "products": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "description": "The product identifier.",
                  "type": "string",
                  "example": "TEST_01"
                },
                "description": {
                  "description": "The description of the product.",
                  "type": "string",
                  "example": "Some product description"
                },
                "type": {
                  "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                  "type": "string",
                  "enum": [
                    "shipping",
                    "article",
                    "discount",
                    "rounding",
                    "handling",
                    "payment",
                    "credit",
                    "giftcard",
                    "emoney",
                    "crypto"
                  ]
                },
                "price": {
                  "properties": {
                    "value": {
                      "description": "The amount in cents.",
                      "type": "integer",
                      "minimum": 1,
                      "example": 10
                    }
                  },
                  "type": "object"
                },
                "quantity": {
                  "description": "The quantity.",
                  "type": "number",
                  "format": "float"
                },
                "vatCode": {
                  "description": "The VAT code to use.",
                  "type": "string",
                  "enum": [
                    "N",
                    "H",
                    "L"
                  ]
                }
              },
              "type": "object",
              "title": "Product",
              "x-readme-ref-name": "Product"
            }
          }
        },
        "type": "object",
        "title": "Order",
        "x-readme-ref-name": "Order"
      },
      "Package": {
        "properties": {
          "code": {
            "description": "Code of the package.",
            "type": "string"
          },
          "name": {
            "description": "Name of the package.",
            "type": "string"
          },
          "description": {
            "description": "Description of the package.",
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "partnerType": {
            "description": "Parter types linked to the package.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "connectionTypeOnRegistration": {
            "type": "string",
            "enum": [
              "ALLIANCE",
              "BP",
              "ISO",
              "PARTNER"
            ],
            "nullable": true
          },
          "actionCode": {
            "description": "Action code linked to the package.",
            "type": "string"
          },
          "actionCodeValidUntil": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "contractPackage": {
            "description": "The contract package where this package is linked to.",
            "type": "string"
          },
          "monthlyFee": {
            "description": "Monthly Fee of the package.",
            "type": "integer"
          },
          "discountPercentage": {
            "description": "Discount percentage of the package.",
            "type": "integer"
          },
          "public": {
            "description": "If it is an public package.",
            "type": "boolean"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Package",
        "x-readme-ref-name": "Package"
      },
      "PaginatorLink": {
        "allOf": [
          {
            "required": [
              "href",
              "rel",
              "type"
            ],
            "properties": {
              "href": {
                "description": "",
                "type": "string",
                "readOnly": true,
                "example": "",
                "nullable": false
              },
              "rel": {
                "description": "",
                "type": "string",
                "readOnly": true,
                "example": "",
                "nullable": false
              },
              "type": {
                "description": "",
                "type": "string",
                "readOnly": true,
                "example": "",
                "nullable": false
              }
            },
            "type": "object",
            "title": "Link",
            "x-readme-ref-name": "Link"
          }
        ],
        "title": "PaginatorLink",
        "x-readme-ref-name": "PaginatorLink"
      },
      "Partner": {
        "properties": {
          "code": {
            "type": "string",
            "example": "M-1234-4321"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "accessToMerchant": {
            "type": "boolean"
          }
        },
        "type": "object",
        "title": "Partner",
        "x-readme-ref-name": "Partner"
      },
      "PartnerExtended": {
        "allOf": [
          {
            "properties": {
              "code": {
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "accessToMerchant": {
                "type": "boolean"
              }
            },
            "type": "object",
            "title": "Partner",
            "x-readme-ref-name": "Partner"
          },
          {
            "properties": {
              "iso": {
                "description": "Is a independent sales organisation.",
                "type": "boolean"
              },
              "bp": {
                "description": "Is a business partner.",
                "type": "boolean"
              },
              "alliance": {
                "description": "Is an alliance partner.",
                "type": "boolean"
              },
              "fi": {
                "description": "Is an financial institute partner.",
                "type": "boolean"
              },
              "sp": {
                "description": "Is a hosted solution.",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        ],
        "title": "PartnerExtended",
        "x-readme-ref-name": "PartnerExtended"
      },
      "Payment": {
        "properties": {
          "method": {
            "description": "The method",
            "type": "string",
            "enum": [
              "iban"
            ]
          },
          "card": {
            "description": "$card",
            "required": [
              "expireMonth",
              "expireYear",
              "type"
            ],
            "properties": {
              "expireMonth": {
                "description": "The month in which the card expires",
                "type": "string",
                "example": "01"
              },
              "expireYear": {
                "description": "THe year in which the card expires",
                "type": "string",
                "example": "2023"
              },
              "pin": {
                "description": "The card pincode",
                "type": "string",
                "example": "12345"
              },
              "name": {
                "description": "The name of the card scheme used.",
                "type": "string",
                "example": "Maestro"
              },
              "type": {
                "description": "The type of card",
                "type": "string",
                "enum": [
                  "POS",
                  "ECOM",
                  "CIT",
                  "MIT",
                  "MOTO",
                  "WALLET"
                ]
              }
            },
            "type": "object"
          }
        },
        "type": "object",
        "title": "Payment",
        "x-readme-ref-name": "Payment"
      },
      "PaymentData": {
        "properties": {
          "method": {
            "description": "Payment method of the transaction.",
            "type": "string"
          },
          "customerKey": {
            "description": "Customer key of the customer from the transaction.",
            "type": "string"
          },
          "customerId": {
            "description": "Customer id of the customer from the transaction.",
            "type": "string"
          },
          "customerName": {
            "description": "Customer name of the customer from the transaction.",
            "type": "string"
          },
          "ipAddress": {
            "description": "Ip address of the customer from the transaction.",
            "type": "string"
          },
          "secureStatus": {
            "description": "Secure status of the transaction.",
            "type": "boolean"
          },
          "paymentVerificationMethod": {
            "type": "integer"
          }
        },
        "type": "object",
        "title": "PaymentData",
        "x-readme-ref-name": "PaymentData"
      },
      "PaymentLink": {
        "required": [
          "securityMode"
        ],
        "properties": {
          "url": {
            "description": "The paylink url.",
            "type": "string",
            "format": "uri",
            "example": "https://example.com"
          },
          "securityMode": {
            "description": "0: URL, amount and variables can be changed\n1: Amount is fixed. URL and variables can be changed\n2: Pre filled variable can be changed. Amount is fixed\n3: URL, amount and variables are fixed. Only empty variables can be filled",
            "type": "integer",
            "enum": [
              0,
              1,
              2,
              3
            ]
          }
        },
        "type": "object",
        "title": "PaymentLink",
        "x-readme-ref-name": "PaymentLink"
      },
      "PaymentMethod": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
            "type": "integer",
            "example": "10"
          },
          "subId": {
            "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
            "type": "string",
            "example": "10"
          },
          "name": {
            "description": "The name of the payment method.",
            "type": "string",
            "example": "ideal"
          }
        },
        "type": "object",
        "title": "PaymentMethod",
        "x-readme-ref-name": "PaymentMethod"
      },
      "PaymentProfile": {
        "properties": {
          "id": {
            "description": "The payment profile identifier.",
            "type": "integer"
          },
          "name": {
            "description": "The name of the payment profile.",
            "type": "string"
          },
          "publicName": {
            "description": "Public name of the payment method",
            "type": "string"
          },
          "public": {
            "description": "Check if payment method is public",
            "type": "boolean"
          },
          "selectable": {
            "description": "check if payment method is selectable",
            "type": "boolean"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "image": {
            "description": "The image of the payment method.",
            "type": "string"
          },
          "issuers": {
            "description": "Issuers linked to payment method",
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "categories": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "The category (code) identifier",
                  "type": "string",
                  "example": "CY-1234-4321"
                },
                "name": {
                  "description": "The category name.",
                  "type": "string",
                  "example": "Digitale diensten gambling (kansspelen)"
                }
              },
              "type": "object"
            }
          },
          "paymentMethodGroup": {
            "description": "Payment method group where payment method is assigned to",
            "type": "string"
          },
          "paymentType": {
            "description": "Payment type",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          }
        },
        "type": "object",
        "title": "PaymentProfile",
        "x-readme-ref-name": "PaymentProfile"
      },
      "Payout": {
        "properties": {
          "type": {
            "description": "Defines the type of the transaction. Possible values are: \"iban\"",
            "type": "string",
            "enum": [
              "iban"
            ]
          },
          "transaction": {
            "required": [
              "serviceId",
              "amount",
              "returnUrl"
            ],
            "properties": {
              "id": {
                "description": "The Id of the transaction.",
                "type": "string",
                "example": "EX-1234-1234-1234"
              },
              "serviceId": {
                "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                "type": "string",
                "example": "SL-####-####"
              },
              "description": {
                "description": "Is shown on the statement of the payer.",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "Example description."
              },
              "reference": {
                "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]{1,64}$",
                "example": "12345XXY0123"
              },
              "manualTransferCode": {
                "description": "Payment reference used to identify manual bank transfers",
                "type": "string",
                "example": "0000 0000 0000 0000"
              },
              "orderId": {
                "description": "The orderId of the transaction.",
                "type": "string",
                "example": "0000000000X00000"
              },
              "ipAddress": {
                "description": "An ip address",
                "type": "string",
                "example": "213.126.82.230"
              },
              "exchangeUrl": {
                "description": "The URL where we exchange the status of a transaction.",
                "type": "string",
                "format": "uri",
                "example": "https://demo.pay.nl/exchange.php"
              },
              "returnUrl": {
                "description": "The URL where the payer has to be send to after the payment.",
                "type": "string",
                "format": "uri",
                "example": "https://demo.pay.nl/complete/"
              },
              "paymentUrl": {
                "description": "The payment URL for this transaction",
                "type": "string",
                "format": "uri"
              },
              "amount": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "expire": {
                "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00"
              },
              "created": {
                "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00"
              },
              "modified": {
                "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00"
              },
              "amountConverted": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "amountPaid": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "amountRefunded": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "paymentMethod": {
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                    "type": "integer",
                    "example": "10"
                  },
                  "subId": {
                    "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                    "type": "string",
                    "example": "10"
                  },
                  "name": {
                    "description": "The name of the payment method.",
                    "type": "string",
                    "example": "ideal"
                  }
                },
                "type": "object",
                "title": "PaymentMethod",
                "x-readme-ref-name": "PaymentMethod"
              },
              "status": {
                "properties": {
                  "code": {
                    "description": "The status code.",
                    "type": "integer"
                  },
                  "action": {
                    "description": "The state in which the transaction resides",
                    "type": "string",
                    "example": "PAID"
                  },
                  "phase": {
                    "description": "The current phase in the transaction state",
                    "type": "string",
                    "example": "APPROVED"
                  }
                },
                "type": "object",
                "title": "Status",
                "x-readme-ref-name": "Status"
              },
              "integration": {
                "properties": {
                  "testMode": {
                    "description": "Indicates if the service is in testmode or not, possible values: false or true",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "title": "Integration",
                "x-readme-ref-name": "Integration"
              },
              "customer": {
                "properties": {
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "type": {
                    "description": "Either B for business or C for consumer.",
                    "type": "string",
                    "enum": [
                      "B",
                      "C"
                    ]
                  },
                  "ip": {
                    "description": "An ip address",
                    "type": "string",
                    "example": "213.126.82.230"
                  },
                  "birthDate": {
                    "description": "Date of birth as defined in ISO-8601.",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "gender": {
                    "description": "The subject's gender. Choose either M for male or F for female.",
                    "type": "string",
                    "example": "M"
                  },
                  "phone": {
                    "description": "The subject's phone number. Optionally prepended with a + and country code",
                    "type": "string",
                    "example": "0031612345678"
                  },
                  "email": {
                    "description": "An email address.",
                    "type": "string",
                    "format": "email",
                    "example": "sandbox@pay.nl"
                  },
                  "language": {
                    "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                    "type": "string",
                    "enum": [
                      "NL",
                      "EN",
                      "DE",
                      "FR",
                      "IT",
                      "ES"
                    ],
                    "example": "NL"
                  },
                  "trust": {
                    "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                    "type": "integer",
                    "maximum": 10,
                    "minimum": -10,
                    "example": -5
                  },
                  "reference": {
                    "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]{1,64}$",
                    "example": "NL87654321"
                  },
                  "bankAccount": {
                    "required": [
                      "iban",
                      "bic",
                      "owner"
                    ],
                    "properties": {
                      "iban": {
                        "description": "The International Bank Account Number (IBAN).",
                        "type": "string",
                        "example": "NL69INGB0123456789"
                      },
                      "bic": {
                        "description": "Business Identifier Codes (BIC/SWIFT).",
                        "type": "string",
                        "example": "INGBNL2A"
                      },
                      "owner": {
                        "description": "The owner of the bank account.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John Doe"
                      }
                    },
                    "type": "object",
                    "title": "BankAccount",
                    "x-readme-ref-name": "BankAccount"
                  },
                  "company": {
                    "properties": {
                      "name": {
                        "description": "The name of your merchant.",
                        "type": "string",
                        "example": "CompanyName"
                      },
                      "coc": {
                        "description": "Your Chamber of commerce registration number. This format differs per country.",
                        "type": "string",
                        "example": "12345678"
                      },
                      "vat": {
                        "description": "Value added tax identification number (VAT identification number).",
                        "type": "string",
                        "example": "NL807960147B01"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Company",
                    "x-readme-ref-name": "Company"
                  }
                },
                "type": "object",
                "title": "Customer",
                "x-readme-ref-name": "Customer"
              },
              "order": {
                "properties": {
                  "countryCode": {
                    "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  },
                  "deliveryDate": {
                    "description": "The date of delivery.",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "invoiceDate": {
                    "description": "The date of the invoice",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "deliveryAddress": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "streetNumberExtension": {
                        "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "b1"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "regionCode": {
                        "description": "Region code (iso-3166-2)",
                        "type": "string",
                        "example": "ZH"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Address",
                    "x-readme-ref-name": "Address"
                  },
                  "invoiceAddress": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "streetNumberExtension": {
                        "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "b1"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "regionCode": {
                        "description": "Region code (iso-3166-2)",
                        "type": "string",
                        "example": "ZH"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Address",
                    "x-readme-ref-name": "Address"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The product identifier.",
                          "type": "string",
                          "example": "TEST_01"
                        },
                        "description": {
                          "description": "The description of the product.",
                          "type": "string",
                          "example": "Some product description"
                        },
                        "type": {
                          "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                          "type": "string",
                          "enum": [
                            "shipping",
                            "article",
                            "discount",
                            "rounding",
                            "handling",
                            "payment",
                            "credit",
                            "giftcard",
                            "emoney",
                            "crypto"
                          ]
                        },
                        "price": {
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            }
                          },
                          "type": "object"
                        },
                        "quantity": {
                          "description": "The quantity.",
                          "type": "number",
                          "format": "float"
                        },
                        "vatCode": {
                          "description": "The VAT code to use.",
                          "type": "string",
                          "enum": [
                            "N",
                            "H",
                            "L"
                          ]
                        }
                      },
                      "type": "object",
                      "title": "Product",
                      "x-readme-ref-name": "Product"
                    }
                  }
                },
                "type": "object",
                "title": "Order",
                "x-readme-ref-name": "Order"
              },
              "stats": {
                "properties": {
                  "info": {
                    "description": "The used info code which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Campagne 99"
                  },
                  "tool": {
                    "description": "The used tool code which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Google"
                  },
                  "object": {
                    "description": "The object which can be tracked in stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                  },
                  "extra1": {
                    "description": "The first free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Customer 6985615"
                  },
                  "extra2": {
                    "description": "The second free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Invoice 21.3695"
                  },
                  "extra3": {
                    "description": "The third free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Shop Amsterdam"
                  },
                  "domainId": {
                    "description": "The ID of the duplicate content URL",
                    "type": "string",
                    "example": "WU-####-####"
                  }
                },
                "type": "object",
                "title": "Stats",
                "x-readme-ref-name": "Stats"
              },
              "type": {
                "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                "type": "string",
                "enum": [
                  "POS",
                  "ECOM",
                  "CIT",
                  "MIT",
                  "MOTO"
                ]
              },
              "transferData": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "description": "The name of the variable to be tracked in the transaction.",
                      "type": "string",
                      "example": "stat1"
                    },
                    "value": {
                      "description": "The value of the variable to be tracked in the transaction.",
                      "type": "string",
                      "example": "ab8827dfc"
                    }
                  },
                  "type": "object",
                  "title": "TransferData",
                  "x-readme-ref-name": "TransferData"
                },
                "xml": {
                  "name": "transferData",
                  "wrapped": true
                }
              }
            },
            "type": "object",
            "xml": {
              "name": "transaction"
            },
            "title": "Transaction",
            "x-readme-ref-name": "Transaction"
          }
        },
        "type": "object",
        "title": "Payout",
        "x-readme-ref-name": "Payout"
      },
      "Person": {
        "properties": {
          "code": {
            "type": "string",
            "example": "AL-1234-4321"
          },
          "secret": {
            "type": "string",
            "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
          },
          "name": {
            "type": "string"
          },
          "accountCode": {
            "type": "string",
            "example": "A-1234-4321"
          },
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "John",
            "nullable": true
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Doe"
          },
          "email": {
            "description": "An email address.",
            "type": "string",
            "format": "email",
            "example": "sandbox@pay.nl"
          },
          "language": {
            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
            "type": "string",
            "enum": [
              "NL",
              "EN",
              "DE",
              "FR",
              "IT",
              "ES"
            ],
            "example": "NL"
          },
          "phone": {
            "description": "The subject's phone number. Optionally prepended with a + and country code",
            "type": "string",
            "example": "0031612345678"
          },
          "visitAddress": {
            "properties": {
              "code": {
                "type": "string"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "streetNumberExtension": {
                "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "b1"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "regionCode": {
                "description": "Region code (iso-3166-2)",
                "type": "string",
                "example": "ZH"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Address",
            "x-readme-ref-name": "Address"
          },
          "complianceData": {
            "allOf": [
              {
                "properties": {
                  "pep": {
                    "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                    "type": "boolean",
                    "example": "true"
                  },
                  "pepDescription": {
                    "description": "Describe in your own words why this person is a PEP.",
                    "type": "string",
                    "example": "The person is active as an alderman in the municipality where he lives."
                  },
                  "dateOfBirth": {
                    "description": "Date of birth of the person.",
                    "type": "string",
                    "format": "date-time",
                    "example": "1999-12-12"
                  },
                  "nationality": {
                    "description": "Nationality of the person.",
                    "type": "string",
                    "example": "NL"
                  },
                  "idDocumentNumber": {
                    "description": "The id document number of the person",
                    "type": "string",
                    "example": ""
                  }
                },
                "type": "object",
                "title": "ComplianceData",
                "x-readme-ref-name": "ComplianceData"
              },
              {
                "properties": {
                  "ubo": {
                    "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                    "type": "string",
                    "enum": [
                      "no",
                      "direct",
                      "indirect",
                      "pseudo"
                    ],
                    "example": "direct"
                  },
                  "uboPercentage": {
                    "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                    "type": "integer",
                    "example": "25"
                  },
                  "authorizedToSign": {
                    "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                    "type": "string",
                    "enum": [
                      "no",
                      "alone",
                      "shared"
                    ],
                    "example": "shared"
                  },
                  "relationshipDescription": {
                    "description": "Describe in your own words the relation the person has with this company.",
                    "type": "string",
                    "example": "John Doe of test company"
                  }
                },
                "type": "object"
              }
            ],
            "title": "ComplianceDataPerson",
            "x-readme-ref-name": "ComplianceDataPerson"
          }
        },
        "type": "object",
        "title": "Person",
        "x-readme-ref-name": "Person"
      },
      "PersonCompliance": {
        "properties": {
          "code": {
            "type": "string",
            "example": "AL-1234-4321"
          },
          "secret": {
            "type": "string",
            "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
          },
          "name": {
            "type": "string"
          },
          "firstName": {
            "description": "The forename (also known as a given name, Christian name or a first name).",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "John"
          },
          "lastName": {
            "description": "The surname (also known as a family name or a last name).",
            "type": "string",
            "maxLength": 128,
            "minLength": 1,
            "example": "Doe"
          },
          "email": {
            "description": "An email address.",
            "type": "string",
            "format": "email",
            "example": "sandbox@pay.nl"
          },
          "language": {
            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
            "type": "string",
            "enum": [
              "NL",
              "EN",
              "DE",
              "FR",
              "IT",
              "ES"
            ],
            "example": "NL"
          },
          "visitAddress": {
            "properties": {
              "code": {
                "type": "string"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "streetNumberExtension": {
                "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "b1"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "regionCode": {
                "description": "Region code (iso-3166-2)",
                "type": "string",
                "example": "ZH"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Address",
            "x-readme-ref-name": "Address"
          },
          "complianceData": {
            "properties": {
              "pep": {
                "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                "type": "boolean",
                "example": "true"
              },
              "pepDescription": {
                "description": "Describe in your own words why this person is a PEP.",
                "type": "string",
                "example": "The person is active as an alderman in the municipality where he lives."
              },
              "dateOfBirth": {
                "description": "Date of birth of the person.",
                "type": "string",
                "format": "date-time",
                "example": "1999-12-12"
              },
              "nationality": {
                "description": "Nationality of the person.",
                "type": "string",
                "example": "NL"
              },
              "idDocumentNumber": {
                "description": "The id document number of the person",
                "type": "string",
                "example": ""
              }
            },
            "type": "object",
            "title": "ComplianceData",
            "x-readme-ref-name": "ComplianceData"
          },
          "documents": {
            "properties": {
              "code": {
                "description": "Code of the acceptance document.",
                "type": "string",
                "example": "D-1234-1234"
              },
              "type": {
                "description": "Type of the acceptance document.",
                "type": "string",
                "example": "identification"
              },
              "status": {
                "description": "Status of the acceptance document.",
                "type": "string",
                "example": "UPLOADED"
              }
            },
            "type": "object",
            "title": "Document",
            "x-readme-ref-name": "Document"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "acceptedAt": {
            "description": "The date and time an account was accepted.",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "2023-11-01T10:19:25+01:00",
            "nullable": false
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "PersonCompliance",
        "x-readme-ref-name": "PersonCompliance"
      },
      "PersonComplianceMinimal": {
        "allOf": [
          {
            "properties": {
              "code": {
                "type": "string",
                "example": "AL-1234-4321"
              },
              "secret": {
                "type": "string",
                "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
              },
              "name": {
                "type": "string"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Doe"
              },
              "email": {
                "description": "An email address.",
                "type": "string",
                "format": "email",
                "example": "sandbox@pay.nl"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "enum": [
                  "NL",
                  "EN",
                  "DE",
                  "FR",
                  "IT",
                  "ES"
                ],
                "example": "NL"
              },
              "visitAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "complianceData": {
                "properties": {
                  "pep": {
                    "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                    "type": "boolean",
                    "example": "true"
                  },
                  "pepDescription": {
                    "description": "Describe in your own words why this person is a PEP.",
                    "type": "string",
                    "example": "The person is active as an alderman in the municipality where he lives."
                  },
                  "dateOfBirth": {
                    "description": "Date of birth of the person.",
                    "type": "string",
                    "format": "date-time",
                    "example": "1999-12-12"
                  },
                  "nationality": {
                    "description": "Nationality of the person.",
                    "type": "string",
                    "example": "NL"
                  },
                  "idDocumentNumber": {
                    "description": "The id document number of the person",
                    "type": "string",
                    "example": ""
                  }
                },
                "type": "object",
                "title": "ComplianceData",
                "x-readme-ref-name": "ComplianceData"
              },
              "documents": {
                "properties": {
                  "code": {
                    "description": "Code of the acceptance document.",
                    "type": "string",
                    "example": "D-1234-1234"
                  },
                  "type": {
                    "description": "Type of the acceptance document.",
                    "type": "string",
                    "example": "identification"
                  },
                  "status": {
                    "description": "Status of the acceptance document.",
                    "type": "string",
                    "example": "UPLOADED"
                  }
                },
                "type": "object",
                "title": "Document",
                "x-readme-ref-name": "Document"
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "acceptedAt": {
                "description": "The date and time an account was accepted.",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "2023-11-01T10:19:25+01:00",
                "nullable": false
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object",
            "title": "PersonCompliance",
            "x-readme-ref-name": "PersonCompliance"
          }
        ],
        "title": "PersonComplianceMinimal",
        "x-readme-ref-name": "PersonComplianceMinimal"
      },
      "PersonInfoInternal": {
        "allOf": [
          {
            "properties": {
              "code": {
                "type": "string",
                "example": "AL-1234-4321"
              },
              "secret": {
                "type": "string",
                "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
              },
              "name": {
                "type": "string"
              },
              "accountCode": {
                "type": "string",
                "example": "A-1234-4321"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John",
                "nullable": true
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Doe"
              },
              "email": {
                "description": "An email address.",
                "type": "string",
                "format": "email",
                "example": "sandbox@pay.nl"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "enum": [
                  "NL",
                  "EN",
                  "DE",
                  "FR",
                  "IT",
                  "ES"
                ],
                "example": "NL"
              },
              "phone": {
                "description": "The subject's phone number. Optionally prepended with a + and country code",
                "type": "string",
                "example": "0031612345678"
              },
              "visitAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "complianceData": {
                "allOf": [
                  {
                    "properties": {
                      "pep": {
                        "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                        "type": "boolean",
                        "example": "true"
                      },
                      "pepDescription": {
                        "description": "Describe in your own words why this person is a PEP.",
                        "type": "string",
                        "example": "The person is active as an alderman in the municipality where he lives."
                      },
                      "dateOfBirth": {
                        "description": "Date of birth of the person.",
                        "type": "string",
                        "format": "date-time",
                        "example": "1999-12-12"
                      },
                      "nationality": {
                        "description": "Nationality of the person.",
                        "type": "string",
                        "example": "NL"
                      },
                      "idDocumentNumber": {
                        "description": "The id document number of the person",
                        "type": "string",
                        "example": ""
                      }
                    },
                    "type": "object",
                    "title": "ComplianceData",
                    "x-readme-ref-name": "ComplianceData"
                  },
                  {
                    "properties": {
                      "ubo": {
                        "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                        "type": "string",
                        "enum": [
                          "no",
                          "direct",
                          "indirect",
                          "pseudo"
                        ],
                        "example": "direct"
                      },
                      "uboPercentage": {
                        "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                        "type": "integer",
                        "example": "25"
                      },
                      "authorizedToSign": {
                        "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                        "type": "string",
                        "enum": [
                          "no",
                          "alone",
                          "shared"
                        ],
                        "example": "shared"
                      },
                      "relationshipDescription": {
                        "description": "Describe in your own words the relation the person has with this company.",
                        "type": "string",
                        "example": "John Doe of test company"
                      }
                    },
                    "type": "object"
                  }
                ],
                "title": "ComplianceDataPerson",
                "x-readme-ref-name": "ComplianceDataPerson"
              }
            },
            "type": "object",
            "title": "Person",
            "x-readme-ref-name": "Person"
          },
          {
            "properties": {
              "documents": {
                "properties": {
                  "code": {
                    "description": "Code of the acceptance document.",
                    "type": "string",
                    "example": "D-1234-1234"
                  },
                  "type": {
                    "description": "Type of the acceptance document.",
                    "type": "string",
                    "example": "identification"
                  },
                  "status": {
                    "description": "Status of the acceptance document.",
                    "type": "string",
                    "example": "UPLOADED"
                  }
                },
                "type": "object",
                "title": "Document",
                "x-readme-ref-name": "Document"
              },
              "notificationGroup": {
                "properties": {
                  "technical": {
                    "type": "boolean"
                  },
                  "financial": {
                    "type": "boolean"
                  },
                  "operations": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "platform": {
                "required": [
                  "authorisation"
                ],
                "properties": {
                  "loginAccount": {
                    "type": "boolean"
                  },
                  "loginTpa": {
                    "type": "boolean"
                  },
                  "authorisation": {
                    "type": "string",
                    "enum": [
                      "all",
                      "specified"
                    ]
                  },
                  "authorisationGroups": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "example": "AG-1234-4321"
                    }
                  }
                },
                "type": "object"
              },
              "roles": {
                "properties": {
                  "primaryContactPerson": {
                    "type": "boolean"
                  },
                  "internalAdministrator": {
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          }
        ],
        "title": "PersonInfoInternal",
        "x-readme-ref-name": "PersonInfoInternal"
      },
      "PersonLicense": {
        "properties": {
          "code": {
            "description": "License code.",
            "type": "string",
            "example": "AL-1234-4321"
          },
          "name": {
            "description": "Name of the license.",
            "type": "string",
            "example": "John Doe"
          },
          "language": {
            "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
            "type": "string",
            "example": "NL"
          },
          "complianceData": {
            "properties": {
              "authorizedToSign": {
                "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                "type": "string",
                "enum": [
                  "no",
                  "alone",
                  "shared"
                ],
                "example": "shared"
              },
              "pep": {
                "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                "type": "boolean",
                "example": "true"
              },
              "pepDescription": {
                "description": "Describe in your own words why this person is a PEP.",
                "type": "string",
                "example": "The person is active as an alderman in the municipality where he lives."
              },
              "ubo": {
                "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                "type": "string",
                "enum": [
                  "no",
                  "direct",
                  "indirect",
                  "pseudo"
                ],
                "example": "direct"
              },
              "uboPercentage": {
                "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                "type": "integer",
                "example": "25"
              },
              "relationshipDescription": {
                "description": "Describe in your own words the relation the person has with this company.",
                "type": "string",
                "example": "John Doe of test company"
              }
            }
          },
          "notificationGroup": {
            "properties": {
              "technical": {
                "type": "boolean"
              },
              "financial": {
                "type": "boolean"
              },
              "operations": {
                "type": "boolean"
              }
            },
            "type": "object",
            "title": "NotificationGroup",
            "x-readme-ref-name": "NotificationGroup"
          },
          "merchant": {
            "required": [
              "code",
              "name",
              "status"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              }
            },
            "type": "object",
            "title": "MerchantMinimal",
            "x-readme-ref-name": "MerchantMinimal"
          },
          "platform": {
            "properties": {
              "loginAccount": {
                "type": "boolean"
              },
              "loginTpa": {
                "type": "boolean"
              },
              "authorisation": {
                "type": "string",
                "enum": [
                  "all",
                  "specified"
                ]
              },
              "authorisationGroups": {
                "type": "array",
                "items": {
                  "description": "Authorisation group identifier",
                  "type": "string",
                  "example": "AG-1234-4321"
                }
              }
            },
            "type": "object",
            "title": "Platform",
            "x-readme-ref-name": "Platform"
          },
          "documents": {
            "type": "array",
            "items": {
              "properties": {
                "code": {
                  "description": "Code of the acceptance document.",
                  "type": "string",
                  "example": "D-1234-1234"
                },
                "type": {
                  "description": "Type of the acceptance document.",
                  "type": "string",
                  "example": "identification"
                },
                "status": {
                  "description": "Status of the acceptance document.",
                  "type": "string",
                  "example": "UPLOADED"
                }
              },
              "type": "object",
              "title": "Document",
              "x-readme-ref-name": "Document"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "PersonLicense",
        "x-readme-ref-name": "PersonLicense"
      },
      "PersonLicensePartial": {
        "allOf": [
          {
            "properties": {
              "code": {
                "description": "License code.",
                "type": "string",
                "example": "AL-1234-4321"
              },
              "name": {
                "description": "Name of the license.",
                "type": "string",
                "example": "John Doe"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "example": "NL"
              },
              "complianceData": {
                "properties": {
                  "authorizedToSign": {
                    "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                    "type": "string",
                    "enum": [
                      "no",
                      "alone",
                      "shared"
                    ],
                    "example": "shared"
                  },
                  "pep": {
                    "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                    "type": "boolean",
                    "example": "true"
                  },
                  "pepDescription": {
                    "description": "Describe in your own words why this person is a PEP.",
                    "type": "string",
                    "example": "The person is active as an alderman in the municipality where he lives."
                  },
                  "ubo": {
                    "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                    "type": "string",
                    "enum": [
                      "no",
                      "direct",
                      "indirect",
                      "pseudo"
                    ],
                    "example": "direct"
                  },
                  "uboPercentage": {
                    "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                    "type": "integer",
                    "example": "25"
                  },
                  "relationshipDescription": {
                    "description": "Describe in your own words the relation the person has with this company.",
                    "type": "string",
                    "example": "John Doe of test company"
                  }
                }
              },
              "notificationGroup": {
                "properties": {
                  "technical": {
                    "type": "boolean"
                  },
                  "financial": {
                    "type": "boolean"
                  },
                  "operations": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "title": "NotificationGroup",
                "x-readme-ref-name": "NotificationGroup"
              },
              "merchant": {
                "required": [
                  "code",
                  "name",
                  "status"
                ],
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string",
                    "example": "ACTIVE"
                  }
                },
                "type": "object",
                "title": "MerchantMinimal",
                "x-readme-ref-name": "MerchantMinimal"
              },
              "platform": {
                "properties": {
                  "loginAccount": {
                    "type": "boolean"
                  },
                  "loginTpa": {
                    "type": "boolean"
                  },
                  "authorisation": {
                    "type": "string",
                    "enum": [
                      "all",
                      "specified"
                    ]
                  },
                  "authorisationGroups": {
                    "type": "array",
                    "items": {
                      "description": "Authorisation group identifier",
                      "type": "string",
                      "example": "AG-1234-4321"
                    }
                  }
                },
                "type": "object",
                "title": "Platform",
                "x-readme-ref-name": "Platform"
              },
              "documents": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "Code of the acceptance document.",
                      "type": "string",
                      "example": "D-1234-1234"
                    },
                    "type": {
                      "description": "Type of the acceptance document.",
                      "type": "string",
                      "example": "identification"
                    },
                    "status": {
                      "description": "Status of the acceptance document.",
                      "type": "string",
                      "example": "UPLOADED"
                    }
                  },
                  "type": "object",
                  "title": "Document",
                  "x-readme-ref-name": "Document"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object",
            "title": "PersonLicense",
            "x-readme-ref-name": "PersonLicense"
          },
          {
            "properties": {
              "code": {
                "description": "License code.",
                "type": "string",
                "example": "AL-1234-4321"
              },
              "name": {
                "description": "Name of the license.",
                "type": "string",
                "example": "John Doe"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "example": "NL"
              },
              "notificationGroup": {
                "properties": {
                  "technical": {
                    "type": "boolean"
                  },
                  "financial": {
                    "type": "boolean"
                  },
                  "operations": {
                    "type": "boolean"
                  }
                },
                "type": "object",
                "title": "NotificationGroup",
                "x-readme-ref-name": "NotificationGroup"
              },
              "platform": {
                "properties": {
                  "loginAccount": {
                    "type": "boolean"
                  },
                  "loginTpa": {
                    "type": "boolean"
                  },
                  "authorisation": {
                    "type": "string",
                    "enum": [
                      "all",
                      "specified"
                    ]
                  },
                  "authorisationGroups": {
                    "type": "array",
                    "items": {
                      "description": "Authorisation group identifier",
                      "type": "string",
                      "example": "AG-1234-4321"
                    }
                  }
                },
                "type": "object",
                "title": "Platform",
                "x-readme-ref-name": "Platform"
              },
              "merchant": {
                "required": [
                  "code",
                  "name",
                  "status"
                ],
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string",
                    "example": "ACTIVE"
                  }
                },
                "type": "object",
                "title": "MerchantMinimal",
                "x-readme-ref-name": "MerchantMinimal"
              },
              "documents": {
                "type": "array",
                "items": {
                  "properties": {
                    "code": {
                      "description": "Code of the acceptance document.",
                      "type": "string",
                      "example": "D-1234-1234"
                    },
                    "type": {
                      "description": "Type of the acceptance document.",
                      "type": "string",
                      "example": "identification"
                    },
                    "status": {
                      "description": "Status of the acceptance document.",
                      "type": "string",
                      "example": "UPLOADED"
                    }
                  },
                  "type": "object",
                  "title": "Document",
                  "x-readme-ref-name": "Document"
                }
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object"
          }
        ],
        "title": "PersonLicensePartial",
        "x-readme-ref-name": "PersonLicensePartial"
      },
      "PersonMinimal": {
        "allOf": [
          {
            "properties": {
              "code": {
                "type": "string",
                "example": "AL-1234-4321"
              },
              "secret": {
                "type": "string",
                "example": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu"
              },
              "name": {
                "type": "string"
              },
              "accountCode": {
                "type": "string",
                "example": "A-1234-4321"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John",
                "nullable": true
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Doe"
              },
              "email": {
                "description": "An email address.",
                "type": "string",
                "format": "email",
                "example": "sandbox@pay.nl"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "enum": [
                  "NL",
                  "EN",
                  "DE",
                  "FR",
                  "IT",
                  "ES"
                ],
                "example": "NL"
              },
              "phone": {
                "description": "The subject's phone number. Optionally prepended with a + and country code",
                "type": "string",
                "example": "0031612345678"
              },
              "visitAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "complianceData": {
                "allOf": [
                  {
                    "properties": {
                      "pep": {
                        "description": "Indicate if the person is a Politically Exposed Person (PEP).",
                        "type": "boolean",
                        "example": "true"
                      },
                      "pepDescription": {
                        "description": "Describe in your own words why this person is a PEP.",
                        "type": "string",
                        "example": "The person is active as an alderman in the municipality where he lives."
                      },
                      "dateOfBirth": {
                        "description": "Date of birth of the person.",
                        "type": "string",
                        "format": "date-time",
                        "example": "1999-12-12"
                      },
                      "nationality": {
                        "description": "Nationality of the person.",
                        "type": "string",
                        "example": "NL"
                      },
                      "idDocumentNumber": {
                        "description": "The id document number of the person",
                        "type": "string",
                        "example": ""
                      }
                    },
                    "type": "object",
                    "title": "ComplianceData",
                    "x-readme-ref-name": "ComplianceData"
                  },
                  {
                    "properties": {
                      "ubo": {
                        "description": "Indicate if the person is an UBO:\nno: no ubo\npseudo: is a pseudo ubo (no financial interest)\ndirect: is a direct ubo with financial interest\nindirect: is a indirect ubo (due to involvement of a parent company or holding) with financial interest",
                        "type": "string",
                        "enum": [
                          "no",
                          "direct",
                          "indirect",
                          "pseudo"
                        ],
                        "example": "direct"
                      },
                      "uboPercentage": {
                        "description": "Indicate for direct and indirect UBO's the percentage of involvement (e.g. % of shares of a company).",
                        "type": "integer",
                        "example": "25"
                      },
                      "authorizedToSign": {
                        "description": "Indicate if the person is authorized to sign on behalf of the company:\nno: not authorized to sign\nalone: is authorized to sign\nshared: is authorized to sign together with other(s)",
                        "type": "string",
                        "enum": [
                          "no",
                          "alone",
                          "shared"
                        ],
                        "example": "shared"
                      },
                      "relationshipDescription": {
                        "description": "Describe in your own words the relation the person has with this company.",
                        "type": "string",
                        "example": "John Doe of test company"
                      }
                    },
                    "type": "object"
                  }
                ],
                "title": "ComplianceDataPerson",
                "x-readme-ref-name": "ComplianceDataPerson"
              }
            },
            "type": "object",
            "title": "Person",
            "x-readme-ref-name": "Person"
          }
        ],
        "title": "PersonMinimal",
        "x-readme-ref-name": "PersonMinimal"
      },
      "Platform": {
        "properties": {
          "loginAccount": {
            "type": "boolean"
          },
          "loginTpa": {
            "type": "boolean"
          },
          "authorisation": {
            "type": "string",
            "enum": [
              "all",
              "specified"
            ]
          },
          "authorisationGroups": {
            "type": "array",
            "items": {
              "description": "Authorisation group identifier",
              "type": "string",
              "example": "AG-1234-4321"
            }
          }
        },
        "type": "object",
        "title": "Platform",
        "x-readme-ref-name": "Platform"
      },
      "Product": {
        "properties": {
          "id": {
            "description": "The product identifier.",
            "type": "string",
            "example": "TEST_01"
          },
          "description": {
            "description": "The description of the product.",
            "type": "string",
            "example": "Some product description"
          },
          "type": {
            "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
            "type": "string",
            "enum": [
              "shipping",
              "article",
              "discount",
              "rounding",
              "handling",
              "payment",
              "credit",
              "giftcard",
              "emoney",
              "crypto"
            ]
          },
          "price": {
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              }
            },
            "type": "object"
          },
          "quantity": {
            "description": "The quantity.",
            "type": "number",
            "format": "float"
          },
          "vatCode": {
            "description": "The VAT code to use.",
            "type": "string",
            "enum": [
              "N",
              "H",
              "L"
            ]
          }
        },
        "type": "object",
        "title": "Product",
        "x-readme-ref-name": "Product"
      },
      "productType": {
        "properties": {
          "code": {
            "description": "Code of product type",
            "type": "string"
          },
          "description": {
            "description": "Description of product type",
            "type": "string"
          },
          "image": {
            "description": "Image of product type",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "productType",
        "x-readme-ref-name": "productType"
      },
      "Progress": {
        "description": "A terminal transaction lasts up to 45 seconds. The progress indicates how long the terminal is not available/the customer has time to complete the transaction",
        "properties": {
          "percentage": {
            "description": "Progress in percentage.",
            "type": "number",
            "format": "float"
          },
          "secondsPassed": {
            "description": "The amount of seconds the transaction is waiting for the payer since starting the transaction.",
            "type": "integer"
          },
          "percentagePerSecond": {
            "description": "Each second corresponds to a percentage the transaction is in progress.",
            "type": "number",
            "format": "float"
          }
        },
        "type": "object",
        "title": "Progress",
        "x-readme-ref-name": "Progress"
      },
      "Qr": {
        "properties": {
          "uuid": {
            "description": "The uuid of the QR code.",
            "type": "string",
            "maxLength": 36,
            "minLength": 36,
            "example": "1234-5678-1234-5678"
          },
          "serviceId": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string",
            "example": "SL-####-####"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "secret": {
            "description": "The secret of the QR code.",
            "type": "string",
            "format": "byte",
            "maxLength": 40,
            "minLength": 40,
            "example": "secret"
          },
          "reference": {
            "description": "The reference of the QR code.",
            "type": "string",
            "example": "123456"
          },
          "padChar": {
            "description": "The padding character.",
            "type": "string",
            "maxLength": 1,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]{1}$",
            "example": "a"
          },
          "referenceType": {
            "description": "The reference type of the QR code. Must be one of the following values: string, hex.",
            "type": "string",
            "enum": [
              "string",
              "hex"
            ],
            "example": "string"
          },
          "externalPaymentLink": {
            "description": "The external link to complete your payment with the supplier.",
            "type": "string",
            "example": "https://qr6.ideal.nl/uuid"
          },
          "paymentLink": {
            "description": "A link to complete your payment using our payment screen.",
            "type": "string",
            "example": "https://ideal.pay.nl/qr/uuid"
          },
          "contents": {
            "description": "The qr contents as a base64 string.",
            "type": "string",
            "example": "iVBORw0KGgoAAAANSUhEUgAAAMgAAADICAMAAACahl6sAAADAFBM..."
          }
        },
        "type": "object",
        "title": "Qr",
        "x-readme-ref-name": "Qr"
      },
      "Receipt": {
        "properties": {
          "id": {
            "description": "A base64 encoded receipt.",
            "type": "string",
            "format": "byte",
            "example": "TG9yZW0lMjBpcHN1bSUyMGRvbG9yJTIwc2l0JTIwYW1ldCwlMjBjb25zZWN0ZXR1ciUyMGFkaXBpc2NpbmclMjBlbGl0Lg=="
          },
          "signature": {
            "description": "Unique signature for a receipt.",
            "type": "string"
          },
          "approvalId": {
            "description": "Identifier for the transaction.",
            "type": "string"
          },
          "card": {
            "properties": {
              "id": {
                "description": "The identifier of the card scheme used.",
                "type": "integer",
                "example": "1009"
              },
              "name": {
                "description": "The name of the card scheme used.",
                "type": "string",
                "example": "Maestro"
              },
              "expireMonth": {
                "description": "The month in which the card expires",
                "type": "string",
                "example": "01"
              },
              "expireYear": {
                "description": "THe year in which the card expires",
                "type": "string",
                "example": "2023"
              },
              "pin": {
                "description": "The card pincode",
                "type": "string",
                "example": "12345"
              },
              "type": {
                "description": "The type of card",
                "type": "string",
                "enum": [
                  "POS",
                  "ECOM",
                  "CIT",
                  "MIT",
                  "MOTO",
                  "WALLET"
                ]
              }
            },
            "type": "object",
            "title": "Card",
            "x-readme-ref-name": "Card"
          },
          "paymentMethod": {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                "type": "integer",
                "example": "10"
              },
              "subId": {
                "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                "type": "string",
                "example": "10"
              },
              "name": {
                "description": "The name of the payment method.",
                "type": "string",
                "example": "ideal"
              }
            },
            "type": "object",
            "title": "PaymentMethod",
            "x-readme-ref-name": "PaymentMethod"
          }
        },
        "type": "object",
        "title": "Receipt",
        "x-readme-ref-name": "Receipt"
      },
      "Refund": {
        "properties": {
          "id": {
            "description": "The ID of the refund",
            "type": "string",
            "example": "RF-####-####-####"
          },
          "paymentSessionId": {
            "description": "The payment session identifier.",
            "type": "string",
            "example": 100000000
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "description": {
            "description": "The description of the refund.",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "The product never got delivered."
          },
          "bankAccount": {
            "required": [
              "iban",
              "bic",
              "owner"
            ],
            "properties": {
              "iban": {
                "description": "The International Bank Account Number (IBAN).",
                "type": "string",
                "example": "NL69INGB0123456789"
              },
              "bic": {
                "description": "Business Identifier Codes (BIC/SWIFT).",
                "type": "string",
                "example": "INGBNL2A"
              },
              "owner": {
                "description": "The owner of the bank account.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John Doe"
              }
            },
            "type": "object",
            "title": "BankAccount",
            "x-readme-ref-name": "BankAccount"
          },
          "status": {
            "properties": {
              "code": {
                "description": "The status code.",
                "type": "integer"
              },
              "action": {
                "description": "The state in which the transaction resides",
                "type": "string",
                "example": "PAID"
              },
              "phase": {
                "description": "The current phase in the transaction state",
                "type": "string",
                "example": "APPROVED"
              }
            },
            "type": "object",
            "title": "Status",
            "x-readme-ref-name": "Status"
          },
          "processDate": {
            "description": "The ISO date at which this entity will be processed",
            "type": "string",
            "format": "date-time",
            "example": "2019-01-01T12:00:00+02:00"
          },
          "vatPercentage": {
            "description": "the vat percentage this refund applies to. Only applicable for amount, not products, and only for AfterPay.",
            "type": "number",
            "format": "float",
            "example": "21.0"
          },
          "exchangeUrl": {
            "description": "The URL where we exchange the status of a transaction.",
            "type": "string",
            "format": "uri",
            "example": "https://demo.pay.nl/exchange.php"
          }
        },
        "type": "object",
        "title": "Refund",
        "x-readme-ref-name": "Refund"
      },
      "Service": {
        "properties": {
          "id": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string",
            "example": "SL-####-####"
          },
          "name": {
            "description": "The name of your service.",
            "type": "string",
            "example": "My first service!"
          },
          "description": {
            "description": "The description of the service.",
            "type": "string"
          },
          "testMode": {
            "description": "Indicates if the service is in testmode or not, possible values: false or true",
            "type": "integer"
          },
          "secret": {
            "description": "The unique reference for this service.",
            "type": "string",
            "example": "bade123abf124124abefa311b"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          }
        },
        "type": "object",
        "title": "Service",
        "x-readme-ref-name": "Service"
      },
      "PaymentMethodGroup": {
        "properties": {
          "name": {
            "description": "Payment method group name",
            "type": "string"
          },
          "image": {
            "description": "Payment method group image",
            "type": "string"
          },
          "paymentmethods": {
            "description": "Payment method group methods",
            "type": "array",
            "items": {
              "properties": {
                "paymentmethod": {
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                      "type": "integer",
                      "example": "10"
                    },
                    "name": {
                      "description": "The name of the payment method.",
                      "type": "string",
                      "example": "ideal"
                    },
                    "description": {
                      "type": "string"
                    },
                    "translations": {
                      "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                      "type": "object",
                      "uniqueItems": true,
                      "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                      "nullable": true,
                      "additionalProperties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    },
                    "image": {
                      "description": "The image of the payment method.",
                      "type": "string",
                      "example": "https://admin.pay.nl/images/payment_profiles/10.gif"
                    },
                    "options": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "description": "The ID of the issuer.",
                            "type": "integer",
                            "example": 2
                          },
                          "name": {
                            "description": "The name of the issuer.",
                            "type": "string",
                            "example": "Rabobank"
                          },
                          "image": {
                            "description": "The image of the issuer.",
                            "type": "string",
                            "example": "/issuers/4.svg"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "settings": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "key": {
                            "description": "The name of the setting.",
                            "type": "string"
                          },
                          "value": {
                            "description": "The value of the setting.",
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "minAmount": {
                      "description": "The minimum amount in cents in order to use this payment_method.",
                      "type": "integer",
                      "example": 100
                    },
                    "maxAmount": {
                      "description": "The maximum amount in cents which is allowed for this payment_method.",
                      "type": "integer",
                      "example": 100000
                    }
                  },
                  "type": "object",
                  "title": "PaymentMethodConfig",
                  "x-readme-ref-name": "PaymentMethodConfig"
                }
              },
              "type": "object"
            }
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "type": "object",
        "title": "PaymentMethodGroup",
        "x-readme-ref-name": "PaymentMethodGroup"
      },
      "ServiceConfigCategory": {
        "properties": {
          "code": {
            "description": "Category identifier.",
            "type": "string",
            "example": "CY-1234-4321"
          },
          "name": {
            "description": "The category name.",
            "type": "string"
          }
        },
        "type": "object",
        "title": "ServiceConfigCategory",
        "x-readme-ref-name": "ServiceConfigCategory"
      },
      "TurnOverGroup": {
        "properties": {
          "code": {
            "description": "Id of the turnover group",
            "type": "string",
            "example": "TM-####-####"
          },
          "name": {
            "description": "Name of the turn over group",
            "type": "string"
          }
        },
        "type": "object",
        "title": "TurnOverGroup",
        "x-readme-ref-name": "TurnOverGroup"
      },
      "Stats": {
        "properties": {
          "info": {
            "description": "The used info code which can be tracked in the stats.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Campagne 99"
          },
          "tool": {
            "description": "The used tool code which can be tracked in the stats.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Google"
          },
          "object": {
            "description": "The object which can be tracked in stats.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1
          },
          "extra1": {
            "description": "The first free value which can be tracked in the stats.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Customer 6985615"
          },
          "extra2": {
            "description": "The second free value which can be tracked in the stats.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Invoice 21.3695"
          },
          "extra3": {
            "description": "The third free value which can be tracked in the stats.",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "example": "Shop Amsterdam"
          },
          "domainId": {
            "description": "The ID of the duplicate content URL",
            "type": "string",
            "example": "WU-####-####"
          }
        },
        "type": "object",
        "title": "Stats",
        "x-readme-ref-name": "Stats"
      },
      "Status": {
        "properties": {
          "code": {
            "description": "The status code.",
            "type": "integer"
          },
          "action": {
            "description": "The state in which the transaction resides",
            "type": "string",
            "example": "PAID"
          },
          "phase": {
            "description": "The current phase in the transaction state",
            "type": "string",
            "example": "APPROVED"
          }
        },
        "type": "object",
        "title": "Status",
        "x-readme-ref-name": "Status"
      },
      "Terminal": {
        "properties": {
          "code": {
            "description": "The terminal identifier.",
            "type": "string",
            "example": "TH-1234-1234"
          },
          "name": {
            "description": "The name of the terminal.",
            "type": "string",
            "example": "Terminal Shop."
          },
          "attribution": {
            "description": "The terminal attribution.",
            "type": "string",
            "example": "PAY.nl* CompanyName"
          },
          "status": {
            "description": "The current status of the terminal.",
            "type": "string",
            "example": "ACTIVE"
          },
          "connectionStatus": {
            "description": "The current connection status of the terminal.",
            "type": "string",
            "example": "ONLINE"
          },
          "merchant": {
            "required": [
              "code",
              "name",
              "status"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              }
            },
            "type": "object",
            "title": "MerchantMinimal",
            "x-readme-ref-name": "MerchantMinimal"
          },
          "service": {
            "properties": {
              "id": {
                "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                "type": "string",
                "example": "SL-####-####"
              },
              "name": {
                "description": "The name of your service.",
                "type": "string",
                "example": "My first service!"
              },
              "description": {
                "description": "The description of the service.",
                "type": "string"
              },
              "testMode": {
                "description": "Indicates if the service is in testmode or not, possible values: false or true",
                "type": "integer"
              },
              "secret": {
                "description": "The unique reference for this service.",
                "type": "string",
                "example": "bade123abf124124abefa311b"
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              }
            },
            "type": "object",
            "title": "Service",
            "x-readme-ref-name": "Service"
          },
          "description": {
            "description": "The terminal description.",
            "type": "string"
          },
          "supplier": {
            "properties": {
              "id": {
                "description": "The terminal supplier id",
                "type": "integer",
                "example": "1"
              },
              "name": {
                "description": "The terminal supplier name",
                "type": "string",
                "example": "AtosWorldline"
              },
              "terminalId": {
                "description": "The terminal supplier id",
                "type": "string",
                "example": "1"
              }
            },
            "type": "object",
            "title": "TerminalSupplier",
            "x-readme-ref-name": "TerminalSupplier"
          },
          "terminalType": {
            "description": "The terminal type.",
            "type": "string"
          },
          "ecrProtocol": {
            "description": "The ECR protocol.",
            "type": "string",
            "example": "WEB"
          },
          "contractStartDate": {
            "description": "The terminal contract startdate.",
            "type": "string",
            "format": "date-time"
          },
          "contractEndDate": {
            "description": "The terminal contract enddate.",
            "type": "string",
            "format": "date-time"
          },
          "paymentTypes": {
            "description": "The terminal payment type.",
            "type": "array",
            "items": {
              "properties": {
                "paymentType": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "terminalBrands": {
            "description": "The terminal brands.",
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "description": "The terminal contract enddate.",
                  "type": "integer"
                },
                "name": {
                  "description": "The terminal contract enddate.",
                  "type": "string"
                },
                "image": {
                  "description": "The terminal contract enddate.",
                  "type": "string"
                },
                "acquirer": {
                  "description": "The terminal acquirer",
                  "type": "string"
                },
                "acquirerTid": {
                  "description": "The terminal contract enddate.",
                  "type": "string"
                },
                "acquirerMid": {
                  "description": "The terminal contract number",
                  "type": "string"
                },
                "acquirerChecksum": {
                  "description": "The terminal contract enddate.",
                  "type": "string"
                },
                "paymentTypes": {
                  "description": "The terminal payment type.",
                  "type": "array",
                  "items": {
                    "properties": {
                      "paymentType": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "createdBy": {
                  "description": "The reference to an account or token whom created the entity",
                  "type": "string",
                  "pattern": "^A(T)?(-\\d{4}){2}$",
                  "readOnly": true,
                  "example": "A-1234-4321",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "modifiedBy": {
                  "description": "The reference to an account or token whom modified the entity",
                  "type": "string",
                  "pattern": "^A(T)?(-\\d{4}){2}$",
                  "readOnly": true,
                  "example": "A-1234-4321",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedBy": {
                  "description": "The reference to an account or token whom deleted the entity",
                  "type": "string",
                  "pattern": "^A(T)?(-\\d{4}){2}$",
                  "readOnly": true,
                  "example": "A-1234-4321",
                  "nullable": true
                }
              },
              "type": "object",
              "title": "TerminalBrand",
              "x-readme-ref-name": "TerminalBrand"
            }
          },
          "location": {
            "required": [
              "code",
              "streetName",
              "zipCode",
              "city",
              "countryCode"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Location",
            "x-readme-ref-name": "Location"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Terminal",
        "x-readme-ref-name": "Terminal"
      },
      "TerminalBrand": {
        "properties": {
          "id": {
            "description": "The terminal contract enddate.",
            "type": "integer"
          },
          "name": {
            "description": "The terminal contract enddate.",
            "type": "string"
          },
          "image": {
            "description": "The terminal contract enddate.",
            "type": "string"
          },
          "acquirer": {
            "description": "The terminal acquirer",
            "type": "string"
          },
          "acquirerTid": {
            "description": "The terminal contract enddate.",
            "type": "string"
          },
          "acquirerMid": {
            "description": "The terminal contract number",
            "type": "string"
          },
          "acquirerChecksum": {
            "description": "The terminal contract enddate.",
            "type": "string"
          },
          "paymentTypes": {
            "description": "The terminal payment type.",
            "type": "array",
            "items": {
              "properties": {
                "paymentType": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "TerminalBrand",
        "x-readme-ref-name": "TerminalBrand"
      },
      "TerminalSupplier": {
        "properties": {
          "id": {
            "description": "The terminal supplier id",
            "type": "integer",
            "example": "1"
          },
          "name": {
            "description": "The terminal supplier name",
            "type": "string",
            "example": "AtosWorldline"
          },
          "terminalId": {
            "description": "The terminal supplier id",
            "type": "string",
            "example": "1"
          }
        },
        "type": "object",
        "title": "TerminalSupplier",
        "x-readme-ref-name": "TerminalSupplier"
      },
      "TerminalTransaction": {
        "properties": {
          "state": {
            "description": "The state of the terminal transaction.",
            "type": "string"
          },
          "terminalTransactionId": {
            "description": "The terminal transaction ID.",
            "type": "string",
            "example": "TT-####-####-####."
          },
          "transactionHash": {
            "description": "The hash of this terminal transaction.",
            "type": "string"
          },
          "issuerUrl": {
            "description": "The issuer URL for this terminal transaction",
            "type": "string",
            "format": "uri"
          },
          "statusUrl": {
            "description": "The status URL for this terminal transaction",
            "type": "string",
            "format": "uri"
          },
          "cancelUrl": {
            "description": "The cancel URL for this terminal transaction",
            "type": "string",
            "format": "uri"
          },
          "nextUrl": {
            "description": "The next URL for this terminal transaction when it's not completed yet.",
            "type": "string",
            "format": "uri"
          },
          "terminal": {
            "properties": {
              "code": {
                "description": "The terminal identifier.",
                "type": "string",
                "example": "TH-1234-1234"
              },
              "name": {
                "description": "The name of the terminal.",
                "type": "string",
                "example": "Terminal Shop."
              },
              "attribution": {
                "description": "The terminal attribution.",
                "type": "string",
                "example": "PAY.nl* CompanyName"
              },
              "status": {
                "description": "The current status of the terminal.",
                "type": "string",
                "example": "ACTIVE"
              },
              "connectionStatus": {
                "description": "The current connection status of the terminal.",
                "type": "string",
                "example": "ONLINE"
              },
              "merchant": {
                "required": [
                  "code",
                  "name",
                  "status"
                ],
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string",
                    "example": "ACTIVE"
                  }
                },
                "type": "object",
                "title": "MerchantMinimal",
                "x-readme-ref-name": "MerchantMinimal"
              },
              "service": {
                "properties": {
                  "id": {
                    "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                    "type": "string",
                    "example": "SL-####-####"
                  },
                  "name": {
                    "description": "The name of your service.",
                    "type": "string",
                    "example": "My first service!"
                  },
                  "description": {
                    "description": "The description of the service.",
                    "type": "string"
                  },
                  "testMode": {
                    "description": "Indicates if the service is in testmode or not, possible values: false or true",
                    "type": "integer"
                  },
                  "secret": {
                    "description": "The unique reference for this service.",
                    "type": "string",
                    "example": "bade123abf124124abefa311b"
                  },
                  "createdAt": {
                    "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "example": "2016-06-04T08:15:00+01:00",
                    "nullable": false
                  }
                },
                "type": "object",
                "title": "Service",
                "x-readme-ref-name": "Service"
              },
              "description": {
                "description": "The terminal description.",
                "type": "string"
              },
              "supplier": {
                "properties": {
                  "id": {
                    "description": "The terminal supplier id",
                    "type": "integer",
                    "example": "1"
                  },
                  "name": {
                    "description": "The terminal supplier name",
                    "type": "string",
                    "example": "AtosWorldline"
                  },
                  "terminalId": {
                    "description": "The terminal supplier id",
                    "type": "string",
                    "example": "1"
                  }
                },
                "type": "object",
                "title": "TerminalSupplier",
                "x-readme-ref-name": "TerminalSupplier"
              },
              "terminalType": {
                "description": "The terminal type.",
                "type": "string"
              },
              "ecrProtocol": {
                "description": "The ECR protocol.",
                "type": "string",
                "example": "WEB"
              },
              "contractStartDate": {
                "description": "The terminal contract startdate.",
                "type": "string",
                "format": "date-time"
              },
              "contractEndDate": {
                "description": "The terminal contract enddate.",
                "type": "string",
                "format": "date-time"
              },
              "paymentTypes": {
                "description": "The terminal payment type.",
                "type": "array",
                "items": {
                  "properties": {
                    "paymentType": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "terminalBrands": {
                "description": "The terminal brands.",
                "type": "array",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The terminal contract enddate.",
                      "type": "integer"
                    },
                    "name": {
                      "description": "The terminal contract enddate.",
                      "type": "string"
                    },
                    "image": {
                      "description": "The terminal contract enddate.",
                      "type": "string"
                    },
                    "acquirer": {
                      "description": "The terminal acquirer",
                      "type": "string"
                    },
                    "acquirerTid": {
                      "description": "The terminal contract enddate.",
                      "type": "string"
                    },
                    "acquirerMid": {
                      "description": "The terminal contract number",
                      "type": "string"
                    },
                    "acquirerChecksum": {
                      "description": "The terminal contract enddate.",
                      "type": "string"
                    },
                    "paymentTypes": {
                      "description": "The terminal payment type.",
                      "type": "array",
                      "items": {
                        "properties": {
                          "paymentType": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "createdAt": {
                      "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": false
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    },
                    "modifiedAt": {
                      "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "modifiedBy": {
                      "description": "The reference to an account or token whom modified the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    },
                    "deletedAt": {
                      "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00",
                      "nullable": true
                    },
                    "deletedBy": {
                      "description": "The reference to an account or token whom deleted the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": true
                    }
                  },
                  "type": "object",
                  "title": "TerminalBrand",
                  "x-readme-ref-name": "TerminalBrand"
                }
              },
              "location": {
                "required": [
                  "code",
                  "streetName",
                  "zipCode",
                  "city",
                  "countryCode"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Location",
                "x-readme-ref-name": "Location"
              },
              "createdAt": {
                "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": false
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              },
              "modifiedAt": {
                "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "modifiedBy": {
                "description": "The reference to an account or token whom modified the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object",
            "title": "Terminal",
            "x-readme-ref-name": "Terminal"
          },
          "progress": {
            "description": "A terminal transaction lasts up to 45 seconds. The progress indicates how long the terminal is not available/the customer has time to complete the transaction",
            "properties": {
              "percentage": {
                "description": "Progress in percentage.",
                "type": "number",
                "format": "float"
              },
              "secondsPassed": {
                "description": "The amount of seconds the transaction is waiting for the payer since starting the transaction.",
                "type": "integer"
              },
              "percentagePerSecond": {
                "description": "Each second corresponds to a percentage the transaction is in progress.",
                "type": "number",
                "format": "float"
              }
            },
            "type": "object",
            "title": "Progress",
            "x-readme-ref-name": "Progress"
          }
        },
        "type": "object",
        "title": "TerminalTransaction",
        "x-readme-ref-name": "TerminalTransaction"
      },
      "TradeName": {
        "properties": {
          "code": {
            "description": "An identifier for this TradeName",
            "type": "string"
          },
          "name": {
            "description": "A registered TradeName",
            "type": "string"
          }
        },
        "type": "object",
        "title": "TradeName",
        "x-readme-ref-name": "TradeName"
      },
      "Trademark": {
        "required": [
          "name"
        ],
        "properties": {
          "code": {
            "description": "An identifier for this trademark",
            "type": "string",
            "example": "TM-0000-0000"
          },
          "type": {
            "type": "string"
          },
          "name": {
            "description": "A registered trademark name.",
            "type": "string"
          },
          "status": {
            "description": "Status of the trademark.",
            "type": "string"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Trademark",
        "x-readme-ref-name": "Trademark"
      },
      "TransactionInfo": {
        "required": [
          "serviceId",
          "amount",
          "returnUrl"
        ],
        "properties": {
          "id": {
            "description": "The Id of the transaction.",
            "type": "string",
            "example": "EX-1234-1234-1234"
          },
          "orderId": {
            "description": "The orderId of the transaction.",
            "type": "string",
            "example": "EX-1234-1234-1234"
          },
          "serviceCode": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "Example description."
          },
          "reference": {
            "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]{1,64}$",
            "example": "12345XXY0123"
          },
          "manualTransferCode": {
            "description": "Payment reference used to identify manual bank transfers",
            "type": "string",
            "example": "0000 0000 0000 0000"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountConverted": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountPaid": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountRefunded": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "status": {
            "properties": {
              "code": {
                "description": "The status code.",
                "type": "integer"
              },
              "action": {
                "description": "The state in which the transaction resides",
                "type": "string",
                "example": "PAID"
              },
              "phase": {
                "description": "The current phase in the transaction state",
                "type": "string",
                "example": "APPROVED"
              }
            },
            "type": "object",
            "title": "Status",
            "x-readme-ref-name": "Status"
          },
          "paymentData": {
            "properties": {
              "method": {
                "description": "Payment method of the transaction.",
                "type": "string"
              },
              "customerKey": {
                "description": "Customer key of the customer from the transaction.",
                "type": "string"
              },
              "customerId": {
                "description": "Customer id of the customer from the transaction.",
                "type": "string"
              },
              "customerName": {
                "description": "Customer name of the customer from the transaction.",
                "type": "string"
              },
              "ipAddress": {
                "description": "Ip address of the customer from the transaction.",
                "type": "string"
              },
              "secureStatus": {
                "description": "Secure status of the transaction.",
                "type": "boolean"
              },
              "paymentVerificationMethod": {
                "type": "integer"
              }
            },
            "type": "object",
            "title": "TransactionStatusPaymentData",
            "x-readme-ref-name": "TransactionStatusPaymentData"
          },
          "paymentMethod": {
            "properties": {
              "id": {
                "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                "type": "integer"
              },
              "subId": {
                "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                "type": "integer"
              }
            },
            "type": "object",
            "title": "TransactionStatusPaymentMethod",
            "x-readme-ref-name": "TransactionStatusPaymentMethod"
          },
          "integration": {
            "properties": {
              "testMode": {
                "description": "Indicates if the service is in testmode or not, possible values: false or true",
                "type": "boolean"
              }
            },
            "type": "object",
            "title": "Integration",
            "x-readme-ref-name": "Integration"
          },
          "customer": {
            "properties": {
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "type": {
                "description": "Either B for business or C for consumer.",
                "type": "string",
                "enum": [
                  "B",
                  "C"
                ]
              },
              "ip": {
                "description": "An ip address",
                "type": "string",
                "example": "213.126.82.230"
              },
              "birthDate": {
                "description": "Date of birth as defined in ISO-8601.",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "gender": {
                "description": "The subject's gender. Choose either M for male or F for female.",
                "type": "string",
                "example": "M"
              },
              "phone": {
                "description": "The subject's phone number. Optionally prepended with a + and country code",
                "type": "string",
                "example": "0031612345678"
              },
              "email": {
                "description": "An email address.",
                "type": "string",
                "format": "email",
                "example": "sandbox@pay.nl"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "enum": [
                  "NL",
                  "EN",
                  "DE",
                  "FR",
                  "IT",
                  "ES"
                ],
                "example": "NL"
              },
              "trust": {
                "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                "type": "integer",
                "maximum": 10,
                "minimum": -10,
                "example": -5
              },
              "reference": {
                "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]{1,64}$",
                "example": "NL87654321"
              },
              "bankAccount": {
                "required": [
                  "iban",
                  "bic",
                  "owner"
                ],
                "properties": {
                  "iban": {
                    "description": "The International Bank Account Number (IBAN).",
                    "type": "string",
                    "example": "NL69INGB0123456789"
                  },
                  "bic": {
                    "description": "Business Identifier Codes (BIC/SWIFT).",
                    "type": "string",
                    "example": "INGBNL2A"
                  },
                  "owner": {
                    "description": "The owner of the bank account.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John Doe"
                  }
                },
                "type": "object",
                "title": "BankAccount",
                "x-readme-ref-name": "BankAccount"
              },
              "company": {
                "properties": {
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "example": "CompanyName"
                  },
                  "coc": {
                    "description": "Your Chamber of commerce registration number. This format differs per country.",
                    "type": "string",
                    "example": "12345678"
                  },
                  "vat": {
                    "description": "Value added tax identification number (VAT identification number).",
                    "type": "string",
                    "example": "NL807960147B01"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Company",
                "x-readme-ref-name": "Company"
              }
            },
            "type": "object",
            "title": "Customer",
            "x-readme-ref-name": "Customer"
          },
          "order": {
            "properties": {
              "countryCode": {
                "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              },
              "deliveryDate": {
                "description": "The date of delivery.",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "invoiceDate": {
                "description": "The date of the invoice",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "deliveryAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "invoiceAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "products": {
                "type": "array",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The product identifier.",
                      "type": "string",
                      "example": "TEST_01"
                    },
                    "description": {
                      "description": "The description of the product.",
                      "type": "string",
                      "example": "Some product description"
                    },
                    "type": {
                      "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                      "type": "string",
                      "enum": [
                        "shipping",
                        "article",
                        "discount",
                        "rounding",
                        "handling",
                        "payment",
                        "credit",
                        "giftcard",
                        "emoney",
                        "crypto"
                      ]
                    },
                    "price": {
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        }
                      },
                      "type": "object"
                    },
                    "quantity": {
                      "description": "The quantity.",
                      "type": "number",
                      "format": "float"
                    },
                    "vatCode": {
                      "description": "The VAT code to use.",
                      "type": "string",
                      "enum": [
                        "N",
                        "H",
                        "L"
                      ]
                    }
                  },
                  "type": "object",
                  "title": "Product",
                  "x-readme-ref-name": "Product"
                }
              }
            },
            "type": "object",
            "title": "Order",
            "x-readme-ref-name": "Order"
          },
          "stats": {
            "properties": {
              "info": {
                "description": "The used info code which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Campagne 99"
              },
              "tool": {
                "description": "The used tool code which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Google"
              },
              "object": {
                "description": "The object which can be tracked in stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              },
              "extra1": {
                "description": "The first free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Customer 6985615"
              },
              "extra2": {
                "description": "The second free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Invoice 21.3695"
              },
              "extra3": {
                "description": "The third free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Shop Amsterdam"
              },
              "domainId": {
                "description": "The ID of the duplicate content URL",
                "type": "string",
                "example": "WU-####-####"
              }
            },
            "type": "object",
            "title": "Stats",
            "x-readme-ref-name": "Stats"
          },
          "transferData": {
            "properties": {
              "name": {
                "description": "The name of the variable to be tracked in the transaction.",
                "type": "string",
                "example": "stat1"
              },
              "value": {
                "description": "The value of the variable to be tracked in the transaction.",
                "type": "string",
                "example": "ab8827dfc"
              }
            },
            "type": "object",
            "title": "TransferData",
            "x-readme-ref-name": "TransferData"
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "expiredAt": {
            "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          }
        },
        "type": "object",
        "title": "TransactionInfo",
        "x-readme-ref-name": "TransactionInfo"
      },
      "TransactionStatus": {
        "properties": {
          "id": {
            "description": "The Id of the transaction.",
            "type": "string"
          },
          "orderId": {
            "description": "The orderId of the transaction.",
            "type": "string"
          },
          "serviceCode": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "type": "string"
          },
          "reference": {
            "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
            "type": "string"
          },
          "ipAddress": {
            "description": "An ip address",
            "type": "string"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountConverted": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountPaid": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountRefunded": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "status": {
            "properties": {
              "code": {
                "description": "The status code.",
                "type": "integer"
              },
              "action": {
                "description": "The state in which the transaction resides",
                "type": "string",
                "example": "PAID"
              },
              "phase": {
                "description": "The current phase in the transaction state",
                "type": "string",
                "example": "APPROVED"
              }
            },
            "type": "object",
            "title": "Status",
            "x-readme-ref-name": "Status"
          },
          "paymentData": {
            "properties": {
              "method": {
                "description": "Payment method of the transaction.",
                "type": "string"
              },
              "customerKey": {
                "description": "Customer key of the customer from the transaction.",
                "type": "string"
              },
              "customerId": {
                "description": "Customer id of the customer from the transaction.",
                "type": "string"
              },
              "customerName": {
                "description": "Customer name of the customer from the transaction.",
                "type": "string"
              },
              "ipAddress": {
                "description": "Ip address of the customer from the transaction.",
                "type": "string"
              },
              "secureStatus": {
                "description": "Secure status of the transaction.",
                "type": "boolean"
              },
              "paymentVerificationMethod": {
                "type": "integer"
              }
            },
            "type": "object",
            "title": "TransactionStatusPaymentData",
            "x-readme-ref-name": "TransactionStatusPaymentData"
          },
          "paymentMethod": {
            "properties": {
              "id": {
                "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                "type": "integer"
              },
              "subId": {
                "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                "type": "integer"
              }
            },
            "type": "object",
            "title": "TransactionStatusPaymentMethod",
            "x-readme-ref-name": "TransactionStatusPaymentMethod"
          },
          "integration": {
            "properties": {
              "testMode": {
                "description": "Indicates if the service is in testmode or not, possible values: false or true",
                "type": "boolean"
              }
            },
            "type": "object",
            "title": "Integration",
            "x-readme-ref-name": "Integration"
          },
          "expiredAt": {
            "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "nullable": true
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "TransactionStatus",
        "x-readme-ref-name": "TransactionStatus"
      },
      "TransactionStatusPaymentData": {
        "properties": {
          "method": {
            "description": "Payment method of the transaction.",
            "type": "string"
          },
          "customerKey": {
            "description": "Customer key of the customer from the transaction.",
            "type": "string"
          },
          "customerId": {
            "description": "Customer id of the customer from the transaction.",
            "type": "string"
          },
          "customerName": {
            "description": "Customer name of the customer from the transaction.",
            "type": "string"
          },
          "ipAddress": {
            "description": "Ip address of the customer from the transaction.",
            "type": "string"
          },
          "secureStatus": {
            "description": "Secure status of the transaction.",
            "type": "boolean"
          },
          "paymentVerificationMethod": {
            "type": "integer"
          }
        },
        "type": "object",
        "title": "TransactionStatusPaymentData",
        "x-readme-ref-name": "TransactionStatusPaymentData"
      },
      "TransactionStatusPaymentMethod": {
        "properties": {
          "id": {
            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
            "type": "integer"
          },
          "subId": {
            "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
            "type": "integer"
          }
        },
        "type": "object",
        "title": "TransactionStatusPaymentMethod",
        "x-readme-ref-name": "TransactionStatusPaymentMethod"
      },
      "Transfer": {
        "properties": {
          "value": {
            "description": "Use a valid MerchantId or orderId.",
            "type": "string",
            "example": "merchant, transaction"
          },
          "type": {
            "description": "Use transaction, merchant or alliance to change the beneficiary owner of the transaction.",
            "type": "string",
            "enum": [
              "merchant",
              "transaction",
              "alliance"
            ]
          },
          "data": {
            "description": "Option to send multiple values via an array which can be tracked in the stats.",
            "type": "string",
            "example": [
              "value1",
              "value2"
            ]
          }
        },
        "type": "object",
        "title": "Transfer",
        "x-readme-ref-name": "Transfer"
      },
      "TransferData": {
        "properties": {
          "name": {
            "description": "The name of the variable to be tracked in the transaction.",
            "type": "string",
            "example": "stat1"
          },
          "value": {
            "description": "The value of the variable to be tracked in the transaction.",
            "type": "string",
            "example": "ab8827dfc"
          }
        },
        "type": "object",
        "title": "TransferData",
        "x-readme-ref-name": "TransferData"
      },
      "TurnoverGroup": {
        "required": [
          "code",
          "name",
          "default",
          "description",
          "paymentDescription",
          "merchant",
          "bankAccount",
          "createdAt",
          "createdBy",
          "modifiedAt",
          "modifiedBy",
          "deletedAt",
          "deletedBy"
        ],
        "properties": {
          "code": {
            "type": "string",
            "example": "CT-1234-4321"
          },
          "name": {
            "type": "string"
          },
          "default": {
            "type": "boolean"
          },
          "description": {
            "type": "string"
          },
          "paymentDescription": {
            "type": "string",
            "nullable": true
          },
          "merchant": {
            "required": [
              "code",
              "status",
              "name"
            ],
            "properties": {
              "code": {
                "description": "The merchant id of your company starting with M.",
                "type": "string",
                "example": "M-1234-4321"
              },
              "status": {
                "description": "Merchant state",
                "type": "string",
                "example": "ACTIVE"
              },
              "name": {
                "description": "The name of your merchant.",
                "type": "string",
                "maxLength": 128,
                "minLength": 2,
                "example": "CompanyName"
              }
            },
            "type": "object"
          },
          "bankAccount": {
            "required": [
              "code",
              "status",
              "method",
              "iban"
            ],
            "properties": {
              "code": {
                "description": "The merchant bank account id of your company starting with BA.",
                "type": "string",
                "example": "BA-1234-4321"
              },
              "status": {
                "description": "The current check status of the clearing account.",
                "type": "string",
                "example": "NOT_CHECKED"
              },
              "method": {
                "description": "The method to add the clearing account. NOTE: Only 'iban' is supported for now!",
                "type": "string",
                "example": "iban"
              },
              "iban": {
                "required": [
                  "iban",
                  "bic",
                  "owner"
                ],
                "properties": {
                  "iban": {
                    "description": "The International Bank Account Number (IBAN).",
                    "type": "string",
                    "example": "NL69INGB0123456789"
                  },
                  "bic": {
                    "description": "Business Identifier Codes (BIC/SWIFT).",
                    "type": "string",
                    "example": "INGBNL2A"
                  },
                  "owner": {
                    "description": "The owner of the bank account.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John Doe"
                  }
                },
                "type": "object",
                "title": "BankAccount",
                "x-readme-ref-name": "BankAccount"
              }
            },
            "type": "object",
            "nullable": true
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "TurnoverGroup",
        "x-readme-ref-name": "TurnoverGroup"
      },
      "Universal": {
        "properties": {
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "requiredFields": {
            "description": "The required fields of the payment method.",
            "type": "array",
            "items": {
              "properties": {
                "fieldName": {
                  "type": "string"
                },
                "mandatory": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "Universal",
        "x-readme-ref-name": "Universal"
      },
      "VisitAddress": {
        "allOf": [
          {
            "properties": {
              "code": {
                "type": "string"
              },
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "streetName": {
                "description": "The name of the street",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Visitlane"
              },
              "streetNumber": {
                "description": "The street number",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "13"
              },
              "streetNumberExtension": {
                "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "b1"
              },
              "zipCode": {
                "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                "type": "string",
                "maxLength": 16,
                "minLength": 1,
                "example": "5678CD"
              },
              "city": {
                "description": "The name of a city",
                "type": "string",
                "maxLength": 128,
                "minLength": 1,
                "example": "Amsterdam"
              },
              "regionCode": {
                "description": "Region code (iso-3166-2)",
                "type": "string",
                "example": "ZH"
              },
              "countryCode": {
                "description": "The country code consisting of 2 uppercase letters",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              }
            },
            "type": "object",
            "title": "Address",
            "x-readme-ref-name": "Address"
          }
        ],
        "title": "VisitAddress",
        "x-readme-ref-name": "VisitAddress"
      },
      "Voucher": {
        "required": [
          "cardNumber"
        ],
        "properties": {
          "cardNumber": {
            "description": "The number on your voucher card.",
            "type": "string",
            "example": "12345678"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "pinCode": {
            "description": "Your pincode.",
            "type": "string",
            "example": "1234"
          },
          "posId": {
            "description": "The ID of the point of sale device.",
            "type": "string",
            "example": "1234567"
          },
          "type": {
            "description": "The type of voucher transaction. Can be one of: \"POS\", \"ECOM\"",
            "type": "string",
            "example": "POS"
          }
        },
        "type": "object",
        "title": "Voucher",
        "x-readme-ref-name": "Voucher"
      },
      "WebsiteUrl": {
        "properties": {
          "code": {
            "description": "The code of the website URL.",
            "type": "string",
            "example": "WU-1234-1234"
          },
          "website": {
            "description": "The website URL.",
            "type": "string",
            "example": "https://www.pay.nl"
          }
        },
        "type": "object",
        "title": "WebsiteUrl",
        "x-readme-ref-name": "WebsiteUrl"
      },
      "Whitelabel": {
        "properties": {
          "primaryColor": {
            "description": "Primary color of the whitelabel.",
            "type": "string",
            "example": "000000"
          },
          "secondaryColor": {
            "description": "Secondary color of the whitelabel.",
            "type": "string",
            "example": "000000"
          },
          "footerData": {
            "description": "Footer data of the whitelabel",
            "type": "string",
            "example": ""
          }
        },
        "type": "object",
        "title": "Whitelabel",
        "x-readme-ref-name": "Whitelabel"
      },
      "CheckoutOption": {
        "allOf": [
          {
            "properties": {
              "name": {
                "description": "Payment method group name",
                "type": "string"
              },
              "image": {
                "description": "Payment method group image",
                "type": "string"
              },
              "paymentmethods": {
                "description": "Payment method group methods",
                "type": "array",
                "items": {
                  "properties": {
                    "paymentmethod": {
                      "required": [
                        "id"
                      ],
                      "properties": {
                        "id": {
                          "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                          "type": "integer",
                          "example": "10"
                        },
                        "name": {
                          "description": "The name of the payment method.",
                          "type": "string",
                          "example": "ideal"
                        },
                        "description": {
                          "type": "string"
                        },
                        "translations": {
                          "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                          "type": "object",
                          "uniqueItems": true,
                          "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                          "nullable": true,
                          "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          }
                        },
                        "image": {
                          "description": "The image of the payment method.",
                          "type": "string",
                          "example": "https://admin.pay.nl/images/payment_profiles/10.gif"
                        },
                        "options": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "id": {
                                "description": "The ID of the issuer.",
                                "type": "integer",
                                "example": 2
                              },
                              "name": {
                                "description": "The name of the issuer.",
                                "type": "string",
                                "example": "Rabobank"
                              },
                              "image": {
                                "description": "The image of the issuer.",
                                "type": "string",
                                "example": "/issuers/4.svg"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "settings": {
                          "type": "array",
                          "items": {
                            "properties": {
                              "key": {
                                "description": "The name of the setting.",
                                "type": "string"
                              },
                              "value": {
                                "description": "The value of the setting.",
                                "type": "string"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "minAmount": {
                          "description": "The minimum amount in cents in order to use this payment_method.",
                          "type": "integer",
                          "example": 100
                        },
                        "maxAmount": {
                          "description": "The maximum amount in cents which is allowed for this payment_method.",
                          "type": "integer",
                          "example": 100000
                        }
                      },
                      "type": "object",
                      "title": "PaymentMethodConfig",
                      "x-readme-ref-name": "PaymentMethodConfig"
                    }
                  },
                  "type": "object"
                }
              },
              "translations": {
                "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                "type": "object",
                "uniqueItems": true,
                "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                "nullable": true,
                "additionalProperties": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            },
            "type": "object",
            "title": "PaymentMethodGroup",
            "x-readme-ref-name": "PaymentMethodGroup"
          },
          {
            "properties": {
              "tag": {
                "type": "string"
              },
              "requiredFields": {
                "description": "The required fields of the payment method.",
                "type": "array",
                "items": {
                  "properties": {
                    "fieldName": {
                      "type": "string"
                    },
                    "mandatory": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            },
            "type": "object"
          }
        ],
        "title": "CheckoutOption",
        "x-readme-ref-name": "CheckoutOption"
      },
      "Error": {
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "detail": {
            "type": "string"
          },
          "violations": {
            "type": "array",
            "items": {
              "properties": {
                "propertyPath": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "code": {
                  "type": "string"
                }
              },
              "type": "object",
              "title": "Violation",
              "x-readme-ref-name": "Violation"
            }
          }
        },
        "type": "object",
        "title": "Error",
        "x-readme-ref-name": "Error"
      },
      "PaymentMethodsFull": {
        "properties": {
          "id": {
            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
            "type": "integer"
          },
          "name": {
            "description": "The name of the payment method.",
            "type": "string"
          },
          "description": {
            "description": "The description of the payment method.",
            "type": "string"
          },
          "sequence": {
            "description": "The sequence of the payment method.",
            "type": "integer"
          },
          "public": {
            "description": "Public status of the payment method.",
            "type": "boolean"
          },
          "status": {
            "description": "Active status of payment method.",
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "image": {
            "description": "The image of the payment method.",
            "type": "string"
          },
          "paymentProfiles": {
            "description": "The payment profiles of the payment method.",
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "description": "The payment profile identifier.",
                  "type": "integer"
                },
                "name": {
                  "description": "The name of the payment profile.",
                  "type": "string"
                },
                "publicName": {
                  "description": "Public name of the payment method",
                  "type": "string"
                },
                "public": {
                  "description": "Check if payment method is public",
                  "type": "boolean"
                },
                "selectable": {
                  "description": "check if payment method is selectable",
                  "type": "boolean"
                },
                "translations": {
                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                  "type": "object",
                  "uniqueItems": true,
                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                  "nullable": true,
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "image": {
                  "description": "The image of the payment method.",
                  "type": "string"
                },
                "issuers": {
                  "description": "Issuers linked to payment method",
                  "type": "array",
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  }
                },
                "categories": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "code": {
                        "description": "The category (code) identifier",
                        "type": "string",
                        "example": "CY-1234-4321"
                      },
                      "name": {
                        "description": "The category name.",
                        "type": "string",
                        "example": "Digitale diensten gambling (kansspelen)"
                      }
                    },
                    "type": "object"
                  }
                },
                "paymentMethodGroup": {
                  "description": "Payment method group where payment method is assigned to",
                  "type": "string"
                },
                "paymentType": {
                  "description": "Payment type",
                  "type": "string"
                },
                "createdAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                },
                "modifiedAt": {
                  "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": true
                },
                "deletedAt": {
                  "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true,
                  "example": "2016-06-04T08:15:00+01:00",
                  "nullable": false
                }
              },
              "type": "object",
              "title": "PaymentProfile",
              "x-readme-ref-name": "PaymentProfile"
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "PaymentMethodsFull",
        "x-readme-ref-name": "PaymentMethodsFull"
      },
      "PaymentMethodGroups": {
        "properties": {
          "id": {
            "description": "payment method group id",
            "type": "integer"
          },
          "name": {
            "description": "Payment method group name",
            "type": "string"
          },
          "publicName": {
            "description": "Payment method group public name",
            "type": "string"
          },
          "sequence": {
            "description": "Payment method group sequence number",
            "type": "integer"
          },
          "image": {
            "description": "Payment method group image",
            "type": "string"
          },
          "requiredFields": {
            "description": "The required fields of the payment method.",
            "type": "array",
            "items": {
              "properties": {
                "fieldName": {
                  "type": "string"
                },
                "mandatory": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          }
        },
        "type": "object",
        "title": "PaymentMethodGroups",
        "x-readme-ref-name": "PaymentMethodGroups"
      },
      "ServiceConfig": {
        "properties": {
          "code": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string",
            "example": "SL-####-####"
          },
          "secret": {
            "description": "The unique reference for this service.",
            "type": "string",
            "example": "bade123abf124124abefa311b"
          },
          "testMode": {
            "description": "Indicates if the service is in testmode or not, possible values: false or true",
            "type": "boolean"
          },
          "name": {
            "description": "The name of your service.",
            "type": "string",
            "example": "My first service!"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "status": {
            "description": "The state of the service",
            "type": "string"
          },
          "merchant": {
            "items": {
              "properties": {
                "code": {
                  "description": "The merchant id of your company starting with M.",
                  "type": "string",
                  "example": "M-####-####"
                },
                "status": {
                  "description": "Merchant state",
                  "type": "string"
                },
                "name": {
                  "description": "The name of your merchant.",
                  "type": "string",
                  "maxLength": 128,
                  "minLength": 2,
                  "example": "CompanyName"
                }
              },
              "type": "object",
              "title": "MerchantConfig",
              "x-readme-ref-name": "MerchantConfig"
            },
            "nullable": true,
            "oneOf": [
              {
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-####-####"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  }
                },
                "type": "object",
                "title": "MerchantConfig",
                "x-readme-ref-name": "MerchantConfig"
              }
            ]
          },
          "category": {
            "items": {
              "properties": {
                "code": {
                  "description": "Category identifier.",
                  "type": "string",
                  "example": "CY-1234-4321"
                },
                "name": {
                  "description": "The category name.",
                  "type": "string"
                }
              },
              "type": "object",
              "title": "ServiceConfigCategory",
              "x-readme-ref-name": "ServiceConfigCategory"
            },
            "nullable": true,
            "oneOf": [
              {
                "properties": {
                  "code": {
                    "description": "Category identifier.",
                    "type": "string",
                    "example": "CY-1234-4321"
                  },
                  "name": {
                    "description": "The category name.",
                    "type": "string"
                  }
                },
                "type": "object",
                "title": "ServiceConfigCategory",
                "x-readme-ref-name": "ServiceConfigCategory"
              }
            ]
          },
          "mcc": {
            "type": "integer",
            "nullable": true
          },
          "turnOverGroup": {
            "items": {
              "properties": {
                "code": {
                  "description": "Id of the turnover group",
                  "type": "string",
                  "example": "TM-####-####"
                },
                "name": {
                  "description": "Name of the turn over group",
                  "type": "string"
                }
              },
              "type": "object",
              "title": "TurnOverGroup",
              "x-readme-ref-name": "TurnOverGroup"
            },
            "nullable": true,
            "oneOf": [
              {
                "properties": {
                  "code": {
                    "description": "Id of the turnover group",
                    "type": "string",
                    "example": "TM-####-####"
                  },
                  "name": {
                    "description": "Name of the turn over group",
                    "type": "string"
                  }
                },
                "type": "object",
                "title": "TurnOverGroup",
                "x-readme-ref-name": "TurnOverGroup"
              }
            ]
          },
          "layout": {
            "items": {
              "properties": {
                "code": {
                  "description": "Id of layout",
                  "type": "string",
                  "example": "LY-####-####"
                },
                "name": {
                  "description": "Name of the layout",
                  "type": "string",
                  "example": "My layout"
                },
                "ccsUrl": {
                  "description": "CSS url to the layout css",
                  "type": "string"
                },
                "icon": {
                  "description": "Image in base64 encoding",
                  "type": "string"
                },
                "supportingColor": {
                  "description": "Supporting hex color code",
                  "type": "string",
                  "example": "FFFFFF"
                },
                "headerTextColor": {
                  "description": "Header hex color code",
                  "type": "string",
                  "example": "FFFFFF"
                },
                "buttonColor": {
                  "description": "Button hex color code",
                  "type": "string",
                  "example": "FFFFFF"
                },
                "buttonTextColor": {
                  "description": "Button text hex color code",
                  "type": "string",
                  "example": "FFFFFF"
                }
              },
              "type": "object",
              "title": "Layout",
              "x-readme-ref-name": "Layout"
            },
            "nullable": true,
            "oneOf": [
              {
                "properties": {
                  "code": {
                    "description": "Id of layout",
                    "type": "string",
                    "example": "LY-####-####"
                  },
                  "name": {
                    "description": "Name of the layout",
                    "type": "string",
                    "example": "My layout"
                  },
                  "ccsUrl": {
                    "description": "CSS url to the layout css",
                    "type": "string"
                  },
                  "icon": {
                    "description": "Image in base64 encoding",
                    "type": "string"
                  },
                  "supportingColor": {
                    "description": "Supporting hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  },
                  "headerTextColor": {
                    "description": "Header hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  },
                  "buttonColor": {
                    "description": "Button hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  },
                  "buttonTextColor": {
                    "description": "Button text hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  }
                },
                "type": "object",
                "title": "Layout",
                "x-readme-ref-name": "Layout"
              }
            ]
          },
          "tradeName": {
            "items": {
              "properties": {
                "code": {
                  "description": "An identifier for this TradeName",
                  "type": "string"
                },
                "name": {
                  "description": "A registered TradeName",
                  "type": "string"
                }
              },
              "type": "object",
              "title": "TradeName",
              "x-readme-ref-name": "TradeName"
            },
            "nullable": true,
            "oneOf": [
              {
                "properties": {
                  "code": {
                    "description": "An identifier for this TradeName",
                    "type": "string"
                  },
                  "name": {
                    "description": "A registered TradeName",
                    "type": "string"
                  }
                },
                "type": "object",
                "title": "TradeName",
                "x-readme-ref-name": "TradeName"
              }
            ]
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "deletedAt": {
            "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "deletedBy": {
            "description": "The reference to an account or token whom deleted the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          },
          "checkoutOptions": {
            "type": "array",
            "items": {
              "properties": {
                "tag": {
                  "description": "The tag of the checkout option.",
                  "type": "string",
                  "example": "PM_10"
                },
                "name": {
                  "description": "The name of the checkout option.",
                  "type": "string",
                  "example": "iDEAL"
                },
                "translations": {
                  "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                  "type": "object",
                  "uniqueItems": true,
                  "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                  "nullable": true,
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    }
                  }
                },
                "image": {
                  "description": "The image of the checkout option.",
                  "type": "string",
                  "example": "/payment_methods/1.svg"
                },
                "paymentMethods": {
                  "type": "array",
                  "items": {
                    "required": [
                      "id"
                    ],
                    "properties": {
                      "id": {
                        "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                        "type": "integer",
                        "example": "10"
                      },
                      "name": {
                        "description": "The name of the payment method.",
                        "type": "string",
                        "example": "ideal"
                      },
                      "description": {
                        "type": "string"
                      },
                      "translations": {
                        "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
                        "type": "object",
                        "uniqueItems": true,
                        "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
                        "nullable": true,
                        "additionalProperties": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      },
                      "image": {
                        "description": "The image of the payment method.",
                        "type": "string",
                        "example": "https://admin.pay.nl/images/payment_profiles/10.gif"
                      },
                      "options": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "id": {
                              "description": "The ID of the issuer.",
                              "type": "integer",
                              "example": 2
                            },
                            "name": {
                              "description": "The name of the issuer.",
                              "type": "string",
                              "example": "Rabobank"
                            },
                            "image": {
                              "description": "The image of the issuer.",
                              "type": "string",
                              "example": "/issuers/4.svg"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "settings": {
                        "type": "array",
                        "items": {
                          "properties": {
                            "key": {
                              "description": "The name of the setting.",
                              "type": "string"
                            },
                            "value": {
                              "description": "The value of the setting.",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "minAmount": {
                        "description": "The minimum amount in cents in order to use this payment_method.",
                        "type": "integer",
                        "example": 100
                      },
                      "maxAmount": {
                        "description": "The maximum amount in cents which is allowed for this payment_method.",
                        "type": "integer",
                        "example": 100000
                      }
                    },
                    "type": "object",
                    "title": "PaymentMethodConfig",
                    "x-readme-ref-name": "PaymentMethodConfig"
                  }
                }
              },
              "type": "object"
            }
          },
          "checkoutSequence": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "checkoutTexts": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "encryptionKeys": {
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "tguList": {
            "type": "array",
            "items": {
              "properties": {
                "ID": {
                  "type": "integer"
                },
                "share": {
                  "type": "integer"
                },
                "domain": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "type": "object",
        "title": "ServiceConfig",
        "x-readme-ref-name": "ServiceConfig"
      },
      "MerchantConfig": {
        "properties": {
          "code": {
            "description": "The merchant id of your company starting with M.",
            "type": "string",
            "example": "M-####-####"
          },
          "status": {
            "description": "Merchant state",
            "type": "string"
          },
          "name": {
            "description": "The name of your merchant.",
            "type": "string",
            "maxLength": 128,
            "minLength": 2,
            "example": "CompanyName"
          }
        },
        "type": "object",
        "title": "MerchantConfig",
        "x-readme-ref-name": "MerchantConfig"
      },
      "PaymentMethodConfig": {
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
            "type": "integer",
            "example": "10"
          },
          "name": {
            "description": "The name of the payment method.",
            "type": "string",
            "example": "ideal"
          },
          "description": {
            "type": "string"
          },
          "translations": {
            "description": "Object containing all the translations with the property name in which the corresponds with a property on the object itself.",
            "type": "object",
            "uniqueItems": true,
            "example": "\n    \"translations\": {\n      \"name\": {\n        ...\n      },\n      \"description\": {\n        ...\n      }\n    }\n",
            "nullable": true,
            "additionalProperties": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "image": {
            "description": "The image of the payment method.",
            "type": "string",
            "example": "https://admin.pay.nl/images/payment_profiles/10.gif"
          },
          "options": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "description": "The ID of the issuer.",
                  "type": "integer",
                  "example": 2
                },
                "name": {
                  "description": "The name of the issuer.",
                  "type": "string",
                  "example": "Rabobank"
                },
                "image": {
                  "description": "The image of the issuer.",
                  "type": "string",
                  "example": "/issuers/4.svg"
                }
              },
              "type": "object"
            }
          },
          "settings": {
            "type": "array",
            "items": {
              "properties": {
                "key": {
                  "description": "The name of the setting.",
                  "type": "string"
                },
                "value": {
                  "description": "The value of the setting.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "minAmount": {
            "description": "The minimum amount in cents in order to use this payment_method.",
            "type": "integer",
            "example": 100
          },
          "maxAmount": {
            "description": "The maximum amount in cents which is allowed for this payment_method.",
            "type": "integer",
            "example": 100000
          }
        },
        "type": "object",
        "title": "PaymentMethodConfig",
        "x-readme-ref-name": "PaymentMethodConfig"
      },
      "Transaction": {
        "required": [
          "serviceId",
          "amount",
          "returnUrl"
        ],
        "properties": {
          "id": {
            "description": "The Id of the transaction.",
            "type": "string",
            "example": "EX-1234-1234-1234"
          },
          "serviceId": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string",
            "example": "SL-####-####"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "Example description."
          },
          "reference": {
            "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]{1,64}$",
            "example": "12345XXY0123"
          },
          "manualTransferCode": {
            "description": "Payment reference used to identify manual bank transfers",
            "type": "string",
            "example": "0000 0000 0000 0000"
          },
          "orderId": {
            "description": "The orderId of the transaction.",
            "type": "string",
            "example": "0000000000X00000"
          },
          "ipAddress": {
            "description": "An ip address",
            "type": "string",
            "example": "213.126.82.230"
          },
          "exchangeUrl": {
            "description": "The URL where we exchange the status of a transaction.",
            "type": "string",
            "format": "uri",
            "example": "https://demo.pay.nl/exchange.php"
          },
          "returnUrl": {
            "description": "The URL where the payer has to be send to after the payment.",
            "type": "string",
            "format": "uri",
            "example": "https://demo.pay.nl/complete/"
          },
          "paymentUrl": {
            "description": "The payment URL for this transaction",
            "type": "string",
            "format": "uri"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "expire": {
            "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
            "type": "string",
            "format": "date-time",
            "example": "2016-06-04T08:15:00+01:00"
          },
          "created": {
            "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00"
          },
          "modified": {
            "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00"
          },
          "amountConverted": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountPaid": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "amountRefunded": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "paymentMethod": {
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                "type": "integer",
                "example": "10"
              },
              "subId": {
                "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                "type": "string",
                "example": "10"
              },
              "name": {
                "description": "The name of the payment method.",
                "type": "string",
                "example": "ideal"
              }
            },
            "type": "object",
            "title": "PaymentMethod",
            "x-readme-ref-name": "PaymentMethod"
          },
          "status": {
            "properties": {
              "code": {
                "description": "The status code.",
                "type": "integer"
              },
              "action": {
                "description": "The state in which the transaction resides",
                "type": "string",
                "example": "PAID"
              },
              "phase": {
                "description": "The current phase in the transaction state",
                "type": "string",
                "example": "APPROVED"
              }
            },
            "type": "object",
            "title": "Status",
            "x-readme-ref-name": "Status"
          },
          "integration": {
            "properties": {
              "testMode": {
                "description": "Indicates if the service is in testmode or not, possible values: false or true",
                "type": "boolean"
              }
            },
            "type": "object",
            "title": "Integration",
            "x-readme-ref-name": "Integration"
          },
          "customer": {
            "properties": {
              "firstName": {
                "description": "The forename (also known as a given name, Christian name or a first name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "John"
              },
              "lastName": {
                "description": "The surname (also known as a family name or a last name).",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Doe"
              },
              "type": {
                "description": "Either B for business or C for consumer.",
                "type": "string",
                "enum": [
                  "B",
                  "C"
                ]
              },
              "ip": {
                "description": "An ip address",
                "type": "string",
                "example": "213.126.82.230"
              },
              "birthDate": {
                "description": "Date of birth as defined in ISO-8601.",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "gender": {
                "description": "The subject's gender. Choose either M for male or F for female.",
                "type": "string",
                "example": "M"
              },
              "phone": {
                "description": "The subject's phone number. Optionally prepended with a + and country code",
                "type": "string",
                "example": "0031612345678"
              },
              "email": {
                "description": "An email address.",
                "type": "string",
                "format": "email",
                "example": "sandbox@pay.nl"
              },
              "language": {
                "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                "type": "string",
                "enum": [
                  "NL",
                  "EN",
                  "DE",
                  "FR",
                  "IT",
                  "ES"
                ],
                "example": "NL"
              },
              "trust": {
                "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                "type": "integer",
                "maximum": 10,
                "minimum": -10,
                "example": -5
              },
              "reference": {
                "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]{1,64}$",
                "example": "NL87654321"
              },
              "bankAccount": {
                "required": [
                  "iban",
                  "bic",
                  "owner"
                ],
                "properties": {
                  "iban": {
                    "description": "The International Bank Account Number (IBAN).",
                    "type": "string",
                    "example": "NL69INGB0123456789"
                  },
                  "bic": {
                    "description": "Business Identifier Codes (BIC/SWIFT).",
                    "type": "string",
                    "example": "INGBNL2A"
                  },
                  "owner": {
                    "description": "The owner of the bank account.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John Doe"
                  }
                },
                "type": "object",
                "title": "BankAccount",
                "x-readme-ref-name": "BankAccount"
              },
              "company": {
                "properties": {
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "example": "CompanyName"
                  },
                  "coc": {
                    "description": "Your Chamber of commerce registration number. This format differs per country.",
                    "type": "string",
                    "example": "12345678"
                  },
                  "vat": {
                    "description": "Value added tax identification number (VAT identification number).",
                    "type": "string",
                    "example": "NL807960147B01"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Company",
                "x-readme-ref-name": "Company"
              }
            },
            "type": "object",
            "title": "Customer",
            "x-readme-ref-name": "Customer"
          },
          "order": {
            "properties": {
              "countryCode": {
                "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                "type": "string",
                "maxLength": 2,
                "minLength": 2,
                "example": "NL"
              },
              "deliveryDate": {
                "description": "The date of delivery.",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "invoiceDate": {
                "description": "The date of the invoice",
                "type": "string",
                "format": "date",
                "example": "1999-02-15"
              },
              "deliveryAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "invoiceAddress": {
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "streetName": {
                    "description": "The name of the street",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Visitlane"
                  },
                  "streetNumber": {
                    "description": "The street number",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "13"
                  },
                  "streetNumberExtension": {
                    "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1,
                    "example": "b1"
                  },
                  "zipCode": {
                    "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                    "type": "string",
                    "maxLength": 16,
                    "minLength": 1,
                    "example": "5678CD"
                  },
                  "city": {
                    "description": "The name of a city",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 1,
                    "example": "Amsterdam"
                  },
                  "regionCode": {
                    "description": "Region code (iso-3166-2)",
                    "type": "string",
                    "example": "ZH"
                  },
                  "countryCode": {
                    "description": "The country code consisting of 2 uppercase letters",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  }
                },
                "type": "object",
                "title": "Address",
                "x-readme-ref-name": "Address"
              },
              "products": {
                "type": "array",
                "items": {
                  "properties": {
                    "id": {
                      "description": "The product identifier.",
                      "type": "string",
                      "example": "TEST_01"
                    },
                    "description": {
                      "description": "The description of the product.",
                      "type": "string",
                      "example": "Some product description"
                    },
                    "type": {
                      "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                      "type": "string",
                      "enum": [
                        "shipping",
                        "article",
                        "discount",
                        "rounding",
                        "handling",
                        "payment",
                        "credit",
                        "giftcard",
                        "emoney",
                        "crypto"
                      ]
                    },
                    "price": {
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        }
                      },
                      "type": "object"
                    },
                    "quantity": {
                      "description": "The quantity.",
                      "type": "number",
                      "format": "float"
                    },
                    "vatCode": {
                      "description": "The VAT code to use.",
                      "type": "string",
                      "enum": [
                        "N",
                        "H",
                        "L"
                      ]
                    }
                  },
                  "type": "object",
                  "title": "Product",
                  "x-readme-ref-name": "Product"
                }
              }
            },
            "type": "object",
            "title": "Order",
            "x-readme-ref-name": "Order"
          },
          "stats": {
            "properties": {
              "info": {
                "description": "The used info code which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Campagne 99"
              },
              "tool": {
                "description": "The used tool code which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Google"
              },
              "object": {
                "description": "The object which can be tracked in stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1
              },
              "extra1": {
                "description": "The first free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Customer 6985615"
              },
              "extra2": {
                "description": "The second free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Invoice 21.3695"
              },
              "extra3": {
                "description": "The third free value which can be tracked in the stats.",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "example": "Shop Amsterdam"
              },
              "domainId": {
                "description": "The ID of the duplicate content URL",
                "type": "string",
                "example": "WU-####-####"
              }
            },
            "type": "object",
            "title": "Stats",
            "x-readme-ref-name": "Stats"
          },
          "type": {
            "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
            "type": "string",
            "enum": [
              "POS",
              "ECOM",
              "CIT",
              "MIT",
              "MOTO"
            ]
          },
          "transferData": {
            "type": "array",
            "items": {
              "properties": {
                "name": {
                  "description": "The name of the variable to be tracked in the transaction.",
                  "type": "string",
                  "example": "stat1"
                },
                "value": {
                  "description": "The value of the variable to be tracked in the transaction.",
                  "type": "string",
                  "example": "ab8827dfc"
                }
              },
              "type": "object",
              "title": "TransferData",
              "x-readme-ref-name": "TransferData"
            },
            "xml": {
              "name": "transferData",
              "wrapped": true
            }
          }
        },
        "type": "object",
        "xml": {
          "name": "transaction"
        },
        "title": "Transaction",
        "x-readme-ref-name": "Transaction"
      },
      "TransactionLoad": {
        "allOf": [
          {
            "required": [
              "serviceId",
              "amount",
              "returnUrl"
            ],
            "properties": {
              "id": {
                "description": "The Id of the transaction.",
                "type": "string",
                "example": "EX-1234-1234-1234"
              },
              "serviceId": {
                "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                "type": "string",
                "example": "SL-####-####"
              },
              "description": {
                "description": "Is shown on the statement of the payer.",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "Example description."
              },
              "reference": {
                "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]{1,64}$",
                "example": "12345XXY0123"
              },
              "manualTransferCode": {
                "description": "Payment reference used to identify manual bank transfers",
                "type": "string",
                "example": "0000 0000 0000 0000"
              },
              "orderId": {
                "description": "The orderId of the transaction.",
                "type": "string",
                "example": "0000000000X00000"
              },
              "ipAddress": {
                "description": "An ip address",
                "type": "string",
                "example": "213.126.82.230"
              },
              "exchangeUrl": {
                "description": "The URL where we exchange the status of a transaction.",
                "type": "string",
                "format": "uri",
                "example": "https://demo.pay.nl/exchange.php"
              },
              "returnUrl": {
                "description": "The URL where the payer has to be send to after the payment.",
                "type": "string",
                "format": "uri",
                "example": "https://demo.pay.nl/complete/"
              },
              "paymentUrl": {
                "description": "The payment URL for this transaction",
                "type": "string",
                "format": "uri"
              },
              "amount": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "expire": {
                "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00"
              },
              "created": {
                "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00"
              },
              "modified": {
                "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00"
              },
              "amountConverted": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "amountPaid": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "amountRefunded": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "paymentMethod": {
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                    "type": "integer",
                    "example": "10"
                  },
                  "subId": {
                    "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                    "type": "string",
                    "example": "10"
                  },
                  "name": {
                    "description": "The name of the payment method.",
                    "type": "string",
                    "example": "ideal"
                  }
                },
                "type": "object",
                "title": "PaymentMethod",
                "x-readme-ref-name": "PaymentMethod"
              },
              "status": {
                "properties": {
                  "code": {
                    "description": "The status code.",
                    "type": "integer"
                  },
                  "action": {
                    "description": "The state in which the transaction resides",
                    "type": "string",
                    "example": "PAID"
                  },
                  "phase": {
                    "description": "The current phase in the transaction state",
                    "type": "string",
                    "example": "APPROVED"
                  }
                },
                "type": "object",
                "title": "Status",
                "x-readme-ref-name": "Status"
              },
              "integration": {
                "properties": {
                  "testMode": {
                    "description": "Indicates if the service is in testmode or not, possible values: false or true",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "title": "Integration",
                "x-readme-ref-name": "Integration"
              },
              "customer": {
                "properties": {
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "type": {
                    "description": "Either B for business or C for consumer.",
                    "type": "string",
                    "enum": [
                      "B",
                      "C"
                    ]
                  },
                  "ip": {
                    "description": "An ip address",
                    "type": "string",
                    "example": "213.126.82.230"
                  },
                  "birthDate": {
                    "description": "Date of birth as defined in ISO-8601.",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "gender": {
                    "description": "The subject's gender. Choose either M for male or F for female.",
                    "type": "string",
                    "example": "M"
                  },
                  "phone": {
                    "description": "The subject's phone number. Optionally prepended with a + and country code",
                    "type": "string",
                    "example": "0031612345678"
                  },
                  "email": {
                    "description": "An email address.",
                    "type": "string",
                    "format": "email",
                    "example": "sandbox@pay.nl"
                  },
                  "language": {
                    "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                    "type": "string",
                    "enum": [
                      "NL",
                      "EN",
                      "DE",
                      "FR",
                      "IT",
                      "ES"
                    ],
                    "example": "NL"
                  },
                  "trust": {
                    "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                    "type": "integer",
                    "maximum": 10,
                    "minimum": -10,
                    "example": -5
                  },
                  "reference": {
                    "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]{1,64}$",
                    "example": "NL87654321"
                  },
                  "bankAccount": {
                    "required": [
                      "iban",
                      "bic",
                      "owner"
                    ],
                    "properties": {
                      "iban": {
                        "description": "The International Bank Account Number (IBAN).",
                        "type": "string",
                        "example": "NL69INGB0123456789"
                      },
                      "bic": {
                        "description": "Business Identifier Codes (BIC/SWIFT).",
                        "type": "string",
                        "example": "INGBNL2A"
                      },
                      "owner": {
                        "description": "The owner of the bank account.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John Doe"
                      }
                    },
                    "type": "object",
                    "title": "BankAccount",
                    "x-readme-ref-name": "BankAccount"
                  },
                  "company": {
                    "properties": {
                      "name": {
                        "description": "The name of your merchant.",
                        "type": "string",
                        "example": "CompanyName"
                      },
                      "coc": {
                        "description": "Your Chamber of commerce registration number. This format differs per country.",
                        "type": "string",
                        "example": "12345678"
                      },
                      "vat": {
                        "description": "Value added tax identification number (VAT identification number).",
                        "type": "string",
                        "example": "NL807960147B01"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Company",
                    "x-readme-ref-name": "Company"
                  }
                },
                "type": "object",
                "title": "Customer",
                "x-readme-ref-name": "Customer"
              },
              "order": {
                "properties": {
                  "countryCode": {
                    "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  },
                  "deliveryDate": {
                    "description": "The date of delivery.",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "invoiceDate": {
                    "description": "The date of the invoice",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "deliveryAddress": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "streetNumberExtension": {
                        "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "b1"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "regionCode": {
                        "description": "Region code (iso-3166-2)",
                        "type": "string",
                        "example": "ZH"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Address",
                    "x-readme-ref-name": "Address"
                  },
                  "invoiceAddress": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "streetNumberExtension": {
                        "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "b1"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "regionCode": {
                        "description": "Region code (iso-3166-2)",
                        "type": "string",
                        "example": "ZH"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Address",
                    "x-readme-ref-name": "Address"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The product identifier.",
                          "type": "string",
                          "example": "TEST_01"
                        },
                        "description": {
                          "description": "The description of the product.",
                          "type": "string",
                          "example": "Some product description"
                        },
                        "type": {
                          "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                          "type": "string",
                          "enum": [
                            "shipping",
                            "article",
                            "discount",
                            "rounding",
                            "handling",
                            "payment",
                            "credit",
                            "giftcard",
                            "emoney",
                            "crypto"
                          ]
                        },
                        "price": {
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            }
                          },
                          "type": "object"
                        },
                        "quantity": {
                          "description": "The quantity.",
                          "type": "number",
                          "format": "float"
                        },
                        "vatCode": {
                          "description": "The VAT code to use.",
                          "type": "string",
                          "enum": [
                            "N",
                            "H",
                            "L"
                          ]
                        }
                      },
                      "type": "object",
                      "title": "Product",
                      "x-readme-ref-name": "Product"
                    }
                  }
                },
                "type": "object",
                "title": "Order",
                "x-readme-ref-name": "Order"
              },
              "stats": {
                "properties": {
                  "info": {
                    "description": "The used info code which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Campagne 99"
                  },
                  "tool": {
                    "description": "The used tool code which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Google"
                  },
                  "object": {
                    "description": "The object which can be tracked in stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                  },
                  "extra1": {
                    "description": "The first free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Customer 6985615"
                  },
                  "extra2": {
                    "description": "The second free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Invoice 21.3695"
                  },
                  "extra3": {
                    "description": "The third free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Shop Amsterdam"
                  },
                  "domainId": {
                    "description": "The ID of the duplicate content URL",
                    "type": "string",
                    "example": "WU-####-####"
                  }
                },
                "type": "object",
                "title": "Stats",
                "x-readme-ref-name": "Stats"
              },
              "type": {
                "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                "type": "string",
                "enum": [
                  "POS",
                  "ECOM",
                  "CIT",
                  "MIT",
                  "MOTO"
                ]
              },
              "transferData": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "description": "The name of the variable to be tracked in the transaction.",
                      "type": "string",
                      "example": "stat1"
                    },
                    "value": {
                      "description": "The value of the variable to be tracked in the transaction.",
                      "type": "string",
                      "example": "ab8827dfc"
                    }
                  },
                  "type": "object",
                  "title": "TransferData",
                  "x-readme-ref-name": "TransferData"
                },
                "xml": {
                  "name": "transferData",
                  "wrapped": true
                }
              }
            },
            "type": "object",
            "xml": {
              "name": "transaction"
            },
            "title": "Transaction",
            "x-readme-ref-name": "Transaction"
          },
          {
            "properties": {
              "serviceCode": {
                "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                "type": "string"
              },
              "merchant": {
                "required": [
                  "code",
                  "name",
                  "status"
                ],
                "properties": {
                  "code": {
                    "description": "The merchant id of your company starting with M.",
                    "type": "string",
                    "example": "M-1234-4321"
                  },
                  "name": {
                    "description": "The name of your merchant.",
                    "type": "string",
                    "maxLength": 128,
                    "minLength": 2,
                    "example": "CompanyName"
                  },
                  "status": {
                    "description": "Merchant state",
                    "type": "string",
                    "example": "ACTIVE"
                  }
                },
                "type": "object",
                "title": "MerchantMinimal",
                "x-readme-ref-name": "MerchantMinimal"
              },
              "tradeName": {
                "properties": {
                  "code": {
                    "description": "An identifier for this TradeName",
                    "type": "string"
                  },
                  "name": {
                    "description": "A registered TradeName",
                    "type": "string"
                  }
                },
                "type": "object",
                "title": "TradeName",
                "x-readme-ref-name": "TradeName"
              },
              "layout": {
                "properties": {
                  "code": {
                    "description": "Id of layout",
                    "type": "string",
                    "example": "LY-####-####"
                  },
                  "name": {
                    "description": "Name of the layout",
                    "type": "string",
                    "example": "My layout"
                  },
                  "ccsUrl": {
                    "description": "CSS url to the layout css",
                    "type": "string"
                  },
                  "icon": {
                    "description": "Image in base64 encoding",
                    "type": "string"
                  },
                  "supportingColor": {
                    "description": "Supporting hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  },
                  "headerTextColor": {
                    "description": "Header hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  },
                  "buttonColor": {
                    "description": "Button hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  },
                  "buttonTextColor": {
                    "description": "Button text hex color code",
                    "type": "string",
                    "example": "FFFFFF"
                  }
                },
                "type": "object",
                "title": "Layout",
                "x-readme-ref-name": "Layout"
              },
              "expiredAt": {
                "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "nullable": true
              },
              "deletedAt": {
                "description": "The deletion date time presented in the correct ISO-8601 (a.k.a. ATOM) notation. Can be empty (null)",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00",
                "nullable": true
              },
              "deletedBy": {
                "description": "The reference to an account or token whom deleted the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": true
              }
            },
            "type": "object",
            "xml": {
              "name": "transactionLoad"
            }
          }
        ],
        "title": "TransactionLoad",
        "x-readme-ref-name": "TransactionLoad"
      },
      "TransactionMinimal": {
        "properties": {
          "id": {
            "description": "The Id of the transaction.",
            "type": "string",
            "example": "EX-1234-1234-1234"
          },
          "serviceId": {
            "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
            "type": "string",
            "example": "SL-####-####"
          },
          "description": {
            "description": "Is shown on the statement of the payer.",
            "type": "string",
            "maxLength": 32,
            "minLength": 1,
            "example": "Example description."
          },
          "reference": {
            "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
            "type": "string",
            "maxLength": 64,
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9]{1,64}$",
            "example": "12345XXY0123"
          },
          "manualTransferCode": {
            "description": "Payment reference used to identify manual bank transfers",
            "type": "string",
            "example": "0000 0000 0000 0000"
          },
          "orderId": {
            "description": "The orderId of the transaction.",
            "type": "string",
            "example": "0000000000X00000"
          },
          "paymentUrl": {
            "description": "The payment URL for this transaction",
            "type": "string",
            "format": "uri"
          },
          "statusUrl": {
            "description": "Api url to get status details of the transaction.",
            "type": "string"
          },
          "orderStatusUrl": {
            "description": "Api url to get status details of a pin transaction.",
            "type": "string",
            "example": "https://domain.com/api/status"
          },
          "amount": {
            "required": [
              "value"
            ],
            "properties": {
              "value": {
                "description": "The amount in cents.",
                "type": "integer",
                "minimum": 1,
                "example": 10
              },
              "currency": {
                "description": "The currency in ISO-4217 format.",
                "type": "string",
                "example": "EUR"
              }
            },
            "type": "object",
            "title": "Amount",
            "x-readme-ref-name": "Amount"
          },
          "uuid": {
            "description": "The uuid of the QR code.",
            "type": "string"
          },
          "hash": {
            "description": "Api url to get status details of the transaction.",
            "type": "string"
          },
          "cancelUrl": {
            "description": "Api url to get status details of the transaction.",
            "type": "string"
          },
          "expire": {
            "description": "Expire date in timestamp notation.",
            "type": "integer",
            "example": "2016-06-04T08:15:00+01:00",
            "deprecated": true
          },
          "expiresAt": {
            "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00"
          },
          "created": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false,
            "deprecated": true
          },
          "createdAt": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false
          },
          "createdBy": {
            "description": "The reference to an account or token whom created the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": false
          },
          "modified": {
            "description": "The creation date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": false,
            "deprecated": true
          },
          "modifiedAt": {
            "description": "The modification date time presented in the correct ISO-8601 (a.k.a. ATOM) notation",
            "type": "string",
            "format": "date-time",
            "readOnly": true,
            "example": "2016-06-04T08:15:00+01:00",
            "nullable": true
          },
          "modifiedBy": {
            "description": "The reference to an account or token whom modified the entity",
            "type": "string",
            "pattern": "^A(T)?(-\\d{4}){2}$",
            "readOnly": true,
            "example": "A-1234-4321",
            "nullable": true
          }
        },
        "type": "object",
        "title": "TransactionMinimal",
        "x-readme-ref-name": "TransactionMinimal"
      },
      "TransactionRefund": {
        "allOf": [
          {
            "required": [
              "serviceId",
              "amount",
              "returnUrl"
            ],
            "properties": {
              "id": {
                "description": "The Id of the transaction.",
                "type": "string",
                "example": "EX-1234-1234-1234"
              },
              "serviceId": {
                "description": "The ID of your service. You can find the service ID here: https://my.pay.nl/programs/programs",
                "type": "string",
                "example": "SL-####-####"
              },
              "description": {
                "description": "Is shown on the statement of the payer.",
                "type": "string",
                "maxLength": 32,
                "minLength": 1,
                "example": "Example description."
              },
              "reference": {
                "description": "The merchant identification of this transaction. This field only allows alphanumeric characters",
                "type": "string",
                "maxLength": 64,
                "minLength": 1,
                "pattern": "^[a-zA-Z0-9]{1,64}$",
                "example": "12345XXY0123"
              },
              "manualTransferCode": {
                "description": "Payment reference used to identify manual bank transfers",
                "type": "string",
                "example": "0000 0000 0000 0000"
              },
              "orderId": {
                "description": "The orderId of the transaction.",
                "type": "string",
                "example": "0000000000X00000"
              },
              "ipAddress": {
                "description": "An ip address",
                "type": "string",
                "example": "213.126.82.230"
              },
              "exchangeUrl": {
                "description": "The URL where we exchange the status of a transaction.",
                "type": "string",
                "format": "uri",
                "example": "https://demo.pay.nl/exchange.php"
              },
              "returnUrl": {
                "description": "The URL where the payer has to be send to after the payment.",
                "type": "string",
                "format": "uri",
                "example": "https://demo.pay.nl/complete/"
              },
              "paymentUrl": {
                "description": "The payment URL for this transaction",
                "type": "string",
                "format": "uri"
              },
              "amount": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "expire": {
                "description": "Expire date in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "example": "2016-06-04T08:15:00+01:00"
              },
              "created": {
                "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00"
              },
              "modified": {
                "description": "The date at which this entity was modified presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                "type": "string",
                "format": "date-time",
                "readOnly": true,
                "example": "2016-06-04T08:15:00+01:00"
              },
              "amountConverted": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "amountPaid": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "amountRefunded": {
                "required": [
                  "value"
                ],
                "properties": {
                  "value": {
                    "description": "The amount in cents.",
                    "type": "integer",
                    "minimum": 1,
                    "example": 10
                  },
                  "currency": {
                    "description": "The currency in ISO-4217 format.",
                    "type": "string",
                    "example": "EUR"
                  }
                },
                "type": "object",
                "title": "Amount",
                "x-readme-ref-name": "Amount"
              },
              "paymentMethod": {
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "description": "The ID of the payment option e.g. iDEAL is 10. See: services/get/sl-xxxx-xxx.",
                    "type": "integer",
                    "example": "10"
                  },
                  "subId": {
                    "description": "The chosen sub ID of the payment option e.g. The bank id for iDEAL. See: services/get/sl-xxxx-xxx.",
                    "type": "string",
                    "example": "10"
                  },
                  "name": {
                    "description": "The name of the payment method.",
                    "type": "string",
                    "example": "ideal"
                  }
                },
                "type": "object",
                "title": "PaymentMethod",
                "x-readme-ref-name": "PaymentMethod"
              },
              "status": {
                "properties": {
                  "code": {
                    "description": "The status code.",
                    "type": "integer"
                  },
                  "action": {
                    "description": "The state in which the transaction resides",
                    "type": "string",
                    "example": "PAID"
                  },
                  "phase": {
                    "description": "The current phase in the transaction state",
                    "type": "string",
                    "example": "APPROVED"
                  }
                },
                "type": "object",
                "title": "Status",
                "x-readme-ref-name": "Status"
              },
              "integration": {
                "properties": {
                  "testMode": {
                    "description": "Indicates if the service is in testmode or not, possible values: false or true",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "title": "Integration",
                "x-readme-ref-name": "Integration"
              },
              "customer": {
                "properties": {
                  "firstName": {
                    "description": "The forename (also known as a given name, Christian name or a first name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "John"
                  },
                  "lastName": {
                    "description": "The surname (also known as a family name or a last name).",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Doe"
                  },
                  "type": {
                    "description": "Either B for business or C for consumer.",
                    "type": "string",
                    "enum": [
                      "B",
                      "C"
                    ]
                  },
                  "ip": {
                    "description": "An ip address",
                    "type": "string",
                    "example": "213.126.82.230"
                  },
                  "birthDate": {
                    "description": "Date of birth as defined in ISO-8601.",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "gender": {
                    "description": "The subject's gender. Choose either M for male or F for female.",
                    "type": "string",
                    "example": "M"
                  },
                  "phone": {
                    "description": "The subject's phone number. Optionally prepended with a + and country code",
                    "type": "string",
                    "example": "0031612345678"
                  },
                  "email": {
                    "description": "An email address.",
                    "type": "string",
                    "format": "email",
                    "example": "sandbox@pay.nl"
                  },
                  "language": {
                    "description": "The language code consisting of 2 uppercase letters. Can be one of the following: EN, NL, DE, FR, ES, IT. You can find all available languages here: https://paynl.readme.io/reference/languages",
                    "type": "string",
                    "enum": [
                      "NL",
                      "EN",
                      "DE",
                      "FR",
                      "IT",
                      "ES"
                    ],
                    "example": "NL"
                  },
                  "trust": {
                    "description": "Indicates whether you trust the payer, scale -10 -> 10 (10 Reliable, -10 Unreliable).",
                    "type": "integer",
                    "maximum": 10,
                    "minimum": -10,
                    "example": -5
                  },
                  "reference": {
                    "description": "Unique reference of the payer. This field only allows alphanumeric characters.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "pattern": "^[a-zA-Z0-9]{1,64}$",
                    "example": "NL87654321"
                  },
                  "bankAccount": {
                    "required": [
                      "iban",
                      "bic",
                      "owner"
                    ],
                    "properties": {
                      "iban": {
                        "description": "The International Bank Account Number (IBAN).",
                        "type": "string",
                        "example": "NL69INGB0123456789"
                      },
                      "bic": {
                        "description": "Business Identifier Codes (BIC/SWIFT).",
                        "type": "string",
                        "example": "INGBNL2A"
                      },
                      "owner": {
                        "description": "The owner of the bank account.",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John Doe"
                      }
                    },
                    "type": "object",
                    "title": "BankAccount",
                    "x-readme-ref-name": "BankAccount"
                  },
                  "company": {
                    "properties": {
                      "name": {
                        "description": "The name of your merchant.",
                        "type": "string",
                        "example": "CompanyName"
                      },
                      "coc": {
                        "description": "Your Chamber of commerce registration number. This format differs per country.",
                        "type": "string",
                        "example": "12345678"
                      },
                      "vat": {
                        "description": "Value added tax identification number (VAT identification number).",
                        "type": "string",
                        "example": "NL807960147B01"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Company",
                    "x-readme-ref-name": "Company"
                  }
                },
                "type": "object",
                "title": "Customer",
                "x-readme-ref-name": "Customer"
              },
              "order": {
                "properties": {
                  "countryCode": {
                    "description": "When used this countryCode takes preference over the one set in the deliveryAddress and is then used as the countryCode for this transaction",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2,
                    "example": "NL"
                  },
                  "deliveryDate": {
                    "description": "The date of delivery.",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "invoiceDate": {
                    "description": "The date of the invoice",
                    "type": "string",
                    "format": "date",
                    "example": "1999-02-15"
                  },
                  "deliveryAddress": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "streetNumberExtension": {
                        "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "b1"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "regionCode": {
                        "description": "Region code (iso-3166-2)",
                        "type": "string",
                        "example": "ZH"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Address",
                    "x-readme-ref-name": "Address"
                  },
                  "invoiceAddress": {
                    "properties": {
                      "code": {
                        "type": "string"
                      },
                      "firstName": {
                        "description": "The forename (also known as a given name, Christian name or a first name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "John"
                      },
                      "lastName": {
                        "description": "The surname (also known as a family name or a last name).",
                        "type": "string",
                        "maxLength": 64,
                        "minLength": 1,
                        "example": "Doe"
                      },
                      "streetName": {
                        "description": "The name of the street",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Visitlane"
                      },
                      "streetNumber": {
                        "description": "The street number",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "13"
                      },
                      "streetNumberExtension": {
                        "description": "A house number extension is required to deal with appartments or other addresses sharing the same front door",
                        "type": "string",
                        "maxLength": 32,
                        "minLength": 1,
                        "example": "b1"
                      },
                      "zipCode": {
                        "description": "A zip/postal code. see https://en.wikipedia.org/wiki/List_of_postal_codes for a list of formats per country.",
                        "type": "string",
                        "maxLength": 16,
                        "minLength": 1,
                        "example": "5678CD"
                      },
                      "city": {
                        "description": "The name of a city",
                        "type": "string",
                        "maxLength": 128,
                        "minLength": 1,
                        "example": "Amsterdam"
                      },
                      "regionCode": {
                        "description": "Region code (iso-3166-2)",
                        "type": "string",
                        "example": "ZH"
                      },
                      "countryCode": {
                        "description": "The country code consisting of 2 uppercase letters",
                        "type": "string",
                        "maxLength": 2,
                        "minLength": 2,
                        "example": "NL"
                      }
                    },
                    "type": "object",
                    "title": "Address",
                    "x-readme-ref-name": "Address"
                  },
                  "products": {
                    "type": "array",
                    "items": {
                      "properties": {
                        "id": {
                          "description": "The product identifier.",
                          "type": "string",
                          "example": "TEST_01"
                        },
                        "description": {
                          "description": "The description of the product.",
                          "type": "string",
                          "example": "Some product description"
                        },
                        "type": {
                          "description": "The type of product. More information can be found here: https://paynl.readme.io/reference/producttypes",
                          "type": "string",
                          "enum": [
                            "shipping",
                            "article",
                            "discount",
                            "rounding",
                            "handling",
                            "payment",
                            "credit",
                            "giftcard",
                            "emoney",
                            "crypto"
                          ]
                        },
                        "price": {
                          "properties": {
                            "value": {
                              "description": "The amount in cents.",
                              "type": "integer",
                              "minimum": 1,
                              "example": 10
                            }
                          },
                          "type": "object"
                        },
                        "quantity": {
                          "description": "The quantity.",
                          "type": "number",
                          "format": "float"
                        },
                        "vatCode": {
                          "description": "The VAT code to use.",
                          "type": "string",
                          "enum": [
                            "N",
                            "H",
                            "L"
                          ]
                        }
                      },
                      "type": "object",
                      "title": "Product",
                      "x-readme-ref-name": "Product"
                    }
                  }
                },
                "type": "object",
                "title": "Order",
                "x-readme-ref-name": "Order"
              },
              "stats": {
                "properties": {
                  "info": {
                    "description": "The used info code which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Campagne 99"
                  },
                  "tool": {
                    "description": "The used tool code which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Google"
                  },
                  "object": {
                    "description": "The object which can be tracked in stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1
                  },
                  "extra1": {
                    "description": "The first free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Customer 6985615"
                  },
                  "extra2": {
                    "description": "The second free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Invoice 21.3695"
                  },
                  "extra3": {
                    "description": "The third free value which can be tracked in the stats.",
                    "type": "string",
                    "maxLength": 64,
                    "minLength": 1,
                    "example": "Shop Amsterdam"
                  },
                  "domainId": {
                    "description": "The ID of the duplicate content URL",
                    "type": "string",
                    "example": "WU-####-####"
                  }
                },
                "type": "object",
                "title": "Stats",
                "x-readme-ref-name": "Stats"
              },
              "type": {
                "description": "Defines the type of the transaction. Possible values are: CIT = Customer initiated simple e-com transaction, MIT = Merchant initiated transaction, MOTO = Customer initiated payment where card number entered manually, POS = Point of sale, ECOM",
                "type": "string",
                "enum": [
                  "POS",
                  "ECOM",
                  "CIT",
                  "MIT",
                  "MOTO"
                ]
              },
              "transferData": {
                "type": "array",
                "items": {
                  "properties": {
                    "name": {
                      "description": "The name of the variable to be tracked in the transaction.",
                      "type": "string",
                      "example": "stat1"
                    },
                    "value": {
                      "description": "The value of the variable to be tracked in the transaction.",
                      "type": "string",
                      "example": "ab8827dfc"
                    }
                  },
                  "type": "object",
                  "title": "TransferData",
                  "x-readme-ref-name": "TransferData"
                },
                "xml": {
                  "name": "transferData",
                  "wrapped": true
                }
              }
            },
            "type": "object",
            "xml": {
              "name": "transaction"
            },
            "title": "Transaction",
            "x-readme-ref-name": "Transaction"
          },
          {
            "properties": {
              "transactionId": {
                "type": "string"
              },
              "processDate": {
                "description": "The ISO date at which this entity will be processed",
                "type": "string",
                "format": "date-time",
                "example": "1999-02-15",
                "nullable": true
              },
              "refundedTransactions": {
                "type": "array",
                "items": {
                  "properties": {
                    "amountRefunded": {
                      "required": [
                        "value"
                      ],
                      "properties": {
                        "value": {
                          "description": "The amount in cents.",
                          "type": "integer",
                          "minimum": 1,
                          "example": 10
                        },
                        "currency": {
                          "description": "The currency in ISO-4217 format.",
                          "type": "string",
                          "example": "EUR"
                        }
                      },
                      "type": "object",
                      "title": "Amount",
                      "x-readme-ref-name": "Amount"
                    },
                    "refund": {
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "createdAt": {
                      "description": "The date at which this entity was created presented in the correct ISO-8601 (a.k.a. ATOM) notation.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2016-06-04T08:15:00+01:00"
                    },
                    "createdBy": {
                      "description": "The reference to an account or token whom created the entity",
                      "type": "string",
                      "pattern": "^A(T)?(-\\d{4}){2}$",
                      "readOnly": true,
                      "example": "A-1234-4321",
                      "nullable": false
                    }
                  },
                  "type": "object"
                }
              },
              "createdBy": {
                "description": "The reference to an account or token whom created the entity",
                "type": "string",
                "pattern": "^A(T)?(-\\d{4}){2}$",
                "readOnly": true,
                "example": "A-1234-4321",
                "nullable": false
              }
            },
            "type": "object"
          }
        ],
        "title": "TransactionRefund",
        "x-readme-ref-name": "TransactionRefund"
      },
      "Violation": {
        "properties": {
          "propertyPath": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        },
        "type": "object",
        "title": "Violation",
        "x-readme-ref-name": "Violation"
      }
    },
    "responses": {
      "NoContent": {
        "description": "No content."
      },
      "BadRequest": {
        "description": "Bad request, see response body for more information",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "type": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                },
                "violations": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "propertyPath": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "title": "Violation",
                    "x-readme-ref-name": "Violation"
                  }
                }
              },
              "type": "object",
              "title": "Error",
              "x-readme-ref-name": "Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized. Supplied credentials are invalid"
      },
      "Forbidden": {
        "description": "Forbidden. Supplied credentials have no rights"
      },
      "NotFound": {
        "description": "Not found"
      },
      "MethodNotAllowed": {
        "description": "Used HTTP method is not allowed"
      },
      "NotAcceptable": {
        "description": "Not acceptable. The supplied content type in the accept parameter in the header is not supported"
      },
      "Conflict": {
        "description": "Indicates a request conflict with the current state of the target resource"
      },
      "UnsupportedMedia": {
        "description": "Unsupported media. The supplied content type in the content-type parameter in the header is not supported"
      },
      "Unprocessable": {
        "description": "Unprocessable entity, see response body for more information",
        "content": {
          "application/json": {
            "schema": {
              "properties": {
                "type": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                },
                "detail": {
                  "type": "string"
                },
                "violations": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "propertyPath": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      },
                      "code": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "title": "Violation",
                    "x-readme-ref-name": "Violation"
                  }
                }
              },
              "type": "object",
              "title": "Error",
              "x-readme-ref-name": "Error"
            },
            "examples": {
              "error": {
                "summary": "Unprocessable",
                "value": {
                  "type": "https://developer.pay.nl/docs/error-codes",
                  "title": "An error occurred",
                  "detail": "Unable to complete request",
                  "violations": [
                    {
                      "propertyPath": null,
                      "message": "Unable to complete request",
                      "code": "PAY-3000"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "RateLimiting": {
        "description": "Rate limit reached."
      },
      "InternalError": {
        "description": "An internal error occurred."
      }
    },
    "examples": {
      "AccountsMe200Successful": {
        "summary": "Get currently authenticated account",
        "value": {
          "code": "A-1234-4321",
          "email": "john@doe.nl",
          "firstName": "John",
          "lastName": "Doe",
          "language": "NL",
          "nationality": "NL",
          "dateOfBirth": "1999-12-12",
          "phone": "0031612345678",
          "visitAddress": {
            "code": "AS-1234-4321",
            "streetName": "Visitlane",
            "streetNumber": "13",
            "zipCode": "5678CD",
            "city": "Amsterdam",
            "countryCode": "NL"
          },
          "merchants": [
            {
              "code": "M-1234-4321",
              "name": "CompanyName",
              "licenseCode": "AL-1234-4321",
              "package": "Business",
              "rights": "ALL",
              "accountManager": "Carrie Satterfield"
            }
          ],
          "documents": [
            {
              "code": "D-1234-1234",
              "type": "identification",
              "status": "UPLOADED",
              "description": "Copy ID or passport",
              "translations": {
                "description": {
                  "en_GB": "Copy ID or passport",
                  "nl_NL": "Kopie ID of passpoort"
                }
              },
              "createdAt": "2007-10-02T12:11:20+02:00",
              "createdBy": "A-1234-1234",
              "accceptedAt": "",
              "modifiedAt": "2021-08-10T17:24:05+02:00",
              "modifiedBy": "A-1234-1234",
              "deletedAt": null,
              "deletedBy": null
            }
          ],
          "_links": [
            {
              "href": "/accounts/me",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AccountsMeUpdatePayload": {
        "summary": "Update currently authenticated account",
        "value": {
          "firstName": "John",
          "lastName": "Doe",
          "language": "NL",
          "nationality": "NL",
          "dateOfBirth": "1999-12-12",
          "phone": "0031612345678",
          "visitAddress": {
            "streetName": "Visitlane",
            "streetNumber": "13",
            "zipCode": "5678CD",
            "city": "Amsterdam",
            "countryCode": "NL"
          }
        }
      },
      "AuthorisationgroupsResponse200Successful": {
        "summary": "List all authorisation groups",
        "value": {
          "total": 1,
          "authorisationGroups": [
            {
              "code": "AG-1234-4321",
              "name": "Webshop developer",
              "description": "Webshop developer",
              "purpose": {
                "account": true,
                "token": false,
                "relation": false,
                "merchant": true
              },
              "public": true,
              "translations": {
                "description": {
                  "en_GB": "Webshop developer",
                  "it_IT": "Sviluppatore webshop",
                  "nl_NL": "Toevoegen en wijzigen van verkooplocaties, bekijken van transacties (zonder refunds) en bekijken van de payment state log en de ondersteuningsmodule. Inzicht in Tokens"
                },
                "name": {
                  "en_GB": "Webshop developer",
                  "it_IT": "Sviluppatore webshop",
                  "nl_NL": "Webbouwer"
                }
              },
              "createdAt": "2014-03-21T10:56:04+01:00",
              "createdBy": "A-1234-4321",
              "modifiedAt": "2021-04-09T09:13:38+02:00",
              "modifiedBy": "A-1234-4321",
              "deletedAt": null,
              "deletedBy": null
            }
          ],
          "_links": [
            {
              "href": "/authorisationgroups",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "BalanceResponse200Successful": {
        "summary": "Get merchant balance",
        "value": {
          "balance": {
            "amount": 9134455,
            "currency": "EUR"
          },
          "invoices": {
            "amount": 9134455,
            "currency": "EUR"
          },
          "costs": {
            "amount": 9134455,
            "currency": "EUR"
          },
          "availableBalance": {
            "amount": 5681,
            "currency": "EUR",
            "turnoverGroups": [
              {
                "code": "CT-1234-4321",
                "name": "Standaard",
                "amount": 5681,
                "currency": "EUR"
              }
            ]
          },
          "nextClearing": {
            "state": "active",
            "date": "2023-12-12",
            "amount": 1234,
            "currency": "EUR"
          },
          "lastClearing": {
            "date": "2023-12-12",
            "amount": 1234,
            "currency": "EUR"
          },
          "_links": [
            {
              "url": "/balance",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "BillingLineTypesResponse200Successful": {
        "summary": "Get billing line types",
        "value": {
          "total": 1,
          "billingDataGroups": [
            {
              "id": 1,
              "name": "Subscription",
              "translations": {
                "name": {
                  "nl_NL": "Abonnementsfee",
                  "en_GB": "Subscription"
                }
              },
              "billingLineTypes": [
                {
                  "id": "1519",
                  "name": "Pioneer",
                  "translations": {
                    "name": {
                      "nl_NL": "Pioneer",
                      "en_GB": "Pioneer"
                    }
                  },
                  "createdAt": "2022-03-18T14:35:21+02:00",
                  "modifiedAt": "2022-03-18T15:24:52+02:00",
                  "deletedAt": null
                }
              ],
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "url": "/billinglinetypes",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "BillingUnitTypesResponse200Successful": {
        "summary": "Get billing unit types",
        "value": {
          "total": 1,
          "billingUnitTypes": [
            {
              "id": 1,
              "name": "percentage",
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "url": "/billingUnitTypes",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "CategoriesResponse200Successful": {
        "summary": "Get categories",
        "value": {
          "total": 1,
          "categories": [
            {
              "code": "CY-####-####",
              "name": "Overige consumenten aankopen",
              "description": "Extra's",
              "sequence": 10,
              "available": true,
              "initialMCC": 1234,
              "initialRiskCategory": "LOW",
              "translations": {
                "name": {
                  "en_GB": "Other consumer sales",
                  "it_IT": "Altre vendite",
                  "nl_NL": "Overige consumenten aankopen"
                },
                "description": {
                  "en_GB": "Surplus",
                  "it_IT": "Extra",
                  "nl_NL": "Extra's"
                }
              },
              "paymentMethods": [
                {
                  "id": 1630,
                  "name": "Pin (Maestro)"
                }
              ],
              "createdAt": "2007-10-02T12:11:20+02:00",
              "modifiedAt": "2021-08-10T17:24:05+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/categories",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ClearingLineTypesResponse200Successful": {
        "summary": "Get clearing line types",
        "value": {
          "total": 1,
          "clearingDataGroups": [
            {
              "id": 1,
              "name": "Transaction processing",
              "translations": {
                "name": {
                  "nl_NL": "Transactionverwerking",
                  "en_GB": "Transaction processing"
                }
              },
              "clearingLineTypes": [
                {
                  "id": "10",
                  "name": "iDeal",
                  "translations": {
                    "name": {
                      "nl_NL": "iDeal",
                      "en_GB": "iDeal"
                    }
                  },
                  "createdAt": "2022-03-18T14:35:21+02:00",
                  "modifiedAt": "2022-03-18T15:24:52+02:00",
                  "deletedAt": null
                }
              ],
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "url": "/clearinglinetypes",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ClearingLinesResponse200Successful": {
        "summary": "Get clearing lines",
        "value": {
          "total": 1,
          "clearingLines": [
            {
              "code": "FT-1234-4321-1234",
              "merchant": {
                "code": "M-1234-4321",
                "contractPackage": "Corporate"
              },
              "turnoverGroup": {
                "code": "CT-1234-4321",
                "name": "Ecommerce"
              },
              "clearingLineType": {
                "id": 706,
                "name": "Visa Mastercard"
              },
              "unitType": {
                "id": 12,
                "name": "percentage"
              },
              "amount": {
                "value": 20,
                "currency": "EUR"
              },
              "valueDate": "2021-10-04",
              "clearingDate": "2021-10-09",
              "settlementDate": null,
              "processedDate": "2021-10-09",
              "state": "CLEARED",
              "clearingID": "CLEARING-20222997580"
            }
          ],
          "_links": {
            "self": {
              "href": "/clearinglines?limit=1&page=1",
              "rel": "self",
              "type": "GET"
            },
            "first": {
              "href": "/clearinglines?limit=1&page=1"
            },
            "previous": {
              "href": "/clearinglines?limit=1&page=1"
            },
            "next": {
              "href": "/clearinglines?limit=1&page=2"
            },
            "last": {
              "href": "/clearinglines?limit=1&page=4"
            }
          }
        }
      },
      "CompanyTypesResponse200Successful": {
        "summary": "Get companytypes",
        "value": {
          "total": 1,
          "companyTypes": [
            {
              "id": 1,
              "name": "Private Limited Liability Company",
              "countryCode": "NL",
              "translations": {
                "name": {
                  "nl_NL": "BV (Besloten Vennootschap)"
                }
              },
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/companytypes",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "CountriesResponse200Successful": {
        "summary": "Get countries",
        "value": {
          "total": 1,
          "countries": [
            {
              "code": "NL",
              "isoNumber": 528,
              "name": "The Netherlands",
              "nationality": "Dutch",
              "translations": {
                "name": {
                  "en_GB": "The Netherlands",
                  "nl_NL": "Nederland"
                },
                "nationality": {
                  "en_GB": "Dutch",
                  "nl_NL": "Nederlandse"
                }
              },
              "locales": [
                "nl_BE",
                "nl_NL"
              ],
              "phonePrefix": 31,
              "signupAllowed": true,
              "inEU": true,
              "highRisk": false,
              "ibanLength": 18,
              "image": "/countries/nl.svg",
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T14:35:21+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "url": "/countries",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "CurrenciesResponse200Successful": {
        "summary": "Get currencies",
        "value": {
          "total": 1,
          "currencies": [
            {
              "id": 1,
              "tag": "EUR",
              "name": "Euro",
              "isoCurrencyNumber": 935,
              "symbol": "€",
              "exchangeRate": 1.1,
              "createdAt": "2007-10-02T12:11:20+02:00",
              "modifiedAt": "2021-08-10T17:24:05+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/currencies",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "DocumentResponse200Successful": {
        "summary": "Get document",
        "value": {
          "code": "D-1234-1234",
          "name": "Merchant_Agreement",
          "description": "",
          "file": [
            {
              "name": "merchant_agreement_M-xxxx-xxxx.pdf",
              "mime-type": "application/pdf",
              "size": 12345789,
              "contents": "..."
            }
          ],
          "createdAt": "2023-06-09T13:58:19+02:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/documents/D-1234-4321",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "DocumentAddResponse200Successful": {
        "summary": "Add document",
        "value": {
          "document": {
            "code": "D-1234-1234",
            "type": "account",
            "status": "UPLOADED"
          },
          "_links": [
            {
              "href": "/documents",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "DocumentAdd400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "errors": {
            "code": {
              "message": "Is empty",
              "code": "PAY-2828"
            },
            "fileName": {
              "message": "Is empty",
              "code": "PAY-2828"
            },
            "documentFile": {
              "message": "Is empty",
              "code": "PAY-2828"
            }
          },
          "_links": [
            {
              "href": "/documents",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "DocumentAdd422UnprocessableEntity": {
        "summary": "Something went wrong.",
        "value": {
          "errors": {
            "general": {
              "code": "PAY-3000",
              "message": "Something went wrong."
            }
          },
          "_links": [
            {
              "href": "/documents",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "DocumentVeriffResponse200Successful": {
        "summary": "Add veriff session id to a document",
        "value": {
          "_links": [
            {
              "href": "/documents/D-1234-1234/veriff",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "DocumentVeriffAdd400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "errors": {
            "sessionId": {
              "message": "Is empty",
              "code": "PAY-2828"
            }
          },
          "_links": [
            {
              "href": "/documents/D-1234-1234/veriff",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "DocumentVeriffAdd422UnprocessableEntity": {
        "summary": "Something went wrong.",
        "value": []
      },
      "DocumentAddSinglePayload": {
        "summary": "Singe file upload",
        "value": {
          "code": "D-1234-1234",
          "fileName": "document.pdf",
          "documentFile": ""
        }
      },
      "DocumentAddMultiplePayload": {
        "summary": "Multiple file upload",
        "value": {
          "code": "D-1234-1234",
          "fileName": "document.pdf",
          "files": [
            "",
            ""
          ]
        }
      },
      "IntegrationsResponse200Successful": {
        "summary": "Get integrations",
        "value": {
          "total": 1,
          "integrations": [
            {
              "code": "PL-XXXX-XXXX",
              "name": "Plugin",
              "description": "Plugin",
              "versions": [
                {
                  "code": "PV-XXXX-XXXX",
                  "version": "all",
                  "developer": "Plugin",
                  "status": "ACTIVE",
                  "urlDownload": null,
                  "urlManual": null,
                  "urlShopDemo": null,
                  "urlGithub": null,
                  "urlImage": null,
                  "createdAt": "2021-11-29T13:22:28+01:00",
                  "modifiedAt": null,
                  "deletedAt": null
                }
              ],
              "status": "PHASED_OUT",
              "image": null,
              "href": null,
              "urlInfo": "https://www.my-plugin.nl",
              "createdAt": "2021-11-29T13:21:30+01:00",
              "modifiedAt": "2021-11-29T13:22:49+01:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/integrations",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "InvoiceLinesResponse200Successful": {
        "summary": "Get invoice lines",
        "value": {
          "total": 1,
          "count": 1,
          "invoiceLines": [
            {
              "code": "2021-10-04_CT-1234-4321-706",
              "merchant": {
                "code": "M-1234-4321",
                "contractPackage": "Corporate"
              },
              "turnoverGroup": {
                "code": "CT-1234-4321",
                "name": "Ecommerce"
              },
              "billingLineType": {
                "id": 706,
                "name": "Visa Mastercard"
              },
              "volume": {
                "amount": 20,
                "currency": "EUR"
              },
              "totalCosts": [
                {
                  "type": "SELL",
                  "totalCosts": 0.39,
                  "currency": "EUR"
                },
                {
                  "type": "BUY",
                  "totalCosts": 0,
                  "currency": "EUR"
                }
              ],
              "transactions": 1,
              "payers": 1,
              "vatPercentage": 21,
              "date": "2021-10-04",
              "paymentDate": null,
              "state": "PAYABLE",
              "invoiceID": "INVOICE-20222997580",
              "lines": [
                {
                  "code": "FT-1234-1234-1234",
                  "type": "SELL",
                  "unitType": {
                    "id": 12,
                    "name": "percentage"
                  },
                  "amount": 20,
                  "costs": {
                    "revenue": 0.0195,
                    "currency": "EUR"
                  },
                  "processedDate": "2021-10-09"
                }
              ]
            }
          ],
          "_links": {
            "self": {
              "href": "/invoicelines?limit=1&page=1",
              "rel": "self",
              "type": "GET"
            },
            "first": {
              "href": "/invoicelines?limit=1&page=1"
            },
            "previous": {
              "href": "/invoicelines?limit=1&page=1"
            },
            "next": {
              "href": "/invoicelines?limit=1&page=2"
            },
            "last": {
              "href": "/invoicelines?limit=1&page=4"
            }
          }
        }
      },
      "IpaddressesResponse200Successful": {
        "summary": "Get all IP addresses that are in use by Pay.",
        "value": {
          "total": 7,
          "ipaddresses": [
            "192.168.200.200",
            "192.168.20.101",
            "10.50.0.20",
            "127.0.0.1",
            "185.21.191.185",
            "213.126.82.230",
            "213.126.82.229"
          ],
          "_links": [
            {
              "href": "/ipaddresses",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "IsPay200Successful": {
        "summary": "Valid IP",
        "value": {
          "_links": [
            {
              "href": "/ispay/ip?value=192.168.200.200",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "IsPay400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "errors": {
            "value": {
              "name": {
                "message": "Invalid IP address",
                "code": "PAY-2815"
              }
            }
          },
          "_links": [
            {
              "href": "/ispay/ip?value=192.168.200.999",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "IssuersResponse200Successful": {
        "summary": "Get issuers",
        "value": {
          "total": 1,
          "issuers": [
            {
              "id": 1,
              "code": "PB-9060-1000",
              "name": "ABN Amro",
              "bic": "ABNANL2A",
              "issuerId": "0031",
              "available": true,
              "status": "active",
              "image": "/issuers/1.svg",
              "paymentMethod": {
                "id": 10,
                "name": "iDEAL"
              },
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/issuers",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "LanguagesResponse200Successful": {
        "summary": "Get languages",
        "value": {
          "total": 1,
          "languages": [
            {
              "code": "nl_BE",
              "name": "Dutch (Belgium)",
              "adminLanguageAvailable": true,
              "hostedPaymentPageLanguageAvailable": false,
              "payerCommunicationLanguageAvailable": false,
              "contractLanguageAvailable": false,
              "image": "/countries/nl.svg",
              "createdAt": "2022-06-02T15:53:17+02:00",
              "modifiedAt": "2022-06-02T17:00:46+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/languages",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "MccResponse200Successful": {
        "summary": "Get mccs",
        "value": {
          "total": 1,
          "mccs": [
            {
              "code": 742,
              "description": "Veterinary Services",
              "highRisk": true,
              "createdAt": null,
              "modifiedAt": null,
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/mcc",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "BankAccountsTransactionMinimal": {
        "summary": "BankAccounts response",
        "value": {
          "id": "EX-1234-1234-1234",
          "serviceId": "SL-1234-4321",
          "description": "Add bank account M-1234-4321",
          "reference": null,
          "manualTransferCode": "",
          "orderId": "0000000000X00000",
          "paymentUrl": "https://www.my-website.com/exchange",
          "amount": {
            "value": 49,
            "currency": "EUR"
          },
          "uuid": "a72v2820-f9f8-873e-5100-30c58d7a362b",
          "expire": null,
          "created": "2023-07-11T16:26:22+02:00",
          "modified": "2023-07-11T16:26:23+02:00",
          "_links": [
            {
              "href": "/merchants/M-1234-4321/bankaccounts",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "PackagesResponse200Successful": {
        "summary": "Get Packages",
        "value": {
          "total": 1,
          "packages": [
            {
              "code": "CP-1030-7060",
              "name": "Package A",
              "description": "Base package",
              "translations": [
                {
                  "description": {
                    "nl_NL": "Basispakket",
                    "en_GB": "Base package"
                  }
                }
              ],
              "partnerType": [
                "ALLIANCE",
                "BP"
              ],
              "actionCode": "Promo",
              "actionCodeValidUntil": "2007-10-02T12:11:20+02:00",
              "contractPackage": "PIONEER",
              "monthlyFee": 1000,
              "discountPercentage": 25,
              "public": true,
              "createdAt": "2007-10-02T12:11:20+02:00",
              "modifiedAt": "2007-10-02T12:11:20+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/packages",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "PartnersResponse200Successful": {
        "summary": "Get Partners",
        "value": {
          "total": 1,
          "partners": [
            {
              "code": "M-1234-1345",
              "name": "CompanyName",
              "ISO": false,
              "BP": true,
              "ALLIANCE": false,
              "FI": false,
              "SP": false,
              "createdAt": "2007-10-02T12:11:20+02:00",
              "modifiedAt": "2007-10-02T12:11:20+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/partners",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "PaymentLinkCreatePayload": {
        "summary": "Create a PaymentLink",
        "value": {
          "securityMode": 0,
          "countryCode": "NL",
          "language": "nl_NL",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountMin": {
            "value": 10,
            "currency": "EUR"
          },
          "stats": {
            "info": "Campagne 99",
            "tool": "Google",
            "object": "string",
            "extra1": "Customer 6985615",
            "extra2": "Invoice 21.3695",
            "extra3": "Shop Amsterdam",
            "domainId": "WU-####-####"
          }
        }
      },
      "PaymentLinkCreate400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "securityMode": {
            "message": "is_empty",
            "code": "PAY-2828"
          },
          "amount": {
            "value": {
              "message": "is_empty",
              "code": "PAY-2828"
            }
          },
          "_links": [
            {
              "href": "/services/SL-4241-3001/paymentlink",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "PaymentVerificationMethodsResponse200Successful": {
        "summary": "Get payment verification methods",
        "value": {
          "total": 1,
          "paymentVerificationMethods": [
            {
              "id": 1,
              "name": "NFC zonder pincode",
              "translations": {
                "name": {
                  "nl_NL": "NFC zonder pincode"
                }
              },
              "createdAt": "2021-01-01T00:00:00+02:00",
              "modifiedAt": null,
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "url": "/paymentverificationmethods",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ProductTypesResponse200Successful": {
        "summary": "Get producttypes",
        "value": {
          "total": 1,
          "productTypes": [
            {
              "code": "SHIPPING",
              "description": "Costs of shipment",
              "image": "/product_types/SHIPPING.svg",
              "createdAt": "2022-03-18T14:35:21+02:00",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/producttypes",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AccountRelationResponse200Successful": {
        "summary": "Found relation",
        "value": {
          "exists": true,
          "data": {
            "code": "A-1234-1234",
            "firstName": "John",
            "lastName": "Doe",
            "language": "NL",
            "merchants": [
              {
                "accountLinkCode": "AL-1234-1234",
                "merchantCode": "M-1234-1234",
                "companyName": "CompanyName",
                "package": "Merchant by Alliance",
                "allRights": "TRUE",
                "accountManager": "Jane Doe"
              }
            ]
          },
          "_links": [
            {
              "href": "\\/accounts\\/relation?email=sandbox@pay.nl",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AccountRelationResponse200SuccessfulNotFound": {
        "summary": "Relation not found",
        "value": {
          "exists": false,
          "data": null,
          "_links": [
            {
              "href": "\\/accounts\\/relation?email=sandbox@pay.nl",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TerminalsResponse200Successful": {
        "summary": "Get all terminals",
        "value": {
          "total": 1,
          "count": 1,
          "terminals": [
            {
              "code": "TH-1234-1234",
              "name": "Terminal Shop",
              "attribution": "PAY.nl* CompanyName",
              "status": "ACTIVE",
              "connectionStatus": "ONLINE",
              "merchant": {
                "code": "M-3421-2120",
                "status": "ACTIVE",
                "name": "CompanyName"
              },
              "service": {
                "code": "SL-1234-1234",
                "status": "ACTIVE",
                "name": "Shop"
              },
              "description": "POI: 5028314",
              "terminalType": "YOMANI Base UNIT NFC",
              "supplier": {
                "id": "4",
                "name": "AtosWorldline",
                "terminalId": "123456789"
              },
              "ecrProtocol": "WEB",
              "contractStartDate": "2022-07-11",
              "contractEndDate": "2025-07-11",
              "paymentTypes": [
                "SALE",
                "REFUND"
              ],
              "terminalBrands": [
                {
                  "id": 1003,
                  "name": "V PAY",
                  "image": "/terminal_brands/1003.svg",
                  "acquirer": "AWL Europe",
                  "acquirerTid": "123456",
                  "acquirerMid": "123456",
                  "acquirerChecksum": "123",
                  "paymentTypes": [
                    "SALE",
                    "REFUND"
                  ],
                  "createdAt": "2022-03-18T14:35:21+02:00",
                  "createdBy": "AT-1233-1322",
                  "modifiedAt": "2022-03-18T15:24:52+02:00",
                  "modifiedBy": "AT-1233-1322",
                  "deletedAt": null,
                  "deletedBy": null
                },
                {
                  "id": 1009,
                  "name": "MAESTRO",
                  "image": "/terminal_brands/1009.svg",
                  "acquirerTid": "123456",
                  "acquirerChecksum": "123",
                  "paymentTypes": [
                    "SALE",
                    "REFUND"
                  ],
                  "createdAt": "2022-03-18T14:35:21+02:00",
                  "createdBy": "AT-1233-1322",
                  "modifiedAt": "2022-03-18T15:24:52+02:00",
                  "modifiedBy": "AT-1233-1322",
                  "deletedAt": null,
                  "deletedBy": null
                }
              ],
              "location": {
                "code": "AS-0113-4000",
                "streetName": "Deliverylane",
                "streetNumber": "70",
                "zipCode": "5678CD",
                "city": "Amsterdam",
                "regionCode": null,
                "countryCode": "NL"
              },
              "createdAt": "2022-03-18T14:35:21+02:00",
              "createdBy": "AT-1233-1322",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "modifiedBy": "AT-1233-1322",
              "deletedAt": null,
              "deletedBy": null,
              "_links": [
                {
                  "href": "/terminals/TH-1234-1234",
                  "rel": "terminal",
                  "type": "GET"
                }
              ]
            }
          ],
          "_links": {
            "self": {
              "href": "/terminals?limit=1&page=1",
              "rel": "self",
              "type": "GET"
            },
            "first": {
              "href": "/terminals?limit=1&page=1"
            },
            "previous": {
              "href": "/terminals?limit=1&page=1"
            },
            "next": {
              "href": "/terminals?limit=1&page=2"
            },
            "last": {
              "href": "/terminals?limit=1&page=4"
            }
          }
        }
      },
      "TerminalResponse200Successful": {
        "summary": "Get a terminal",
        "value": {
          "code": "TH-1234-1234",
          "name": "Terminal Shop",
          "attribution": "PAY.nl* CompanyName",
          "status": "ACTIVE",
          "connectionStatus": "ONLINE",
          "merchant": {
            "code": "M-3421-2120",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "service": {
            "code": "SL-1234-1234",
            "status": "ACTIVE",
            "name": "Shop"
          },
          "description": "POI: 5028314",
          "terminalType": "YOMANI Base UNIT NFC",
          "supplier": {
            "id": "4",
            "name": "AtosWorldline",
            "terminalId": "123456789"
          },
          "ecrProtocol": "WEB",
          "contractStartDate": "2022-07-11",
          "contractEndDate": "2025-07-11",
          "paymentTypes": [
            "SALE",
            "REFUND"
          ],
          "terminalBrands": [
            {
              "id": 1003,
              "name": "V PAY",
              "image": "/terminal_brands/1003.svg",
              "acquirer": "AWL Europe",
              "acquirerTid": "123456",
              "acquirerMid": "123456",
              "acquirerChecksum": "123",
              "paymentTypes": [
                "SALE",
                "REFUND"
              ],
              "createdAt": "2022-03-18T14:35:21+02:00",
              "createdBy": "AT-1233-1322",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "modifiedBy": "AT-1233-1322",
              "deletedAt": null,
              "deletedBy": null
            },
            {
              "id": 1009,
              "name": "MAESTRO",
              "image": "/terminal_brands/1009.svg",
              "acquirer": "AWL Europe",
              "acquirerTid": "123456",
              "acquirerMid": "123456",
              "acquirerChecksum": "123",
              "paymentTypes": [
                "SALE",
                "REFUND"
              ],
              "createdAt": "2022-03-18T14:35:21+02:00",
              "createdBy": "AT-1233-1322",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "modifiedBy": "AT-1233-1322",
              "deletedAt": null,
              "deletedBy": null
            }
          ],
          "location": {
            "code": "AS-0113-4000",
            "streetName": "Deliverylane",
            "streetNumber": "70",
            "zipCode": "5678CD",
            "city": "Amsterdam",
            "regionCode": null,
            "countryCode": "NL"
          },
          "createdAt": "2022-03-18T14:35:21+02:00",
          "createdBy": "AT-1233-1322",
          "modifiedAt": "2022-03-18T15:24:52+02:00",
          "modifiedBy": "AT-1233-1322",
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/terminals/TH-1234-1234",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TerminalCreateResponse200Successful": {
        "summary": "Terminal created",
        "value": {
          "code": "TH-1234-1234",
          "name": "Terminal Shop",
          "attribution": "PAY.nl* CompanyName",
          "status": "ACTIVE",
          "connectionStatus": "ONLINE",
          "merchant": {
            "code": "M-3421-2120",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "service": {
            "code": "SL-1234-1234",
            "status": "ACTIVE",
            "name": "Shop"
          },
          "description": "POI: 5028314",
          "terminalType": "YOMANI Base UNIT NFC",
          "supplier": {
            "id": "4",
            "name": "AtosWorldline",
            "terminalId": "123456789"
          },
          "ecrProtocol": "WEB",
          "contractStartDate": "2022-07-11",
          "contractEndDate": "2025-07-11",
          "paymentTypes": [
            "SALE",
            "REFUND"
          ],
          "terminalBrands": [
            {
              "id": 1003,
              "name": "V PAY",
              "image": "/terminal_brands/1003.svg",
              "acquirer": "AWL Europe",
              "acquirerTid": "123456",
              "acquirerMid": "123456",
              "acquirerChecksum": "123",
              "paymentTypes": [
                "SALE",
                "REFUND"
              ],
              "createdAt": "2022-03-18T14:35:21+02:00",
              "createdBy": "AT-1233-1322",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "modifiedBy": "AT-1233-1322",
              "deletedAt": null,
              "deletedBy": null
            },
            {
              "id": 1009,
              "name": "MAESTRO",
              "image": "/terminal_brands/1009.svg",
              "acquirer": "AWL Europe",
              "acquirerTid": "123456",
              "acquirerMid": "123456",
              "acquirerChecksum": "123",
              "paymentTypes": [
                "SALE",
                "REFUND"
              ],
              "createdAt": "2022-03-18T14:35:21+02:00",
              "createdBy": "AT-1233-1322",
              "modifiedAt": "2022-03-18T15:24:52+02:00",
              "modifiedBy": "AT-1233-1322",
              "deletedAt": null,
              "deletedBy": null
            }
          ],
          "location": {
            "code": "AS-0113-4000",
            "streetName": "Deliverylane",
            "streetNumber": "70",
            "zipCode": "5678CD",
            "city": "Amsterdam",
            "regionCode": null,
            "countryCode": "NL"
          },
          "createdAt": "2022-03-18T14:35:21+02:00",
          "createdBy": "AT-1233-1322",
          "modifiedAt": "2022-03-18T15:24:52+02:00",
          "modifiedBy": "AT-1233-1322",
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/terminals/TH-1234-1234",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TerminalResponse400BadResponse": {
        "summary": "Merchant not found",
        "value": {
          "errors": {
            "merchantCode": {
              "message": "",
              "code": "PAY-404"
            }
          },
          "_links": [
            {
              "href": "/terminals",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "AccountComplianceResponse200Successful": {
        "summary": "Accounts:Compliance",
        "value": {
          "person": {
            "code": "A-1234-1234",
            "firstName": "John",
            "lastName": "Doe",
            "email": "johndoe@example.nl",
            "language": "nl_NL",
            "visitAddress": {
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "regionCode": null,
              "countryCode": "NL"
            },
            "complianceData": {
              "pep": true,
              "pepDescription": "",
              "dateOfBirth": "1992-01-03",
              "nationality": "NL",
              "idDocumentNumber": "12345789"
            },
            "documents": [
              {
                "code": "D-1234-1234",
                "type": "identification",
                "status": "UPLOADED",
                "description": "Copy ID or passport",
                "translations": {
                  "description": {
                    "en_GB": "Copy ID or passport",
                    "nl_NL": "Kopie ID of passpoort"
                  }
                },
                "createdAt": "2007-10-02T12:11:20+02:00",
                "createdBy": "A-1234-1234",
                "accceptedAt": "",
                "modifiedAt": "2021-08-10T17:24:05+02:00",
                "modifiedBy": "A-1234-1234",
                "deletedAt": null,
                "deletedBy": null
              },
              {
                "code": "D-1234-1234",
                "type": "address",
                "status": "REQUESTED",
                "description": "Proof of home address",
                "translations": {
                  "description": {
                    "en_GB": "Proof of home address",
                    "nl_NL": "Bewijs van thuisadres"
                  }
                },
                "createdAt": "2007-10-02T12:11:20+02:00",
                "createdBy": "A-1234-1234",
                "acceptedAt": "",
                "modifiedAt": "2021-08-10T17:24:05+02:00",
                "modifiedBy": "A-1234-1234",
                "deletedAt": null,
                "deletedBy": null
              }
            ],
            "createdAt": "2007-10-02T12:11:20+02:00",
            "createdBy": "A-1234-1234",
            "modifiedAt": "2021-08-10T17:24:05+02:00",
            "modifiedBy": "A-1234-1234",
            "acceptedAt": "2021-08-10T17:24:05+02:00",
            "deletedAt": null,
            "deletedBy": null
          },
          "license": {
            "code": "AL-1234-1234",
            "name": "",
            "merchant": {
              "code": "M-1234-1234",
              "name": "CompanyName",
              "status": "ACTIVE",
              "partner": {
                "code": "M-1234-1234",
                "name": "CompanyName",
                "type": "ALLIANCE",
                "accessToMerchant": true
              },
              "whitelabel": {
                "primaryColor": "",
                "secondaryColor": "",
                "footerData": ""
              },
              "primaryContacts": [
                "Name1",
                "Name2"
              ]
            },
            "authorizedToSign": "no",
            "ubo": "direct",
            "uboPercentage": 25,
            "relationshipDescription": "",
            "creator": "John Doe",
            "createdAt": "2007-10-02T12:11:20+02:00",
            "createdBy": "A-1234-1234",
            "modifiedAt": "2021-08-10T17:24:05+02:00",
            "modifiedBy": "A-1234-1234",
            "acceptedAt": "2021-08-10T17:24:05+02:00",
            "deletedAt": null,
            "deletedBy": null
          },
          "_links": [
            {
              "href": "/accounts/compliance",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AccountComplianceUpdate400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "person: Is empty\nlicense: Is empty",
          "violations": [
            {
              "propertyPath": "person",
              "message": "Is empty",
              "code": "PAY-2828"
            },
            {
              "propertyPath": "license",
              "message": "Is empty",
              "code": "PAY-2828"
            }
          ]
        }
      },
      "AccountComplianceUpdate422UnprocessableEntity": {
        "summary": "Unprocessable Entity",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Account link has already been accepted",
          "violations": [
            {
              "propertyPath": null,
              "message": "Account link has already been accepted",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "AuthenticateResponse200Successful": {
        "summary": "Successful token creation",
        "value": {
          "tokenType": "Bearer",
          "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJBLTE1ODQtOTMxNyIsImlhdCI6MTY2OTEyOTg0OSwiZXhwIjoxNjY5MTM3MDQ5fQ.7g61s7PN58Ope8t70ysnvOqbcOjGDFzyWanZeFqx8cQ",
          "refreshToken": "5fe027d96cded0c92b2337d4068a336dc41b956683a501c95d4896d9cb9f1103dc0b6d3388f17c1ef6a578ed9aa3c9d1c133355e9d9a4fa5dbb53d22e0aba0dc",
          "accessTokenExpiresAt": "2022-11-22T16:10:49+01:00",
          "refreshTokenExpiresAt": "2022-11-22T17:10:49+01:00"
        }
      },
      "RefreshResponse200Successful": {
        "summary": "Successful token creation",
        "value": {
          "tokenType": "Bearer",
          "accessToken": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1aWQiOiJBLTE1ODQtOTMxNyIsImlhdCI6MTY2OTEyOTg0OSwiZXhwIjoxNjY5MTM3MDQ5fQ.7g61s7PN58Ope8t70ysnvOqbcOjGDFzyWanZeFqx8cQ",
          "refreshToken": "5fe027d96cded0c92b2337d4068a336dc41b956683a501c95d4896d9cb9f1103dc0b6d3388f17c1ef6a578ed9aa3c9d1c133355e9d9a4fa5dbb53d22e0aba0dc",
          "accessTokenExpiresAt": "2022-11-22T16:10:49+01:00",
          "refreshTokenExpiresAt": "2022-11-22T17:10:49+01:00"
        }
      },
      "AuthenticateLoginResponse200Successful": {
        "summary": "Session",
        "value": {
          "session": {
            "sessionCode": "LA-1234-4321",
            "handshake": "agftj386jdfjk3489dsfdf824dff",
            "internalId": "John Doe's Bakery",
            "licenseCode": "AL-1234-4321",
            "redirectUrl": "https://dashboard.bakery.com"
          },
          "_links": [
            {
              "href": "/login/authenticate",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "AuthenticateLogin400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "login.ipAddress: Is empty\\naccount.label: Is empty",
          "violations": [
            {
              "propertyPath": "login.ipAddress",
              "message": "Is empty",
              "code": "PAY-2828"
            },
            {
              "propertyPath": "account.label",
              "message": "Is empty",
              "code": "PAY-2828"
            }
          ]
        }
      },
      "AuthenticateLogin422Unprocessable": {
        "summary": "Unprocessable",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Company is deleted",
          "violations": [
            {
              "propertyPath": null,
              "message": "Company is deleted",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "Refresh400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "refreshToken: Invalid refresh token",
          "violations": [
            {
              "propertyPath": "refreshToken",
              "message": "Invalid refresh token",
              "code": "PAY-2869"
            }
          ]
        }
      },
      "AuthenticateLoginPayload": {
        "summary": "Session",
        "value": {
          "login": {
            "inactivityExpire": 1800,
            "internalId": "John Doe's Bakery",
            "deviceId": "ec81b928b5f7b945cbe1ad97927867a564131eaa",
            "ipAddress": "213.126.82.230",
            "userAgent": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.87 Safari/537.36 RuxitSynthetic/1.0 v5732837501202812829 t1236787695256497497"
          },
          "account": {
            "licenseCode": "AL-1234-4321",
            "label": "John Doe",
            "languageId": "nl_NL",
            "logoutRedirectUrl": "https://mijn.3rdparty.nl"
          }
        }
      },
      "AuthenticationTokenResponse200Successful": {
        "summary": "Specific authentication token",
        "value": {
          "code": "AT-1234-1234",
          "secret": "21349ebda24393453sdfdfad",
          "name": "token1",
          "merchant": {
            "code": "M-1234-4321",
            "status": "INACTIVE",
            "name": "CompanyName"
          },
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "url": "/authenticationtokens/AT-1234-1234",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AuthenticationTokensResponse200Successful": {
        "summary": "All authentication tokens",
        "value": {
          "total": 1,
          "authenticationTokens": [
            {
              "code": "AT-1234-1234",
              "secret": "21349ebda24393453sdfdfad",
              "name": "token1",
              "merchant": {
                "code": "M-1234-4321",
                "status": "INACTIVE",
                "name": "CompanyName"
              },
              "createdAt": "2021-09-04T12:14:01+02:00",
              "createdBy": "A-1234-4321",
              "modifiedAt": null,
              "modifiedBy": null,
              "deletedAt": null,
              "deletedBy": null,
              "_links": [
                {
                  "url": "/authenticationTokens/AT-1234-1234",
                  "rel": "self",
                  "type": "GET"
                }
              ]
            }
          ],
          "_links": [
            {
              "url": "/authenticationTokens/",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AuthenticationTokenCreateResponse200Successful": {
        "summary": "Created authentication token",
        "value": {
          "code": "AT-1234-1234",
          "secret": "21349ebda24393453sdfdfad",
          "name": "token1",
          "merchant": {
            "code": "M-1234-4321",
            "status": "INACTIVE",
            "name": "CompanyName"
          },
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "A-XXXX-XXXX",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "url": "/authenticationtokens/AT-1234-1234",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "AuthenticationTokenPayload": {
        "summary": "Token",
        "value": {
          "merchantCode": "M-1234-4321",
          "authenticationToken": {
            "description": "token1",
            "authorisation": "specified",
            "authorisationGroups": [
              "AG-1234-4321"
            ],
            "ipfilter": {
              "type": "DENY_FROM_ALL",
              "exceptionList": [
                "192.168.1.2",
                "192.168.1.3"
              ]
            }
          }
        }
      },
      "AuthenticationToken400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "merchantCode: Invalid ID",
          "violations": [
            {
              "propertyPath": "merchantCode",
              "message": "Invalid ID",
              "code": "PAY-2820"
            }
          ]
        }
      },
      "AuthenticationToken422Unprocessable": {
        "summary": "Unprocessable",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Unable to complete request",
          "violations": [
            {
              "propertyPath": null,
              "message": "Unable to complete request",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "AuthenticationTokens400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "merchant: Invalid ID",
          "violations": [
            {
              "propertyPath": "merchant",
              "message": "Invalid ID",
              "code": "PAY-2820"
            }
          ]
        }
      },
      "AuthenticationTokensCreate422Unprocessable": {
        "summary": "Unprocessable",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Unable to complete request",
          "violations": [
            {
              "propertyPath": null,
              "message": "Unable to complete request",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "AuthenticationTokensDelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "authenticationTokenCode: {}",
          "violations": [
            {
              "propertyPath": "authenticationTokenCode",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "AuthenticationTokensUndelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "authenticationTokenCode: {}",
          "violations": [
            {
              "propertyPath": "authenticationTokenCode",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "AuthenticationTokensUndelete422Unprocessable": {
        "summary": "Unprocessable",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Authentication token recovery window expired",
          "violations": [
            {
              "propertyPath": null,
              "message": "Authentication token recovery window expired",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ClearingAccountGetResponse200OkExample": {
        "summary": "Get a Clearing Account",
        "value": {
          "code": "BA-1234-4321",
          "status": "NOT_CHECKED",
          "method": "iban",
          "iban": {
            "iban": "NL69INGB0123456789",
            "bic": "INGBNL2A",
            "owner": "John Doe"
          },
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/clearingaccounts/BA-1234-4321",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ClearingAccountsBrowseResponse200OkExample": {
        "summary": "Browse Clearing Accounts",
        "value": {
          "total": 1,
          "clearingAccounts": [
            {
              "code": "BA-1234-4321",
              "status": "NOT_CHECKED",
              "method": "iban",
              "iban": {
                "iban": "NL69INGB0123456789",
                "bic": "INGBNL2A",
                "owner": "John Doe"
              },
              "merchant": {
                "code": "M-1234-4321",
                "status": "ACTIVE",
                "name": "CompanyName"
              },
              "createdAt": "2016-06-04T08:15:00+01:00",
              "createdBy": "A-1234-4321",
              "modifiedAt": null,
              "modifiedBy": null,
              "deletedAt": null,
              "deletedBy": null
            }
          ],
          "_links": [
            {
              "href": "/clearingaccounts",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ClearingAccountsCreateResponse201CreatedExample": {
        "summary": "ClearingAccount Created",
        "value": {
          "code": "BA-1234-4321",
          "status": "NOT_CHECKED",
          "method": "iban",
          "iban": {
            "iban": "NL69INGB0123456789",
            "bic": "INGBNL2A",
            "owner": "John Doe"
          },
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/clearingaccounts",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "ClearingAccountsUndeleteResponse201UndeletedExample": {
        "summary": "ClearingAccount Undeleted",
        "value": {
          "code": "BA-1234-4321",
          "status": "NOT_CHECKED",
          "method": "iban",
          "iban": {
            "iban": "NL69INGB0123456789",
            "bic": "INGBNL2A",
            "owner": "John Doe"
          },
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/clearingaccounts/BA-1234-4321/undelete",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "ClearingAccountPatchResponse200OkExample": {
        "summary": "ClearingAccount Updated",
        "value": {
          "code": "BA-1234-4321",
          "status": "NOT_CHECKED",
          "method": "iban",
          "iban": {
            "iban": "NL69INGB0123456789",
            "bic": "INGBNL2A",
            "owner": "John Doe"
          },
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/clearingaccounts",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "ClearingAccountsPatchResponse400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "type": "https://tools.ietf.org/html/rfc2616#section-10",
          "title": "An error occurred",
          "detail": "documents: Error adding file",
          "violations": [
            {
              "propertyPath": "documents",
              "message": "Error adding file",
              "code": "PAY-3000"
            },
            {
              "propertyPath": "clearingAccount",
              "message": "Invalid clearing code",
              "code": "PAY-2827"
            },
            {
              "propertyPath": "iban",
              "message": "Invalid IBAN",
              "code": "PAY-2813"
            },
            {
              "propertyPath": "bic",
              "message": "Invalid BIC code",
              "code": "PAY-2840"
            }
          ]
        }
      },
      "ClearingAccountsPatchResponse422UnprocessableEntityExample": {
        "summary": "",
        "value": {
          "type": "https://tools.ietf.org/html/rfc2616#section-10",
          "title": "An error occurred",
          "detail": "Error adding file",
          "violations": [
            {
              "propertyPath": "documents",
              "message": "Error adding file",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ClearingAccountsUpdatePayload": {
        "summary": "ClearingAccount Updated with Merchant Code",
        "value": {
          "method": "iban",
          "iban": {
            "iban": "NL69INGB0123456789",
            "bic": "INGBNL2A",
            "owner": "John Doe"
          },
          "documents": {
            "fileName": "proof_for_merchant.jpg",
            "files": [
              "",
              ""
            ]
          }
        }
      },
      "ClearingAccountsCreateResponse400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occured",
          "detail": "clearingAccount.method: Not equal\\nclearingAccount.iban.iban: Invalid IBAN\\nclearingAccount.iban.bic: Invalid BIC code",
          "violations": [
            {
              "propertyPath": "clearingAccount.method",
              "message": "Not equal",
              "code": "PAY-2827"
            },
            {
              "propertyPath": "clearingAccount.iban.iban",
              "message": "Invalid IBAN",
              "code": "PAY-2813"
            },
            {
              "propertyPath": "clearingAccount.iban.bic",
              "message": "Invalid BIC code",
              "code": "PAY-2840"
            }
          ]
        }
      },
      "ClearingAccountsUndelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "clearingAccountCode: The clearing account can not be found.",
          "violations": [
            {
              "propertyPath": "clearingAccountCode",
              "message": "The clearing account can not be found.",
              "code": "PAY-404"
            }
          ]
        }
      },
      "ClearingAccountsCreateResponse422UnprocessableEntityExample": {
        "summary": "Unprocessable",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occured",
          "detail": "Error adding file",
          "violations": [
            {
              "propertyPath": null,
              "message": "Error adding file",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ClearingAccountsUndelete422Unprocessable": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Unable to complete request",
          "violations": [
            {
              "propertyPath": null,
              "message": "Unable to complete request",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ClearingAccountsCreateWithMerchantCodePayloadExample": {
        "summary": "ClearingAccount Create with Merchant Code",
        "value": {
          "merchantCode": "M-1234-4321",
          "clearingAccount": {
            "method": "iban",
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            },
            "documents": {
              "fileName": "proof_for_merchant.jpg",
              "files": [
                "",
                "JVBERi0xLjUKJcOkw7zDtsOfCjIgMCBvYmoKPDwvTGVuZ3RoIDMgMCBSL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nDPQM1Qo5ypUMFAw0DMwslAwtTTVMzI3VbAwMdSzMDNUKErlCtdSyIOoAMKidC6nEC5TMz0LBXNzYz1LC0uFkBQFfTdDBUMjhZC0aBsDQzsjGwMjEGFspwskTexiQ7y4XEO4ArkCFQAX4ReqCmVuZHN0cmVhbQplbmRvYmoKCjMgMCBvYmoKMTA5CmVuZG9iagoKNSAwIG9iago8PC9MZW5ndGggNiAwIFIvRmlsdGVyL0ZsYXRlRGVjb2RlL0xlbmd0aDEgODE1Mj4+CnN0cmVhbQp4nOU4fXAbVX6/tyvZsq1YkmMrJkqipyxO4siW/BFDnMRYsS3Zjp1Y/gIpIbHW0tpSYkuqpDgEjsHXFsgopMmFKzSQOWinZbgbOllj2pobSsxdae/aXjlKmSsHKZm5u+kfJU3KwfXmaOz+3tu144QA007/69rv7e/7+613ncscVcAM0yCCLzopp8uNBgEA/h6AlEWncrSlr2InwpcBhH8cS49PPvMX938CYHgFoPCV8YnjY3989jezAOY4gKjGFTl2uqHZDWCtRBt3xZHQs3C8EPEg4nfGJ3MP/EAYXo14DvHyiVRUBnGAIH4CcfOk/EDaZWhG/9ZvIk6T8qTy629+P4Y4+ivJplPZXAxOLAKs28L46YyS7n1m9E3Eu9D/GaQR/GGXGcEChguiAf4/X8ZTUAFdxhawQJrvN13iS3AHnANY/IhhN/aF3sXf/F9GYdJufwAvwCtwCt6DgzojAEFIwFGkrLzegLeRyq4g7IfvQP4LzL4Ec8jX5CJwmmVy2ysIT8Ms/M1NXoIwCQ9hLH8G75F6+CGOSgo+Jib4OryJVj9G2t7bmRJKcRvj4NgK6vvwrHAS9gg/R+Qc4whewQp/BefJIbScwzxPLWe863NGH4eHcR+EOEwhzC9jy3/9FIoWf4lZPQx74LdhN0ys0HiNPCcWY/+G4Dms6Ruc5l1iFnaJh4U/F4TrTyLyDRjHJRPMXTgl7v6CCv2PL3EYVpFqsQqKbscVtoFl4TdCw+In4p1QDMOL15Zoiz2LvxTlhaRhxLDO2GL4uy/zUfANwyRqw+IvFh5aiBn3GV/Abr0I4Os8sD8cGh4aHOgP9u3b29uzp7urM+DvaG/b7Wu9p2XXzh3N2+++q6m+zuuprdmyeVPVndJGl7Oy3Ga1lK4qKS4yFRYYDaJAoIaqJOJXxSpqC8iSX5K7amuovzLeUVvjlwIRlcpUxZthk9TVxUmSrNIIVTfhTV5Bjqg+lBy7RdKnSfqWJYmV7oJdzIVE1R91SHSO7O8PIXyqQwpT9QqH93LYsIkjqxBxuVCDR8WipX41MBXP+yMYI5kpKW6X2pXi2hqYKS5BsAQhdYuUniFb7iEcELb4d8wIYFrF3GKmfjmmBvtD/g6HyxWurelWS6UOzoJ2blItaFcLuUmaYKHDSTpTM59/Ys4KoxG3OSbF5PtDqiijbl705/OPqza3Wi11qNUP/rwSM1fUGqnDr7qZ1Z6BZT89N1wS1VhllWj+U8B0pCsf3UyRdUpBlfVTYKAqtKtkIORilyOAtc7nAxIN5CN5eW5xelSiVik/Yzbn034sNwRDaGJu8bsnHWrgibBqjcTJjrCeemCgR13dfyCkClUBGpeRgr+tkmu7w2Vblgl+ERuwLFgcrLDLxcpwcs4Ho4io0/0hDacw6ngZfF53WBUijDO/xKkYZpzpJc6yekTC3vYMhvKqoao7Jvmx4idldXoUp+swa4xkVUt/5XBJ+TIbbfaGuSzFqLpjCaoaN2GRUGulAs4NU8lbOVL6K+12xYEONtnKaLOEZpgdv+SP6L9T8Uo0QLHQXW5tEIZCqq8DAZ+sd8w/U+dFDTmCDUt08GaqXimtlktty91lYfkTgyGuoqup5e0qRKK6lur183NF/flIhxYCsyX1h16FxsXLM9uoY7YRtkG4gwnb23HKNvnzodiY6ow4YnjuxmjI4VJ9YexwWAopYTZ2WKHqyw4+HGE+K0OhnkGpp39/aLseiMZg5gxV/lvMSCGHZgYHUDVVmWhIcIhhFLQigQYQkNp24a4WVplwWbHgnMoGt20XDREHLEljGGo19SsduhzDbzJqZOPU3rVkrYChaKe9y+EKu7SrtkZANtUdo4aJFbVriYWPKWSYcD7buziJ1bKSDT0NSYoUluJU9QVDLDdWHl5lvRi85nqvhm7CVhQLywQuZC8hrJhqwO1YWVy1k+PLaNct7O4lNs2bpJ7BPDMu6QYBI+9WgY2wb7vNwZ8F7EBL+OylVjzS/EDnZ3w+dpjjO5gRqTuWlwZDu7g0Pk8edjzIfJVBD+kZaqutwUdb24xETvTP+MiJwf2hV634XnhiKPSyQIT2SFt45k7khV6l+EeDUwVGZUSGUIYwSwOImLi841UfwDTnGjiB49E5ApxmWqIRiM4JGs2qOdrEHflAQI5B4/iWpA1IM2m0aU7j1wywkvmKjT6Tr8hnFlYJjhnCSC8j5bv4HltEYNZMVhHHDGoNcPIcmZ4p8jk0iWmU8GkRnhi+4Xp4f2jWjH+dHXxHR23swnGpjGOz8c+Kn8bYoHwtHM9HwuywgR1bg79EJdI92CbpHgykwKwWS0qbWiK1MXoro7dq9AJGL8QRJXaC6tPY+6BK2AQcCLnwSNK1P3TkrVdYp8L4UMlbf1GLFavC74Y38B20nOzyXSoTSgSTWGE3g4kUiSZTkU0sEiPhIrFMAGEkDGWtdmKxk8t2ctFOTtvJI3YyYidIpJx+5JqdvGUnz3Ne2k767MTJGRpdtZPnOCvF1Xx2UscFwE4+5NxpTq/jlJ2L3I+mdpoz+jjvGqerSz40Bcp1rnFD89zNNOdiaN4lHweXr99aujL6degW+uc4jAetbhs0VvLd1ljpHTl0sNFWRtY02xrr61xNd9ukjRYi2Vw2abOHuIltTQXZ+W7j9YOOdsP5DseGv32g/t0mh+Hp8rfJzoU33y4s+eyIo4m9UBHAbznDw9gDByR9AXN5ObmjwEIM69abV0fCI+aUWag1ExHMVrNQZDSbDQ5HeSTsICNhR5mhJBI2YGcM4uX15Pn1JL2eBNcT33otWYzYDRiw21YGzTzgkYMH3XrMLOpWYtvcxALehPG67m5EyGVz0VbSKLp2vvSS+O9tNP1P75PDTp/PufAUMREh2Ny2+rO3MY9vrW1auPhe6fVPnl+I/dH1S9ZfL3yL5zK0+JHwjvgmbIGwb5ursHztKiiH6q2rXOKaNRuCYccaq1gSDBeK9umtJL2VRLaS4FZCt5ILW8nIVtK3lSz1AVobWfCNPPhmDBq3RowawyblBdLGTZubGtfYGxuatnmJR2jadldjw5oKzETaWFBRbl+zQRTemfnTwLfraut7HvjeubByf8O3z4w/693alOkf3rvvyf2tEjE9cWZ92b/+TscLD25b7+qIBr522vmjSW+wo3nf2gZP+708n3LMp9bwdbBDp29zcWlp4WpRXFNpMJeYg+GiwhJLOYCtPwz25yqJWklaK4m3kqWQWZqWxkY+Lxh+WXNDAyu6ceOmJpvUhEWuaKyQbOWYw90VpYTsi4w89LDS+pOf7KzbMSj9bnlmXHiydvO77w5df2R3m3V3pZPHg6/sd5x74sVowYhl16fg1L7hftDx43+48Ya++BE/0ewDT9BJqFfoWvDDfctC5JbXemNBM07hz6AK105xPQwJzdg4dn2PbCFnyD9zDSNU65oCWPHb5n4Evi/+NYicuoEkl+3eu+yDoOS9y1qF+B2mwSLO+6QOG1DmhA4bYRV+k2pwAX4b/4kOF8KD+J2qwSZ8Xnl0uAhKSZsOF5MkCepwCawTXl/+z4NH+KkOr4Im0aTDpbBWbGHRG9gX00vifTpMgBpEHRag1CDpsAh3Gep12IAy4zpshLWGx3W4ADYY/lCHC+ETw0UdNsEW46wOF8E64/s6XCx8YPxPHS6B7aZ3dNgM9xeV6PAqOFy05KsUthW93ZEYT+QSDyoxGpNzMo2m0sczifF4jm6JVtOGuvo62plKjU8otD2VSacyci6RSnqK228Va6ADaKJLztXQ7mTU05sYVTRZOqhkEmMDyvjRCTmzOxtVkjElQ2vprRK34vcqmSxDGjz1nrobzFtlE1n8istl5JgyKWeO0NTYzXHQjDKeyOaUDBITSTrsGfTQoJxTkjkqJ2N0aFmxb2wsEVU4MapkcjIKp3JxjPTw0UwiG0tEmbesZzmBFdUYzClTCt0r53JKNpVsk7PoCyMbSiRT2Rp6LJ6IxukxOUtjSjYxnkTm6HF6sw5Froy5JJOpKTQ5pdRg3GMZJRtPJMdplqWsa9NcXM6xpCeVXCYRlScmjmPLJtOoNYo9OpbIxdHxpJKl+5RjdCA1KSe/49FCwdqMYU1pYjKdSU3xGGuz0YyiJNGZHJNHExOJHFqLyxk5ihXDsiWiWV4RLARNy8la/9FMKq1gpPd19t4QxAC1amZTE1PomUknFSXGPGLYU8oEKqHjiVTqCMtnLJXBQGO5eO2KyMdSyRyqpqgci2HiWK1U9Ogk6xOWObcUnBzNpJCXnpBzaGUy64nncukdXu+xY8c8st6aKHbGg5a9X8bLHU8rej8yzMrkRC+2P8lad5T3lyUx2N1L+9JYnwAGR3WBGro0mfWeet0FljGRzmU92cSEJ5UZ9/YFeqEDEjCOK4frQVAgBhSXjLiMUBRSkIbjkOFScaRS/EMXxYcihQaog3pcFDpRKoX8CdSn0I5wBrXYLnO7KUiCB4o558utNSA0oEfRxbVrEOpG/Sha6EW9UeSutEthkFMS+JhlmuNwFOOQkbIbsqiloEyMS1CoxfVVNr6Kfy+HssucBoyrHlfdbTW/ym4CLVFe6RznsEgnefRHkJZCvS+rB0U5hXcvixyFYzFuldkeRolBLhXkmqwSOe4tyaWGbuOxDz2OoX6Ud3JJMspts4nQLKcQjus1PYz1zvAIYlxvKbcsev58B24/G4M8uinucy+nMzzLeW2IZ/W8tJoN8ShSSGW1OIaRML9xDsu8njGuzWYsqWuO4tTRL/VDdV1Z70uS+5jSo2Q6NXq9x/ie5X6T6IPy+LQu3+yb8jrJvOpapyeRm+OyUaRP4M9x/ZRNYlU0X6P6OTrGT2Vcz3iS26WwD+/H+FSkeN+Sro28xzeqos3NmD6nlOumEU7xLJbqWMt7wzJReKQMkvnJH0WNCe5biy3Op0PmvVX0Xud4Bkv1iumZsqjTnFILfj4X7Lwrek3vw+dE720tahVcOZusJxM83uwK20kebWw5R63aTGpC96RlPMGfR0eW+zPG502raIxbq/2Cmo/x2uR0rykeUQx/tI5rs5VC3aO8H9p50qY597nKyby+KV0vzZ9KOT2WSX4+4nwC07ADXyy9GB378fA5XHlqovqZ8egxe//XeiyuNK/gyvORWY5lEmPs1U9/cvnUHV1xfpc6MYjPoF7+vEjr8xPQK0dvscBOza3PzHr+zLw5C20aE4jneDxZXksPz2Ec+X3ooZe9Q2tv/I9iSLe5ZoqCu0eJAoTEyTisBieJwD4yAsNkN7QQH959yGvDezvi7O4hLTCNci1IvwfxXUjfic9OJ+6tuPpwncZlwKVJ1KGEF+9eHa9FvAY13sKd8MWorUhl9z2Id+G9U78HkO7Hu1/HuxHHO0RIIb6Et/L9IjH4Zsnl6+St64ReJ498RoKfkemPz3ws/Me1aueFaxevCX1XR65euCrWXSWWq8QEV6xXglciV9JXnr9SUGz5iJjh34jtZ5e3Oz9suTT8Ly0fDMMlzOxS3aXgpelL6iXjJSIOfyDandZ5Ol83n56fnv/x/OX5a/Om6dfPvC785Wtep+U152uCc7Zv9pFZMfIisbzofFEIPht5VjhznljOO897z4vPnPM4z3VucD791Gbn5aeuPSXMLc7PPrXKFniN9JFeaMEa7psVF50XdleQvZiWBXcnLi+uPlwpXKdx4TcPijtxeUmvb7s48vuk5KzjrPvsQ2dPnjWmH5t+7Mxj4vSjZx4VLkxdnBKywWpnKul2Jju3Ou9orBwubBSHC9ANevd1j1ZtCURGfM4RFDqwv865v7PaubqxbNiICRtQ0CI6xVaxT0yJp8WLYqFpILjB2Y/rcvBaUPAFi8wBS5+zz9snzi1e9ik9LrS2J71neo/YHah2dnVud1o6nZ3ezrc6P+y82lkw0kmew9/AhcDFgOgLVHsDvsAGV2Bdl2PY3lgxbCOWYWujZVgg2OhGGPZaFi2CxTJiecQiWqAVhGk7MZI5cmZmaNDt7pkrXBzoUU3BAyo5oVYNst3Xv18tOKHC8P4DoRlCfi/86KlT0La+R20YDKmR9eEeNYaAjwHTCFjXz9ihLZzN5tz8Im43wkdxB/dRNxIPZTUqLPPBnSVZfERluRJxMwENJ7i7GQ8JTI+g9qEssI0x3ZoS087q5riytnGg8tB/AzKCFaoKZW5kc3RyZWFtCmVuZG9iagoKNiAwIG9iago0NjE3CmVuZG9iagoKNyAwIG9iago8PC9UeXBlL0ZvbnREZXNjcmlwdG9yL0ZvbnROYW1lL0JBQUFBQStMaWJlcmF0aW9uU2VyaWYKL0ZsYWdzIDQKL0ZvbnRCQm94Wy01NDMgLTMwMyAxMjc3IDk4MV0vSXRhbGljQW5nbGUgMAovQXNjZW50IDg5MQovRGVzY2VudCAtMjE2Ci9DYXBIZWlnaHQgOTgxCi9TdGVtViA4MAovRm9udEZpbGUyIDUgMCBSCj4+CmVuZG9iagoKOCAwIG9iago8PC9MZW5ndGggMjQwL0ZpbHRlci9GbGF0ZURlY29kZT4+CnN0cmVhbQp4nF1Qu2rEMBDs9RVbXopDsk9HGmMIFw5c5EGcfIAsrR1BLAlZLvz3WcmXBFJIzDA7w+zyS/fYOZv4a/S6xwSjdSbi4teoEQacrGNVDcbqdGPl17MKjJO335aEc+dG3zSMv5G2pLjB4cH4Ae8Yf4kGo3UTHD4uPfF+DeELZ3QJBGtbMDhSzpMKz2pGXlzHzpBs03Yky9/A+xYQ6sKrvYr2BpegNEblJmSNEC0012vL0Jl/mtwdw6g/VaTJiiaFOMuWcF2wPGd8Kvj+lLHcsSx5N2dOzqv/NAa9xkhty31KzVzQOvw9YfAhu8r7BrbPdGAKZW5kc3RyZWFtCmVuZG9iagoKOSAwIG9iago8PC9UeXBlL0ZvbnQvU3VidHlwZS9UcnVlVHlwZS9CYXNlRm9udC9CQUFBQUErTGliZXJhdGlvblNlcmlmCi9GaXJzdENoYXIgMAovTGFzdENoYXIgNAovV2lkdGhzWzc3NyA2MTAgNjEwIDM4OSAyNzcgXQovRm9udERlc2NyaXB0b3IgNyAwIFIKL1RvVW5pY29kZSA4IDAgUgo+PgplbmRvYmoKCjEwIDAgb2JqCjw8L0YxIDkgMCBSCj4+CmVuZG9iagoKMTEgMCBvYmoKPDwvRm9udCAxMCAwIFIKL1Byb2NTZXRbL1BERi9UZXh0XQo+PgplbmRvYmoKCjEgMCBvYmoKPDwvVHlwZS9QYWdlL1BhcmVudCA0IDAgUi9SZXNvdXJjZXMgMTEgMCBSL01lZGlhQm94WzAgMCA1OTUuMzAzOTM3MDA3ODc0IDg0MS44ODk3NjM3Nzk1MjhdL0dyb3VwPDwvUy9UcmFuc3BhcmVuY3kvQ1MvRGV2aWNlUkdCL0kgdHJ1ZT4+L0NvbnRlbnRzIDIgMCBSPj4KZW5kb2JqCgo0IDAgb2JqCjw8L1R5cGUvUGFnZXMKL1Jlc291cmNlcyAxMSAwIFIKL01lZGlhQm94WyAwIDAgNTk1IDg0MSBdCi9LaWRzWyAxIDAgUiBdCi9Db3VudCAxPj4KZW5kb2JqCgoxMiAwIG9iago8PC9UeXBlL0NhdGFsb2cvUGFnZXMgNCAwIFIKL09wZW5BY3Rpb25bMSAwIFIgL1hZWiBudWxsIG51bGwgMF0KL0xhbmcoZW4tVVMpCj4+CmVuZG9iagoKMTMgMCBvYmoKPDwvQ3JlYXRvcjxGRUZGMDA1NzAwNzIwMDY5MDA3NDAwNjUwMDcyPgovUHJvZHVjZXI8RkVGRjAwNEMwMDY5MDA2MjAwNzIwMDY1MDA0RjAwNjYwMDY2MDA2OTAwNjMwMDY1MDAyMDAwMzYwMDJFMDAzND4KL0NyZWF0aW9uRGF0ZShEOjIwMjMwMTEwMTUzNTIzKzAxJzAwJyk+PgplbmRvYmoKCnhyZWYKMCAxNAowMDAwMDAwMDAwIDY1NTM1IGYgCjAwMDAwMDU3MDcgMDAwMDAgbiAKMDAwMDAwMDAxOSAwMDAwMCBuIAowMDAwMDAwMTk5IDAwMDAwIG4gCjAwMDAwMDU4NzYgMDAwMDAgbiAKMDAwMDAwMDIxOSAwMDAwMCBuIAowMDAwMDA0OTIwIDAwMDAwIG4gCjAwMDAwMDQ5NDEgMDAwMDAgbiAKMDAwMDAwNTEzNiAwMDAwMCBuIAowMDAwMDA1NDQ1IDAwMDAwIG4gCjAwMDAwMDU2MjAgMDAwMDAgbiAKMDAwMDAwNTY1MiAwMDAwMCBuIAowMDAwMDA1OTc1IDAwMDAwIG4gCjAwMDAwMDYwNzIgMDAwMDAgbiAKdHJhaWxlcgo8PC9TaXplIDE0L1Jvb3QgMTIgMCBSCi9JbmZvIDEzIDAgUgovSUQgWyA8RUNDNTE3RDJDRTgzQzNEOEFGRERFNjE1RjY1QTRBMDc+CjxFQ0M1MTdEMkNFODNDM0Q4QUZEREU2MTVGNjVBNEEwNz4gXQovRG9jQ2hlY2tzdW0gLzg2MjA2MzEwNjExREE0RjBDMUI5MUY4QzhCOTA3NEJBCj4+CnN0YXJ0eHJlZgo2MjQ3CiUlRU9GCg=="
              ]
            }
          }
        }
      },
      "ClearingAccountsCreateWithoutMerchantCodePayloadExample": {
        "summary": "ClearingAccount Create without Merchant Code",
        "value": {
          "clearingAccount": {
            "method": "iban",
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            },
            "documents": {
              "fileName": "proof_for_merchant.jpg",
              "files": [
                "",
                ""
              ]
            }
          }
        }
      },
      "ClearingAccountsCreateWithoutDocumentsPayloadExample": {
        "summary": "ClearingAccount Create without documents",
        "value": {
          "merchantCode": "M-1234-4321",
          "clearingAccount": {
            "method": "iban",
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            }
          }
        }
      },
      "ContactMethodsGetResponse200OkExample": {
        "summary": "ContactMethod",
        "value": {
          "code": "CM-1234-4321",
          "type": "phone_helpdesk",
          "value": "088-88 666 22",
          "description": "Support desk",
          "public": "true",
          "notifications": "false",
          "merchant": {
            "code": "M-1234-4321",
            "name": "CompanyName",
            "status": "ACTIVE"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": "2016-06-04T08:15:00+01:00",
          "modifiedBy": "A-1234-4321",
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/contactmethods/CM-1234-4321",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ContactMethodsBrowseResponse200OkExample": {
        "summary": "Browse Contact Methods",
        "value": {
          "total": 1,
          "contactMethods": [
            {
              "code": "CM-1234-4321",
              "type": "phone_helpdesk",
              "value": "088-88 666 22",
              "description": "Support desk",
              "public": "true",
              "notifications": "false",
              "merchant": {
                "code": "M-1234-4321",
                "name": "CompanyName",
                "status": "ACTIVE"
              },
              "createdAt": "2016-06-04T08:15:00+01:00",
              "createdBy": "A-1234-4321",
              "modifiedAt": "2016-06-04T08:15:00+01:00",
              "modifiedBy": "A-1234-4321",
              "deletedAt": null,
              "deletedBy": null
            }
          ],
          "_links": [
            {
              "href": "/contactmethods",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "ContactMethodsUpdatedResponse200OkExample": {
        "summary": "ContactMethod Updated",
        "value": {
          "code": "CM-1234-4321",
          "type": "phone_helpdesk",
          "value": "088-88 666 22",
          "description": "Support desk",
          "public": "true",
          "notifications": "false",
          "merchant": {
            "code": "M-1234-4321",
            "name": "CompanyName",
            "status": "ACTIVE"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": "2016-06-04T08:15:00+01:00",
          "modifiedBy": "A-1234-4321",
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/contactmethods/CM-1234-4321",
              "rel": "self",
              "type": "PATCH"
            }
          ]
        }
      },
      "ContactMethodsUndeleteResponse200Successful": {
        "summary": "ContactMethod undelete",
        "value": {
          "code": "CM-1234-4321",
          "type": "phone_helpdesk",
          "value": "088-88 666 22",
          "description": "Support desk",
          "public": "true",
          "notifications": "false",
          "merchant": {
            "code": "M-1234-4321",
            "name": "CompanyName",
            "status": "ACTIVE"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": "2016-06-04T08:15:00+01:00",
          "modifiedBy": "A-1234-4321",
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/contactmethods/CM-1234-4321",
              "rel": "self",
              "type": "PATCH"
            }
          ]
        }
      },
      "ContactMethodsCreateResponse201CreatedExample": {
        "summary": "ContactMethod Created",
        "value": {
          "code": "CM-1234-4321",
          "type": "phone_helpdesk",
          "value": "088-88 666 22",
          "description": "Support desk",
          "public": "true",
          "notifications": "false",
          "merchant": {
            "code": "M-1234-4321",
            "name": "CompanyName",
            "status": "ACTIVE"
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/contactmethods",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "ContactMethodsCreateResponse400BadRequestExample": {
        "summary": "ContactMethod Create containing errors",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "contactMethod.type: Not one of the allowed values\\ncontactMethod.description: Invalid string\\ncontactMethod.public: Not a boolean",
          "violations": [
            {
              "propertyPath": "contactMethod.type",
              "message": "Not one of the allowed values",
              "code": "PAY-2831"
            },
            {
              "propertyPath": "contactMethod.description",
              "message": "Invalid string",
              "code": "PAY-2825"
            },
            {
              "propertyPath": "contactMethod.public",
              "message": "Not a boolean",
              "code": "PAY-2806"
            }
          ]
        }
      },
      "ContactMethodsGet400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "contactMethodCode: {}",
          "violations": [
            {
              "propertyPath": "contactMethodCode",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "ContactMethodsDelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "contactMethodCode: {}",
          "violations": [
            {
              "propertyPath": "contactMethodCode",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "ContactMethodsUpdateResponse400BadRequestExample": {
        "summary": "ContactMethod Update containing errors",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "type: Not one of the allowed values\\ndescription: Invalid string\\npublic: Not a boolean",
          "violations": [
            {
              "propertyPath": "type",
              "message": "Not one of the allowed values",
              "code": "PAY-2831"
            },
            {
              "propertyPath": "description",
              "message": "Invalid string",
              "code": "PAY-2825"
            },
            {
              "propertyPath": "public",
              "message": "Not a boolean",
              "code": "PAY-2806"
            }
          ]
        }
      },
      "ContactMethodsCreateResponse422UnprocessableEntityExample": {
        "summary": "ContactMethod Create containing errors",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Error creating contact method",
          "violations": [
            {
              "propertyPath": null,
              "message": "Error creating contact method",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ContactMethodsUpdateResponse422UnprocessableEntityExample": {
        "summary": "ContactMethod Update containing errors",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Error updating contact method",
          "violations": [
            {
              "propertyPath": null,
              "message": "Error updating contact method",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ContactMethodsCreateWithMerchantCodePayloadExample": {
        "summary": "ContactMethod Create with Merchant Code",
        "value": {
          "merchantCode": "M-1234-4321",
          "contactMethod": {
            "type": "phone_helpdesk",
            "value": "088-88 666 22",
            "description": "Support desk",
            "public": "true",
            "notifications": "false"
          }
        }
      },
      "ContactMethodsCreateWithoutMerchantCodePayloadExample": {
        "summary": "ContactMethod Create without Merchant Code",
        "value": {
          "contactMethod": {
            "type": "phone_helpdesk",
            "value": "088-88 666 22",
            "description": "Support desk",
            "public": "true",
            "notifications": "false"
          }
        }
      },
      "ContactMethodsUpdateUpdateTypeAndValueRequestExample": {
        "summary": "Update ContactMethod type and value",
        "value": {
          "type": "phone_helpdesk",
          "value": "088-88 666 22"
        }
      },
      "ContactMethodsUpdateSetPublicRequestExample": {
        "summary": "Update ContactMethod set public",
        "value": {
          "public": "true"
        }
      },
      "ContactMethodsUpdateEnableNotificationsRequestExample": {
        "summary": "Update ContactMethod enable notifications",
        "value": {
          "notifications": true
        }
      },
      "ContactMethodsUpdateFullRequestExample": {
        "summary": "Update ContactMethod full",
        "value": {
          "type": "phone_helpdesk",
          "value": "088-88 666 22",
          "description": "Support desk",
          "public": "true",
          "notifications": "false"
        }
      },
      "MerchantResponse200Successful": {
        "summary": "View a merchant",
        "value": {
          "code": "M-1234-4321",
          "name": "CompanyName",
          "publicName": "CompanyName",
          "boardingStatus": "ACCEPTED",
          "status": "ACTIVE",
          "payoutStatus": "ENABLED",
          "coc": "12345678",
          "vat": "NL0123456789",
          "companyTypeId": "1",
          "countryCode": "NL",
          "contractLanguage": "nl_NL",
          "contractPackage": "Merchant by Alliance",
          "website": "https://pay.nl/",
          "postalAddress": {
            "code": "AS-1234-43",
            "streetName": "Deliverylane",
            "streetNumber": "70",
            "zipCode": "5678 CD",
            "city": "Amsterdam",
            "countryCode": "NL"
          },
          "visitAddress": {
            "code": "AS-1234-43",
            "streetName": "Visitstreet",
            "streetNumber": "2",
            "zipCode": "56273",
            "city": "London",
            "countryCode": "UK"
          },
          "partner": [
            {
              "code": "M-1234-4321",
              "name": "ReferredCompany",
              "type": "REFERRAL",
              "accessToMerchant": true
            }
          ],
          "createdAt": "2014-04-15T11:29:03+02:00",
          "createdBy": "A-1234-4321",
          "acceptedAt": "2014-12-17T18:38:55+01:00",
          "suspendedAt": null,
          "suspendedBy": null,
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "reviewedAt": "2017-02-22T10:38:43+01:00",
          "nextReviewDate": "2017-03-22T10:38:43+01:00",
          "_links": [
            {
              "href": "/merchants/M-1234-4321",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "MerchantsResponse200Successful": {
        "summary": "List all merchants",
        "value": {
          "total": 1,
          "merchants": [
            {
              "code": "M-1234-4321",
              "name": "CompanyName",
              "publicName": "CompanyName",
              "boardingStatus": "ACCEPTED",
              "status": "ACTIVE",
              "payoutStatus": "ENABLED",
              "coc": "12345678",
              "vat": "NL0123456789",
              "companyTypeId": "1",
              "countryCode": "NL",
              "contractLanguage": "nl_NL",
              "contractPackage": "Merchant by Alliance",
              "website": "https://pay.nl/",
              "postalAddress": {
                "code": "AS-1234-43",
                "streetName": "Deliverylane",
                "streetNumber": "70",
                "zipCode": "5678 CD",
                "city": "Amsterdam",
                "countryCode": "NL"
              },
              "visitAddress": {
                "code": "AS-1234-43",
                "streetName": "Visitstreet",
                "streetNumber": "2",
                "zipCode": "56273",
                "city": "London",
                "countryCode": "UK"
              },
              "partner": [
                {
                  "code": "M-1234-4321",
                  "name": "ReferredCompany",
                  "type": "REFERRAL",
                  "accessToMerchant": true
                }
              ],
              "createdAt": "2014-04-15T11:29:03+02:00",
              "createdBy": "A-1234-4321",
              "acceptedAt": "2014-12-17T18:38:55+01:00",
              "suspendedAt": null,
              "suspendedBy": null,
              "modifiedAt": null,
              "modifiedBy": null,
              "deletedAt": null,
              "deletedBy": null,
              "reviewedAt": "2017-02-22T10:38:43+01:00",
              "nextReviewDate": "2017-03-22T10:38:43+01:00",
              "_links": [
                {
                  "href": "/merchants/M-1234-4321",
                  "rel": "merchant",
                  "type": "GET"
                }
              ]
            }
          ],
          "_links": [
            {
              "href": "/merchants",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "MerchantInfoResponse200Successful": {
        "summary": "Merchants:Info",
        "value": {
          "code": "M-1234-4321",
          "name": "CompanyName",
          "publicName": "CompanyName",
          "boardingStatus": "ACCEPTED",
          "status": "ACTIVE",
          "payoutStatus": "ENABLED",
          "coc": "12345678",
          "vat": "NL0123456789",
          "companyTypeId": "1",
          "countryCode": "NL",
          "contractLanguage": "nl_NL",
          "contractPackage": "Merchant by Alliance",
          "accountmanager": "account.manager@pay.nl",
          "website": "https://pay.nl/",
          "categories": [
            {
              "code": "CY-2010-6000",
              "name": "Boeken, Tijdschriften en DVD's"
            }
          ],
          "integrations": [
            {
              "code": "PL-2010-3000",
              "name": "Magento"
            }
          ],
          "clearingAccounts": [
            {
              "code": "BA-1234-4321",
              "status": "APPROVED",
              "method": "iban",
              "iban": {
                "iban": "NL91ABNA0417164300",
                "bic": "ABNANL2A",
                "owner": "John Doe"
              }
            }
          ],
          "postalAddress": {
            "code": "AS-1234-43",
            "streetName": "Deliverylane",
            "streetNumber": "70",
            "zipCode": "5678 CD",
            "city": "Amsterdam",
            "countryCode": "NL"
          },
          "visitAddress": {
            "code": "AS-1234-43",
            "streetName": "Visitstreet",
            "streetNumber": "2",
            "zipCode": "56273",
            "city": "London",
            "countryCode": "UK"
          },
          "contactMethods": [
            {
              "code": "CM-0129-97",
              "type": "email",
              "value": "sandbox@pay.nl",
              "description": "",
              "public": true,
              "notifications": true
            },
            {
              "code": "CM-0591-07",
              "type": "phone",
              "value": "+31(0)274802315",
              "description": "",
              "public": true,
              "notifications": false
            }
          ],
          "authenticationTokens": [
            {
              "code": "AT-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "PAY token"
            },
            {
              "code": "AT-4321-1234",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "User token"
            }
          ],
          "trademarks": [
            {
              "code": "TM-1740-2882",
              "type": "public_name",
              "name": "CompanyName",
              "status": "NOT_CHECKED"
            },
            {
              "code": "TM-2894-6222",
              "type": "trademark",
              "name": "Cole, Hickle and Boehm",
              "status": "APPROVED"
            }
          ],
          "licenses": [
            {
              "code": "AL-1234-4321",
              "name": "CustomName",
              "language": "nl_NL",
              "documents": [
                {
                  "code": "D-1234-1234",
                  "type": "identification",
                  "status": "REQUESTED",
                  "description": "Copy ID or passport",
                  "translations": {
                    "description": {
                      "en_GB": "Copy ID or passport",
                      "nl_NL": "Kopie ID of passpoort"
                    }
                  },
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "createdBy": "A-1234-1234",
                  "accceptedAt": "",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "modifiedBy": "A-1234-1234",
                  "deletedAt": null,
                  "deletedBy": null
                },
                {
                  "code": "D-1234-1234",
                  "type": "address",
                  "status": "UPLOADED",
                  "description": "Proof of home address",
                  "translations": {
                    "description": {
                      "en_GB": "Proof of home address",
                      "nl_NL": "Bewijs van thuisadres"
                    }
                  },
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "createdBy": "A-1234-1234",
                  "acceptedAt": "",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "modifiedBy": "A-1234-1234",
                  "deletedAt": null,
                  "deletedBy": null
                }
              ]
            }
          ],
          "services": [
            {
              "code": "SL-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "London Store",
              "status": "TO_BE_CHECKED",
              "category": {
                "code": "CY-2010-4020",
                "name": "Apotheken & Gezondheid"
              },
              "integration": null,
              "website": "https://pay.nl",
              "urls": [
                {
                  "code": "WU-1234-1234",
                  "website": "https://www.pay.nl"
                }
              ]
            },
            {
              "code": "SL-4321-1234",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "Amsterdam Store",
              "status": "ACTIVE",
              "category": {
                "code": "CY-2010-6000",
                "name": "Boeken, Tijdschriften en DVD's"
              },
              "integration": {
                "code": "PL-2010-3000",
                "name": "Magento"
              },
              "website": "https://pay.nl",
              "urls": [
                {
                  "code": "WU-1234-1234",
                  "website": "https://www.pay.nl"
                }
              ]
            }
          ],
          "partner": [
            {
              "code": "M-1234-4321",
              "name": "ReferredCompany",
              "type": "REFERRAL",
              "accessToMerchant": true
            }
          ],
          "documents": [
            {
              "code": "D-1234-1234",
              "type": "coc",
              "status": "REQUESTED",
              "description": "COC extract",
              "translations": {
                "description": {
                  "en_GB": "COC extract",
                  "nl_NL": "Kamer van Koophandel afschrift"
                }
              },
              "createdAt": "",
              "createdBy": "",
              "acceptedAt": "",
              "validUntilDate": "",
              "modifiedAt": "",
              "modifiedBy": "",
              "deletedAt": "",
              "deletedBy": ""
            }
          ],
          "createdAt": "2014-04-15T11:29:03+02:00",
          "createdBy": "A-1234-4321",
          "acceptedAt": "2014-12-17T18:38:55+01:00",
          "suspendedAt": null,
          "suspendedBy": null,
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "reviewedAt": "2017-02-22T10:38:43+01:00",
          "nextReviewDate": "2017-03-22T10:38:43+01:00",
          "_links": [
            {
              "href": "/merchants/M-1234-4321/info",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "MerchantInfoInternalResponse200Successful": {
        "summary": "Merchants:Info (Internal)",
        "value": {
          "code": "M-3421-2120",
          "name": "CompanyName",
          "publicName": "CompanyName",
          "boardingStatus": "ACCEPTED",
          "status": "ACTIVE",
          "payoutStatus": "ENABLED",
          "coc": "12345678",
          "vat": "NL0123456789",
          "companyTypeId": "1",
          "countryCode": "NL",
          "contractLanguage": "nl_NL",
          "contractPackage": "Merchant by Alliance",
          "accountmanager": "account.manager@pay.nl",
          "clearingFrequency": "manual",
          "invoiceFrequency": "month",
          "grade": "D",
          "outPaymentScheme": "new merchant",
          "refundPolicy": "Standard (with rolling reserve)",
          "administration": "Standard merchant",
          "website": "https://pay.nl/",
          "categories": [
            {
              "code": "CY-2010-6000",
              "name": "Boeken, Tijdschriften en DVD's"
            }
          ],
          "integrations": [
            {
              "code": "PL-2010-3000",
              "name": "Magento"
            }
          ],
          "clearingAccounts": [
            {
              "code": "BA-8198-8020",
              "status": "APPROVED",
              "method": "iban",
              "iban": {
                "iban": "NL91ABNA0417164300",
                "bic": "ABNANL2A",
                "owner": "John Doe"
              }
            }
          ],
          "postalAddress": {
            "code": "AS-3103-71",
            "streetName": "Deliverylane",
            "streetNumber": "70",
            "zipCode": "5678 CD",
            "city": "Amsterdam",
            "countryCode": "NL"
          },
          "visitAddress": {
            "code": "AS-3103-71",
            "streetName": "Visitstreet",
            "streetNumber": "2",
            "zipCode": "56273",
            "city": "London",
            "countryCode": "UK"
          },
          "contactMethods": [
            {
              "code": "CM-0129-97",
              "type": "email",
              "value": "sandbox@pay.nl",
              "description": "",
              "public": true,
              "notifications": true
            },
            {
              "code": "CM-0591-07",
              "type": "phone",
              "value": "+31(0)274802315",
              "description": "",
              "public": true,
              "notifications": false
            }
          ],
          "authenticationTokens": [
            {
              "code": "AT-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "PAY token"
            },
            {
              "code": "AT-4321-1234",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "User token"
            }
          ],
          "trademarks": [
            {
              "code": "TM-1740-2882",
              "type": "public_name",
              "name": "CompanyName",
              "status": "NOT_CHECKED"
            },
            {
              "code": "TM-2894-6222",
              "type": "trademark",
              "name": "Cole, Hickle and Boehm",
              "status": "APPROVED"
            }
          ],
          "licenses": [
            {
              "code": "AL-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "CustomName",
              "language": "nl_NL",
              "accountCode": "A-1234-1234",
              "firstName": "Henk",
              "lastName": "Denk",
              "email": "henkdenk@test.nl",
              "phone": "",
              "visitAddress": {
                "code": "AS-1234-1234",
                "streetName": "streetName",
                "streetNumber": "404",
                "zipCode": "1234AA",
                "city": "Notfound",
                "countryCode": "NL"
              },
              "complianceData": {
                "dateOfBirth": "1980-01-01",
                "nationality": "NL",
                "authorizedToSign": "shared",
                "pep": true,
                "pepDescription": "Active as mayor in amsterdam",
                "ubo": "direct",
                "uboPercentage": 50,
                "relationshipDescription": "50% shareholder of the company",
                "idDocumentNumber": "12345789"
              },
              "documents": [
                {
                  "code": "D-1234-1234",
                  "type": "identification",
                  "status": "REQUESTED",
                  "description": "Copy ID or passport",
                  "translations": {
                    "description": {
                      "en_GB": "Copy ID or passport",
                      "nl_NL": "Kopie ID of passpoort"
                    }
                  },
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "createdBy": "A-1234-1234",
                  "accceptedAt": "",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "modifiedBy": "A-1234-1234",
                  "deletedAt": null,
                  "deletedBy": null
                },
                {
                  "code": "D-1234-1234",
                  "type": "address",
                  "status": "EXPIRED",
                  "description": "Proof of home address",
                  "translations": {
                    "description": {
                      "en_GB": "Proof of home address",
                      "nl_NL": "Bewijs van thuisadres"
                    }
                  },
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "createdBy": "A-1234-1234",
                  "acceptedAt": "",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "modifiedBy": "A-1234-1234",
                  "deletedAt": null,
                  "deletedBy": null
                }
              ],
              "notificationGroup": {
                "technical": true,
                "operations": false,
                "financial": true
              },
              "platform": {
                "loginAccount": true,
                "loginTpa": false,
                "authorisation": "specified",
                "authorisationGroups": [
                  "AG-1234-1234"
                ]
              },
              "roles": {
                "primaryContactPerson": true,
                "internalAdministrator": true
              }
            }
          ],
          "services": [
            {
              "code": "SL-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "London Store",
              "status": "TO_BE_CHECKED",
              "category": {
                "code": "CY-2010-4020",
                "name": "Apotheken & Gezondheid"
              },
              "integration": null,
              "website": "https://pay.nl",
              "urls": [
                {
                  "code": "WU-1234-1234",
                  "website": "https://www.pay.nl"
                }
              ]
            },
            {
              "code": "SL-4321-1234",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "Amsterdam Store",
              "status": "ACTIVE",
              "category": {
                "code": "CY-2010-6000",
                "name": "Boeken, Tijdschriften en DVD's"
              },
              "integration": {
                "code": "PL-2010-3000",
                "name": "Magento"
              },
              "website": "https://pay.nl",
              "urls": [
                {
                  "code": "WU-1234-1234",
                  "website": "https://www.pay.nl"
                }
              ]
            }
          ],
          "partner": [
            {
              "code": "M-1234-4321",
              "name": "ReferredCompany",
              "type": "REFERRAL",
              "accessToMerchant": true
            }
          ],
          "documents": [
            {
              "code": "D-1234-1234",
              "type": "coc",
              "status": "UPLOADED",
              "description": "COC extract",
              "translations": {
                "description": {
                  "en_GB": "COC extract",
                  "nl_NL": "Kamer van Koophandel afschrift"
                }
              },
              "createdAt": "2014-04-15T11:29:03+02:00",
              "createdBy": "A-1234-4321",
              "acceptedAt": "",
              "validUntilDate": "",
              "modifiedAt": "",
              "modifiedBy": "",
              "deletedAt": "",
              "deletedBy": ""
            }
          ],
          "createdAt": "2014-04-15T11:29:03+02:00",
          "createdBy": "A-1234-4321",
          "acceptedAt": "2014-12-17T18:38:55+01:00",
          "suspendedAt": null,
          "suspendedBy": null,
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "reviewedAt": "2017-02-22T10:38:43+01:00",
          "nextReviewDate": "2017-03-22T10:38:43+01:00",
          "_links": [
            {
              "href": "/merchants/internal/M-1234-4321/info",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "MerchantCreateResponse200Successful": {
        "summary": "Basic Merchant",
        "value": {
          "merchant": {
            "code": "M-1234-4321",
            "status": "INACTIVE",
            "name": "CompanyName",
            "publicName": "CompanyName",
            "clearingAccounts": [
              {
                "code": "BA-1234-4321",
                "status": "NOT_CHECKED",
                "method": "iban",
                "iban": {
                  "iban": "NL91ABNA0417164300",
                  "bic": "INGBNL2A",
                  "owner": "John Doe"
                }
              }
            ],
            "postalAddress": {
              "code": "AS-1234-43",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "visitAddress": {
              "code": "AS-1234-43",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "contactMethods": null,
            "authenticationTokens": [
              {
                "code": "AT-1234-4321",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "PAY token"
              },
              {
                "code": "AT-4321-1234",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "User token"
              }
            ],
            "trademarks": [
              {
                "code": "TM-1234-1234",
                "type": "name",
                "name": "CompanyName",
                "status": "NOT_CHECKED"
              }
            ],
            "licenses": [
              {
                "code": "AL-1234-4321",
                "name": "AL-1234-4321",
                "language": null
              }
            ],
            "service": {
              "code": "SL-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "companyName",
              "description": "Sells children's clothing",
              "categoryCode": "CY-1234-4321",
              "integrationCode": "PV-1234-4321",
              "publication": "through cashboard"
            },
            "createdAt": "2014-04-15T11:29:03+02:00",
            "createdBy": "A-1234-4321",
            "modifiedAt": null,
            "modifiedBy": null,
            "deletedAt": null,
            "deletedBy": null
          },
          "_links": [
            {
              "href": "/merchants",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "MerchantUnsuspendResponse200Successful": {
        "summary": "Merchant",
        "value": {
          "merchant": {
            "code": "M-1234-4321",
            "status": "INACTIVE",
            "payoutStatus": "ENABLED",
            "name": "CompanyName",
            "publicName": "publicName",
            "boardingStatus": "ACCEPTED",
            "clearingAccounts": [
              {
                "code": "BA-1234-4321",
                "status": "NOT_CHECKED",
                "method": "iban",
                "iban": {
                  "iban": "NL91ABNA0417164300",
                  "bic": "INGBNL2A",
                  "owner": "John Doe"
                }
              }
            ],
            "postalAddress": {
              "code": "AS-1234-43",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "visitAddress": {
              "code": "AS-1234-43",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "contactMethods": null,
            "authenticationTokens": [
              {
                "code": "AT-1234-4321",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "PAY token"
              },
              {
                "code": "AT-4321-1234",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "User token"
              }
            ],
            "trademarks": [
              {
                "code": "TM-1234-1234",
                "type": "name",
                "name": "CompanyName",
                "status": "NOT_CHECKED"
              }
            ],
            "licenses": [
              {
                "code": "AL-1234-4321",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "AL-1234-4321",
                "language": null
              }
            ],
            "service": {
              "code": "SL-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "companyName",
              "description": "Sells children's clothing",
              "categoryCode": "CY-1234-4321",
              "integrationCode": "PV-1234-4321",
              "publication": "through cashboard"
            },
            "createdAt": "2014-04-15T11:29:03+02:00",
            "createdBy": "A-1234-4321",
            "modifiedAt": null,
            "modifiedBy": null,
            "deletedAt": null,
            "deletedBy": null
          },
          "_links": [
            {
              "href": "/merchants",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "MerchantsChangelistResponse200Successful": {
        "summary": "List of all changed merchants",
        "value": {
          "total": 44802,
          "count": 1,
          "merchants": [
            {
              "code": "M-1234-4321",
              "name": "CompanyName",
              "publicName": "CompanyName",
              "boardingStatus": "ACCEPTED",
              "status": "ACTIVE",
              "payoutStatus": "ENABLED",
              "coc": "12345678",
              "vat": "NL0123456789",
              "companyTypeId": "1",
              "countryCode": "NL",
              "contractLanguage": "nl_NL",
              "contractPackage": "Merchant by Alliance",
              "website": "https://pay.nl/",
              "postalAddress": {
                "code": "AS-1234-43",
                "streetName": "Deliverylane",
                "streetNumber": "70",
                "zipCode": "5678 CD",
                "city": "Amsterdam",
                "countryCode": "NL"
              },
              "visitAddress": {
                "code": "AS-1234-43",
                "streetName": "Visitstreet",
                "streetNumber": "2",
                "zipCode": "56273",
                "city": "London",
                "countryCode": "UK"
              },
              "partner": [
                {
                  "code": "M-1234-4321",
                  "name": "ReferredCompany",
                  "type": "REFERRAL",
                  "accessToMerchant": true
                }
              ],
              "createdAt": "2014-04-15T11:29:03+02:00",
              "createdBy": "A-1234-4321",
              "acceptedAt": "2014-12-17T18:38:55+01:00",
              "suspendedAt": null,
              "suspendedBy": null,
              "modifiedAt": "2014-12-21T15:21:36+01:00",
              "modifiedBy": "A-1234-4321",
              "deletedAt": null,
              "deletedBy": null,
              "reviewedAt": "2017-02-22T10:38:43+01:00",
              "nextReviewDate": "2017-03-22T10:38:43+01:00",
              "_links": [
                {
                  "href": "/merchants/M-1234-4321",
                  "rel": "merchant",
                  "type": "GET"
                }
              ]
            }
          ],
          "_links": {
            "self": {
              "href": "/merchants/changelist?limit=1&modifiedAt[gte]=2014-12-15",
              "rel": "self",
              "type": "GET"
            },
            "first": {
              "href": "/merchants/changelist?limit=1&page=1&modifiedAt[gte]=2014-12-15"
            },
            "previous": {
              "href": "/merchants/changelist?limit=1&page=1&modifiedAt[gte]=2014-12-15"
            },
            "next": {
              "href": "/merchants/changelist?limit=1&page=3&modifiedAt[gte]=2014-12-15"
            },
            "last": {
              "href": "/merchants/changelist?limit=1&page=44802"
            }
          }
        }
      },
      "ExtendedMerchantCreateResponse200Successful": {
        "summary": "Extended Merchant",
        "value": {
          "merchant": {
            "code": "M-1234-4321",
            "status": "INACTIVE",
            "name": "CompanyName",
            "publicName": "publicName",
            "clearingAccounts": [
              {
                "code": "BA-1234-4321",
                "status": "NOT_CHECKED",
                "method": "iban",
                "iban": {
                  "iban": "NL91ABNA0417164300",
                  "bic": "ABNANL2A",
                  "owner": "John Doe"
                }
              }
            ],
            "postalAddress": {
              "code": "AS-1234-43",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "visitAddress": {
              "code": "AS-1234-43",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "contactMethods": null,
            "authenticationTokens": [
              {
                "code": "AT-1234-4321",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "PAY token"
              },
              {
                "code": "AT-4321-1234",
                "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
                "name": "User token"
              }
            ],
            "trademarks": [
              {
                "code": "TM-1740-2882",
                "type": "name",
                "name": "CompanyName",
                "status": "NOT_CHECKED"
              }
            ],
            "licenses": [
              {
                "code": "AL-1234-4321",
                "name": "AL-1234-4321",
                "language": null
              }
            ],
            "service": {
              "code": "SL-1234-4321",
              "secret": "2jQ5hyjpBG9duCoZQcdD1F8Tb1HxL0oAArKfbCAu",
              "name": "companyName",
              "description": "Sells children's clothing",
              "categoryCode": "CY-1234-4321",
              "integrationCode": "PV-1234-4321",
              "publication": "through cashboard"
            },
            "createdAt": "2014-04-15T11:29:03+02:00",
            "createdBy": "A-1234-4321",
            "modifiedAt": null,
            "modifiedBy": null,
            "deletedAt": null,
            "deletedBy": null
          },
          "_links": [
            {
              "href": "/merchants",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "MerchantBoardingInternalResponse200Successful": {
        "summary": "Boarding:Merchants",
        "value": {
          "code": "M-1234-4321",
          "name": "CompanyName",
          "publicName": "CompanyName",
          "boardingStatus": "ACCEPTED",
          "payoutStatus": "ENABLED",
          "coc": "12345678",
          "vat": "NL807960147B01",
          "companyTypeId": "1",
          "countryCode": "NL",
          "contractLanguage": "nl",
          "website": "https://www.my-website.com",
          "visitAddress": {
            "code": "AS-1234-4321",
            "streetName": "Visitlane",
            "streetNumber": "13",
            "zipCode": "5678CD",
            "city": "Amsterdam",
            "countryCode": "NL"
          },
          "licenses": [
            {
              "code": "AL-1234-4321",
              "accountCode": "A-1234-4321",
              "email": "sandbox@pay.nl",
              "firstName": "John",
              "lastName": "Doe",
              "language": "nl_NL",
              "complianceData": {
                "dateOfBirth": "1999-12-12",
                "nationality": "NL",
                "authorizedToSign": "shared",
                "ubo": "direct",
                "uboPercentage": "25",
                "relationshipDescription": "John Doe of test company"
              },
              "visitAddress": {
                "code": "AS-1234-4321",
                "streetName": "Visitlane",
                "streetNumber": "13",
                "zipCode": "5678CD",
                "city": "Amsterdam",
                "countryCode": "NL"
              },
              "documents": [
                {
                  "code": "D-1234-1234",
                  "type": "identification",
                  "status": "REQUESTED",
                  "description": "Copy ID or passport",
                  "translations": {
                    "description": {
                      "en_GB": "Copy ID or passport",
                      "nl_NL": "Kopie ID of passpoort"
                    }
                  },
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "createdBy": "A-1234-1234",
                  "accceptedAt": "",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "modifiedBy": "A-1234-1234",
                  "deletedAt": null,
                  "deletedBy": null
                },
                {
                  "code": "D-1234-1234",
                  "type": "address",
                  "status": "EXPIRED",
                  "description": "Proof of home address",
                  "translations": {
                    "description": {
                      "en_GB": "Proof of home address",
                      "nl_NL": "Bewijs van thuisadres"
                    }
                  },
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "createdBy": "A-1234-1234",
                  "acceptedAt": "",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "modifiedBy": "A-1234-1234",
                  "deletedAt": null,
                  "deletedBy": null
                }
              ]
            }
          ],
          "clearingAccounts": [
            {
              "code": "BA-8198-8020",
              "status": "APPROVED",
              "method": "iban",
              "iban": {
                "iban": "NL91ABNA0417164300",
                "bic": "ABNANL2A",
                "owner": "John Doe"
              }
            }
          ],
          "services": [
            {
              "code": "SL-1234-4321",
              "name": "London Store",
              "status": "TO_BE_CHECKED",
              "mainActivities": "clothing sales",
              "category": {
                "code": "CY-2010-4020",
                "name": "Apotheken & Gezondheid"
              }
            },
            {
              "code": "SL-4321-1234",
              "name": "Amsterdam Store",
              "status": "ACTIVE",
              "mainActivities": "clothing sales",
              "category": {
                "code": "CY-2010-6000",
                "name": "Boeken, Tijdschriften en DVD's"
              }
            }
          ],
          "documents": [
            {
              "code": "D-1234-1234",
              "type": "coc",
              "status": "UPLOADED",
              "description": "COC extract",
              "translations": {
                "description": {
                  "en_GB": "COC extract",
                  "nl_NL": "Kamer van Koophandel afschrift"
                }
              },
              "createdAt": "2014-04-15T11:29:03+02:00",
              "createdBy": "A-1234-4321",
              "acceptedAt": "",
              "validUntilDate": "",
              "modifiedAt": "",
              "modifiedBy": "",
              "deletedAt": "",
              "deletedBy": ""
            }
          ],
          "createdAt": "2014-04-15T11:29:03+02:00",
          "createdBy": "A-1234-4321",
          "acceptedAt": "2014-12-17T18:38:55+01:00",
          "suspendedAt": null,
          "suspendedBy": null,
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "reviewedAt": "2017-02-22T10:38:43+01:00",
          "nextReviewDate": "2017-03-22T10:38:43+01:00",
          "_links": [
            {
              "href": "/merchants/internal/M-1234-4321/info",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "MerchantCreate400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "merchant.name: Is empty\nmerchant.persons[0].email: Is empty",
          "violations": [
            {
              "propertyPath": "merchant.name",
              "message": "Is empty",
              "code": "PAY-2828"
            },
            {
              "propertyPath": "merchant.persons[0].email",
              "message": "Is empty",
              "code": "PAY-2828"
            }
          ]
        }
      },
      "MerchantUpdateResponse400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "errors": {
            "merchant": {
              "name": {
                "message": "is_empty",
                "code": "PAY-2828"
              },
              "contractLanguage": {
                "message": "is_empty",
                "code": "PAY-2828"
              }
            }
          },
          "_links": [
            {
              "href": "/merchants",
              "rel": "self",
              "type": "PATCH"
            }
          ]
        }
      },
      "MerchantCreate422UnprocessableEntity": {
        "summary": "User already registered",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "User is already registered",
          "violations": [
            {
              "propertyPath": null,
              "message": "User is already registered",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "MerchantUpdateResponse422UnprocessableEntityExample": {
        "summary": "Merchant does not exist",
        "value": {
          "errors": {
            "general": {
              "code": "PAY-3000",
              "message": "The merchant does not exist"
            }
          },
          "_links": [
            {
              "href": "/merchants",
              "rel": "self",
              "type": "PATCH"
            }
          ]
        }
      },
      "MerchantChangelist422UnprocessableEntity": {
        "summary": "Invalid page number",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "The lowest available page is 1",
          "violations": [
            {
              "propertyPath": null,
              "message": "The lowest available page is 1",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "MerchantCreatePayload": {
        "summary": "Basic Merchant",
        "value": {
          "partner": {
            "referralProfileCode": "CP-1030-7060"
          },
          "merchant": {
            "name": "CompanyName",
            "publicName": "CompanyName",
            "coc": "12345678",
            "vat": "NL807960147B01",
            "companyTypeId": "1",
            "countryCode": "NL",
            "contractLanguage": "nl_NL",
            "visitAddress": {
              "streetName": "Visitlane",
              "streetNumber": "13",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "authenticationTokens": [
              {
                "description": "2nd token",
                "authorisation": "specified",
                "authorisationGroups": [
                  "AG-1234-4321"
                ],
                "ipFilter": {
                  "type": "DENY_FROM_ALL",
                  "exceptionList": [
                    "192.168.10.23",
                    "192.168.10.24"
                  ]
                }
              },
              {
                "description": "Supreme token",
                "authorisation": "all",
                "authorisationGroups": []
              }
            ],
            "persons": [
              {
                "gender": "M",
                "firstName": "John",
                "lastName": "Doe",
                "email": "sandbox@pay.nl",
                "language": "nl_NL",
                "phone": "0031612345678",
                "newsletter": true,
                "notificationGroup": {
                  "technical": true,
                  "financial": true,
                  "operations": true
                },
                "platform": {
                  "loginAccount": true,
                  "loginTpa": true,
                  "authorisation": "all",
                  "authorisationGroups": []
                }
              }
            ],
            "service": {
              "name": "companyName",
              "description": "Sells children's clothing",
              "categoryCode": "CY-1234-4321",
              "integrationCode": "PV-1234-4321",
              "publication": "through cashboard"
            }
          }
        }
      },
      "ExtendedMerchantCreatePayload": {
        "summary": "Extended Merchant",
        "value": {
          "partner": {
            "connectionType": "ALLIANCE",
            "referralProfileCode": "CP-1030-7060"
          },
          "merchant": {
            "name": "CompanyName",
            "publicName": "CompanyName",
            "coc": "12345678",
            "vat": "NL807960147B01",
            "companyTypeId": "1",
            "countryCode": "NL",
            "contractLanguage": "nl_NL",
            "clearingAccounts": [
              {
                "method": "iban",
                "iban": {
                  "iban": "NL64INGB1782371249",
                  "bic": "INGBNL2A",
                  "owner": "John Doe"
                }
              }
            ],
            "visitAddress": {
              "streetName": "Visitlane",
              "streetNumber": "13",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "authenticationTokens": [
              {
                "description": "Default token",
                "authorisation": "specified",
                "authorisationGroups": [
                  "AG-1234-4321"
                ],
                "ipFilter": {
                  "type": "DENY_FROM_ALL",
                  "exceptionList": [
                    "192.168.10.23",
                    "192.168.10.24"
                  ]
                }
              },
              {
                "description": "Supreme token",
                "authorisation": "all",
                "authorisationGroups": []
              }
            ],
            "persons": [
              {
                "gender": "M",
                "firstName": "John",
                "lastName": "Doe",
                "email": "johndoe@pay.nl",
                "language": "nl_NL",
                "phone": "0031612345678",
                "newsletter": true,
                "visitAddress": {
                  "streetName": "Visitlane",
                  "streetNumber": "13",
                  "zipCode": "5678CD",
                  "city": "Amsterdam",
                  "countryCode": "NL"
                },
                "notificationGroup": {
                  "technical": true,
                  "financial": true,
                  "operations": true
                },
                "platform": {
                  "loginAccount": true,
                  "authorisation": "all",
                  "authorisationGroups": []
                },
                "complianceData": {
                  "dateOfBirth": "1980-01-01",
                  "nationality": "NL",
                  "authorizedtoSign": "shared",
                  "pep": true,
                  "pepDescription": "Active as mayor in amsterdam",
                  "ubo": "direct",
                  "uboPercentage": 50,
                  "relationshipDescription": "50% shareholder of the company"
                },
                "roles": {
                  "primaryContactPerson": true,
                  "internalAdministrator": true
                }
              },
              {
                "gender": "F",
                "firstName": "Jane",
                "lastName": "Doe",
                "email": "janedoe@pay.nl",
                "language": "nl_NL",
                "phone": "0031612345679",
                "newsletter": true,
                "notificationGroup": {
                  "technical": true,
                  "financial": true,
                  "operations": true
                },
                "platform": {
                  "loginAccount": true,
                  "loginTpa": true,
                  "authorisation": "specified",
                  "authorisationGroups": [
                    "AG-1234-4321"
                  ]
                },
                "complianceData": {
                  "dateOfBirth": "1980-01-01",
                  "nationality": "NL",
                  "authorizedtoSign": "shared",
                  "pep": true,
                  "pepDescription": "Married with the mayor of Amsterdam",
                  "ubo": "direct",
                  "uboPercentage": 50,
                  "relationshipDescription": "50% shareholder of the company"
                }
              }
            ],
            "service": {
              "name": "companyName",
              "description": "Sells children's clothing",
              "categoryCode": "CY-1234-4321",
              "integrationCode": "PV-1234-4321",
              "publication": "through cashboard"
            }
          }
        }
      },
      "MerchantUpdateSuspendAMerchantRequestExample": {
        "summary": "Suspend a merchant",
        "value": {
          "merchant": {
            "suspendedAt": "2023-10-30T14:00:00+02:00"
          }
        }
      },
      "MerchantUpdateUnsuspendAMerchantRequestExample": {
        "summary": "Unsuspend a merchant",
        "value": {
          "merchant": {
            "suspendedAt": null
          }
        }
      },
      "MerchantUpdateUpdateCompanyNameRequestExample": {
        "summary": "Update merchant name",
        "value": {
          "merchant": {
            "name": "CompanyName"
          }
        }
      },
      "MerchantReviewRequestPayload": {
        "summary": "Request a review",
        "value": {
          "merchant": {
            "reviewRequest": {
              "reason": "Possible fraud detected",
              "indicator": "RISK",
              "settlement": "OFF"
            }
          }
        }
      },
      "MerchantUpdateFullRequestExample": {
        "summary": "Full merchant update",
        "value": {
          "merchant": {
            "name": "CompanyName",
            "publicName": "publicName",
            "coc": "12345678",
            "vat": "NL807960147B01",
            "companyTypeId": "1",
            "contractLanguage": "nl_NL",
            "visitAddress": {
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "postalAddress": {
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "zipCode": "5678 CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            }
          }
        }
      },
      "PaymentMethodGroupsResponse200Successful": {
        "summary": "Get PaymentMethodGroups",
        "value": {
          "total": 1,
          "paymentMethodGroups": [
            {
              "id": 1,
              "name": "Internetbankieren",
              "publicName": "InternetBankieren",
              "sequence": 10,
              "translations": {
                "name": {
                  "en_GB": "Internetbankieren",
                  "it_IT": "Internetbankieren",
                  "nl_NL": "Internetbankieren"
                },
                "publicName": {
                  "en_GB": "Internetbankieren",
                  "it_IT": "Internetbankieren",
                  "nl_NL": "Internetbankieren"
                }
              },
              "image": "/payment_method_groups/1.svg",
              "requiredFields": [
                {
                  "fieldName": "customer.firstName",
                  "mandatory": "required"
                }
              ],
              "createdAt": "2007-10-02T12:11:20+02:00",
              "modifiedAt": "2021-08-10T17:24:05+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/paymentmethodgroups",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "PaymentMethodsResponse200Successful": {
        "summary": "Get PaymentMethods",
        "value": {
          "total": 1,
          "paymentMethods": [
            {
              "id": 1,
              "name": "iDEAL",
              "description": "iDEAL",
              "sequence": 1,
              "public": true,
              "status": "active",
              "image": "/payment_methods/1.svg",
              "translations": {
                "name": {
                  "nl_NL": "iDEAL"
                },
                "description": {
                  "nl_NL": "Met iDEAL kunt  u met een Nederlandse bankrekening vertrouwd, veilig en gemakkelijk betalen via internetbankieren van uw eigen bank."
                }
              },
              "paymentProfiles": [
                {
                  "id": 10,
                  "name": "iDEAL",
                  "publicName": "iDEAL",
                  "public": true,
                  "selectable": false,
                  "paymentMethodGroup": "ONLINEBANK",
                  "paymentType": "SALE",
                  "translations": {
                    "name": {
                      "nl_NL": "iDEAL"
                    },
                    "publicName": {
                      "nl_NL": "iDEAL"
                    }
                  },
                  "issuers": [
                    {
                      "id": "1",
                      "code": "PB-9060-1000",
                      "name": "ABN Amro"
                    }
                  ],
                  "categories": [
                    {
                      "code": "CY-####-####",
                      "name": "Digitale diensten gambling (kansspelen)"
                    }
                  ],
                  "createdAt": "2007-10-02T12:11:20+02:00",
                  "modifiedAt": "2021-08-10T17:24:05+02:00",
                  "deletedAt": null
                }
              ],
              "createdAt": "2007-10-02T12:11:20+02:00",
              "modifiedAt": "2021-08-10T17:24:05+02:00",
              "deletedAt": null
            }
          ],
          "_links": [
            {
              "href": "/paymentmethods",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "PayoutBasisRequest": {
        "summary": "Basic Payout example",
        "value": {
          "transaction": {
            "type": "CIT",
            "serviceId": "SL-####-####",
            "amount": {
              "value": 10
            }
          },
          "payment": {
            "method": "iban",
            "iban": {
              "number": "XXXXXXXXXXXXXXXXX",
              "bic": "ABNANL2A",
              "holder": "John Doe"
            }
          }
        }
      },
      "PayoutClearingBasisRequest": {
        "summary": "Basic Payout clearing example",
        "value": {
          "transaction": {
            "serviceId": "SL-####-####",
            "amount": {
              "value": 10
            }
          }
        }
      },
      "PayoutClearingExtendedRequest": {
        "summary": "Extended Payout clearing example",
        "value": {
          "transaction": {
            "serviceId": "SL-####-####",
            "description": "Example description",
            "reference": "12345XXY0123",
            "exchangeUrl": "https://demo.pay.nl/exchange.php",
            "amount": {
              "value": 10,
              "currency": "EUR"
            }
          },
          "stats": {
            "info": "Campagne 99",
            "tool": "Google",
            "extra1": "Customer 6985615",
            "extra2": "Invoice 21.3695",
            "extra3": "Shop Amsterdam"
          }
        }
      },
      "PayoutExtendedRequest": {
        "summary": "Extended Payout example",
        "value": {
          "transaction": {
            "type": "MIT",
            "serviceId": "SL-####-####",
            "description": "Example description",
            "reference": "12345XXY0123",
            "exchangeUrl": "https://demo.pay.nl/exchange.php",
            "amount": {
              "value": 10,
              "currency": "EUR"
            }
          },
          "payment": {
            "method": "iban",
            "iban": {
              "number": "XXXXXXXXXXXXXXXXX",
              "bic": "ABNANL2A",
              "holder": "John Doe"
            }
          },
          "customer": {
            "firstName": "John",
            "lastName": "Doe",
            "phone": "0031612345678",
            "birthDate": "1999-02-15",
            "gender": "m",
            "email": "sandbox@pay.nl",
            "ipAddress": "213.126.82.230",
            "trust": 5,
            "reference": "NL87654321"
          },
          "stats": {
            "info": "Campagne 99",
            "tool": "Google",
            "extra1": "Customer 6985615",
            "extra2": "Invoice 21.3695",
            "extra3": "Shop Amsterdam"
          }
        }
      },
      "PayoutResponse201Successful": {
        "summary": "Payout created",
        "value": {
          "transaction": {
            "id": "EX-####-####-####",
            "orderId": "#########X#####",
            "serviceId": "SL-####-####",
            "description": "Example description",
            "reference": "12345XXY0123",
            "amount": {
              "value": 10,
              "currency": "EUR"
            },
            "created": "2016-06-04T08:15:00+01:00",
            "modified": "2016-06-04T08:15:00+01:00"
          },
          "_links": [
            {
              "href": "/payout",
              "rel": "self",
              "type": "POST"
            },
            {
              "href": "/transactions/EX-####-####-####",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "PayoutResponse400BadRequest": {
        "summary": "Bad request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "transaction.serviceId: Unable to find service location\ntransaction.amount.value: You have entered an invalid amount",
          "violations": [
            {
              "propertyPath": "transaction.serviceId",
              "message": "Unable to find service location",
              "code": "PAY-2852"
            },
            {
              "propertyPath": "transaction.amount.value",
              "message": "You have entered an invalid amount",
              "code": "PAY-2803"
            }
          ]
        }
      },
      "PayoutPayoutLimitReachedResponse": {
        "summary": "Unprocessable entity",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "limit of € 1000,00 in 13 weeks reached for IBAN XXXXXXXXXXXXXXXXX",
          "violations": [
            {
              "propertyPath": null,
              "message": "limit of € 1000,00 in 13 weeks reached for IBAN XXXXXXXXXXXXXXXXX",
              "code": "PAY-3031"
            }
          ]
        }
      },
      "PayoutClearingRevenueGroupNotLinkedToBankAccountResponse": {
        "summary": "Unprocessable entity",
        "value": {
          "type": "https:\\/\\/developer.pay.nl\\/docs\\/error-codes",
          "title": "An error occurred",
          "detail": "Revenue group is not linked to a bank account.",
          "violations": [
            {
              "propertyPath": null,
              "message": "Revenue group is not linked to a bank account.",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "PayoutNoRouteResponse": {
        "summary": "Payout no route available",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "No available route",
          "violations": [
            {
              "propertyPath": null,
              "message": "No available route",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "PersonLicenseResponse200Successful": {
        "summary": "Get license",
        "value": {
          "code": "AL-1234-1234",
          "name": null,
          "language": "nl_NL",
          "complianceData": {
            "authorizedToSign": "shared",
            "pep": false,
            "pepDescription": "The person is active as an alderman in the municipality where he lives.",
            "ubo": "direct",
            "uboPercentage": 15,
            "relationshipDescription": null
          },
          "notificationGroup": {
            "technical": false,
            "financial": true,
            "operations": false
          },
          "platform": {
            "loginAccount": true,
            "loginTpa": false,
            "authorisation": "all",
            "authorisationGroups": []
          },
          "merchant": {
            "code": "M-1234-1234",
            "name": "Mijn B.V.",
            "status": "ACTIVE"
          },
          "createdAt": "2023-06-19T11:23:17+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/licenses/AL-1234-1234",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "PersonLicensesResponse200Successful": {
        "summary": "Browse licenses",
        "value": {
          "total": 1,
          "licenses": [
            {
              "code": "AL-1234-1234",
              "name": null,
              "language": "nl_NL",
              "complianceData": {
                "authorizedToSign": "shared",
                "pep": false,
                "pepDescription": "The person is active as an alderman in the municipality where he lives.",
                "ubo": "direct",
                "uboPercentage": 15,
                "relationshipDescription": null
              },
              "notificationGroup": {
                "technical": false,
                "financial": true,
                "operations": false
              },
              "platform": {
                "loginAccount": true,
                "loginTpa": false,
                "authorisation": "all",
                "authorisationGroups": []
              },
              "merchant": {
                "code": "M-1234-1234",
                "name": "Mijn B.V.",
                "status": "ACTIVE"
              },
              "createdAt": "2023-06-19T11:23:17+02:00",
              "createdBy": "AT-1234-1234",
              "modifiedAt": null,
              "modifiedBy": null,
              "deletedAt": null,
              "deletedBy": null,
              "_links": [
                {
                  "href": "/licenses/AL-1234-1234",
                  "rel": "self",
                  "type": "GET"
                }
              ]
            }
          ]
        }
      },
      "AddAnUserAccountPayload": {
        "summary": "Add an user account",
        "value": {
          "merchantCode": "M-1234-1234",
          "person": {
            "name": "John Doe",
            "gender": "M",
            "firstName": "John",
            "lastName": "Doe",
            "email": "johndoe@pay.nl",
            "language": "nl_NL",
            "phone": "0031612345678",
            "newsletter": false,
            "visitAddress": {
              "streetName": "Visitlane",
              "streetNumber": "13",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "notificationGroup": {
              "technical": false,
              "financial": false,
              "operations": false
            },
            "platform": {
              "loginAccount": true,
              "loginTpa": false,
              "authorisation": "all",
              "authorisationGroups": []
            }
          }
        }
      },
      "AddAnUboAuthorizedToSignUserAccountPayload": {
        "summary": "Add an ubo/authorized to sign user user account",
        "value": {
          "merchantCode": "M-1234-1234",
          "person": {
            "name": "John Doe",
            "gender": "M",
            "firstName": "John",
            "lastName": "Doe",
            "email": "johndoe@pay.nl",
            "language": "nl_NL",
            "phone": "0031612345678",
            "newsletter": false,
            "complianceData": {
              "dateOfBirth": "1980-01-01",
              "nationality": "NL",
              "authorizedtoSign": "shared",
              "pep": true,
              "pepDescription": "Active as mayor in amsterdam",
              "ubo": "direct",
              "uboPercentage": 50,
              "relationshipDescription": "50% shareholder of the company"
            },
            "visitAddress": {
              "streetName": "Visitlane",
              "streetNumber": "13",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "regionCode": "ZH",
              "countryCode": "NL"
            },
            "notificationGroup": {
              "technical": false,
              "financial": false,
              "operations": false
            },
            "platform": {
              "loginAccount": true,
              "loginTpa": false,
              "authorisation": "all",
              "authorisationGroups": []
            }
          }
        }
      },
      "UpdateAUserAccountPayload": {
        "summary": "Update a user account",
        "value": {
          "name": "John Doe",
          "notificationGroup": {
            "technical": true,
            "financial": true
          },
          "platform": {
            "loginTpa": true
          }
        }
      },
      "UpdateAUboAuthorizedUserAccountPayload": {
        "summary": "Update a ubo/authorized to sign user",
        "value": {
          "name": "John Doe",
          "complianceData": {
            "dateOfBirth": "1982-01-01",
            "nationality": "NL",
            "authorizedToSign": "alone",
            "pep": true,
            "pepDescription": "The person is active as an alderman in the municipality where he lives.",
            "ubo": "direct",
            "uboPercentage": 33,
            "relationshipDescription": ""
          }
        }
      },
      "PersonLicensePostPatchResponse200Successful": {
        "summary": "Get license",
        "value": {
          "code": "AL-1234-1234",
          "name": null,
          "language": "nl_NL",
          "notificationGroup": {
            "technical": false,
            "financial": true,
            "operations": false
          },
          "platform": {
            "loginAccount": true,
            "loginTpa": false,
            "authorisation": "all",
            "authorisationGroups": []
          },
          "merchant": {
            "code": "M-1234-1234",
            "name": "Mijn B.V.",
            "status": "ACTIVE"
          },
          "createdAt": "2023-06-19T11:23:17+02:00",
          "createdBy": "AT-1234-1234",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/licenses/AL-1234-1234",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "LicensesCreate400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "person.firstName: Is empty",
          "violations": [
            {
              "propertyPath": "person.firstName",
              "message": "Is empty",
              "code": "PAY-2828"
            }
          ]
        }
      },
      "LicensesCreate422Unprocessable": {
        "summary": "Unprocessable",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Account link already exists",
          "violations": [
            {
              "propertyPath": null,
              "message": "Account link already exists",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "LicensesUpdate400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "license: {}",
          "violations": [
            {
              "propertyPath": "license",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "LicensesDelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "license: {}",
          "violations": [
            {
              "propertyPath": "license",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "LicensesUndelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "license: {}",
          "violations": [
            {
              "propertyPath": "license",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "LicensesUndelete422Unprocessable": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Unable to complete request",
          "violations": [
            {
              "propertyPath": null,
              "message": "Unable to complete request",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "ServiceConfigResponse200Successful": {
        "summary": "Get service configuration",
        "value": {
          "code": "SL-3458-8032",
          "secret": "ffd6b59b060a6b556027fdd2e82a1e27c0ee28d1",
          "testMode": false,
          "name": "Verkooplocatie A",
          "translations": {
            "name": {
              "nl_NL": "Betaallink & test"
            }
          },
          "status": "ACTIVE",
          "merchant": {
            "code": "M-2964-5301",
            "name": "CompanyName",
            "status": "ACTIVE"
          },
          "category": {
            "code": "CY-2010-1020",
            "name": "Baby & kids"
          },
          "mcc": 5999,
          "turnoverGroup": null,
          "layout": {
            "code": "LY-2040-3010",
            "name": "Eigen look en feel",
            "cssUrl": "https://static.pay.nl/layout/LY-2040-3010/cssfile.css",
            "icon": null,
            "supportingColor": "000000",
            "headerTextColor": "556622",
            "buttonColor": "56EADD",
            "buttonTextColor": "CCCCCC"
          },
          "tradeName": {
            "code": "TM-5880-9842",
            "name": "Bossink BV_publicname"
          },
          "createdAt": "2022-05-12T13:26:56+02:00",
          "createdBy": "A-8314-8387",
          "modifiedAt": "2023-01-13T08:41:16+01:00",
          "modifiedBy": "A-8314-8387",
          "deletedAt": null,
          "deletedBy": null,
          "checkoutOptions": [
            {
              "tag": "PG_2",
              "name": "Debit and Credit cards (EN)",
              "translations": {
                "name": {
                  "de_DE": "Credit- & Debitcards (DE)",
                  "en_GB": "Debit and Credit cards (EN)",
                  "nl_NL": "Credit- & Debitcards (NL)"
                }
              },
              "image": "/payment_method_groups/2.svg",
              "paymentMethods": [
                {
                  "id": 706,
                  "name": "Visa Mastercard",
                  "description": "Make a secure payment by Creditcard",
                  "translations": {
                    "name": {
                      "nl_NL": "Visa Mastercard"
                    },
                    "description": {
                      "nl_NL": "Betaal veilig met uw creditcard"
                    }
                  },
                  "image": "/payment_methods/7.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 5000000
                },
                {
                  "id": 707,
                  "name": "Postepay",
                  "description": "",
                  "translations": {
                    "name": {
                      "nl_NL": "Postepay"
                    }
                  },
                  "image": "/payment_methods/10.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                },
                {
                  "id": 710,
                  "name": "Carte Bleue",
                  "description": "",
                  "translations": {
                    "name": {
                      "nl_NL": "Carte Bleue"
                    }
                  },
                  "image": "/payment_methods/11.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": [
                {
                  "fieldName": "cardholderName",
                  "mandatory": "required"
                },
                {
                  "fieldName": "cardNumber",
                  "mandatory": "required"
                },
                {
                  "fieldName": "expiryDate",
                  "mandatory": "required"
                },
                {
                  "fieldName": "CVC",
                  "mandatory": "required"
                }
              ]
            },
            {
              "tag": "PG_4",
              "name": "Cadeaukaarten",
              "translations": {
                "name": {
                  "de_DE": "Geschenkkärte",
                  "nl_NL": "Cadeaukaarten"
                }
              },
              "image": "/payment_method_groups/4.svg",
              "paymentMethods": [
                {
                  "id": 1657,
                  "name": "GivaCard",
                  "description": "",
                  "translations": {
                    "name": {
                      "en_GB": "GivaCard",
                      "it_IT": "GivaCard",
                      "nl_NL": "GivaCard"
                    }
                  },
                  "image": "/payment_methods/61.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                },
                {
                  "id": 1669,
                  "name": "Fashion Giftcard",
                  "description": "",
                  "translations": {
                    "name": {
                      "nl_NL": "Fashion Giftcard"
                    }
                  },
                  "image": "/payment_methods/28.svg",
                  "options": [],
                  "settings": {
                    "ipFilter": []
                  },
                  "minAmount": 0,
                  "maxAmount": 0
                },
                {
                  "id": 1714,
                  "name": "VVV Giftcard",
                  "description": "",
                  "translations": {
                    "name": {
                      "en_GB": "VVV Giftcard",
                      "nl_NL": "VVV Cadeaukaart"
                    }
                  },
                  "image": "/payment_methods/25.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_10",
              "name": "iDEAL",
              "translations": {
                "name": {
                  "de_DE": "iDEAL",
                  "en_GB": "iDEAL",
                  "nl_NL": "iDEAL"
                }
              },
              "image": "/payment_methods/1.svg",
              "paymentMethods": [
                {
                  "id": 10,
                  "name": "iDEAL_EN",
                  "description": "",
                  "translations": {
                    "name": {
                      "de_DE": "iDEAL",
                      "en_GB": "iDEAL",
                      "nl_NL": "iDEAL"
                    }
                  },
                  "image": "/payment_methods/1.svg",
                  "options": [
                    {
                      "id": "2",
                      "name": "Rabobank",
                      "image": "/issuers/2.svg"
                    },
                    {
                      "id": "4",
                      "name": "ING",
                      "image": "/issuers/4.svg"
                    },
                    {
                      "id": "5",
                      "name": "SNS",
                      "image": "/issuers/5.svg"
                    },
                    {
                      "id": "8",
                      "name": "ASN Bank",
                      "image": "/issuers/8.svg"
                    },
                    {
                      "id": "9",
                      "name": "RegioBank",
                      "image": "/issuers/9.svg"
                    },
                    {
                      "id": "10",
                      "name": "Triodos Bank",
                      "image": "/issuers/10.svg"
                    },
                    {
                      "id": "11",
                      "name": "Van Lanschot",
                      "image": "/issuers/11.svg"
                    },
                    {
                      "id": "12",
                      "name": "Knab",
                      "image": "/issuers/12.svg"
                    },
                    {
                      "id": "5080",
                      "name": "Bunq",
                      "image": "/issuers/5080.svg"
                    },
                    {
                      "id": "5082",
                      "name": "Svenska Handelsbanken",
                      "image": "/issuers/5082.svg"
                    },
                    {
                      "id": "5084",
                      "name": "Revolut",
                      "image": "/issuers/5084.svg"
                    }
                  ],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_136",
              "name": "Overboeking (SCT)",
              "translations": {
                "name": {
                  "nl_NL": "Overboeking (SCT)"
                }
              },
              "image": "/payment_methods/12.svg",
              "paymentMethods": [
                {
                  "id": 136,
                  "name": "Overboeking (SCT)",
                  "description": "",
                  "translations": {
                    "name": {
                      "nl_NL": "Overboeking (SCT)"
                    }
                  },
                  "image": "/payment_methods/12.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_138",
              "name": "PayPal",
              "translations": {
                "name": {
                  "en_GB": "PayPal",
                  "it_IT": "PayPal",
                  "nl_NL": "PayPal"
                }
              },
              "image": "/payment_methods/21.svg",
              "paymentMethods": [
                {
                  "id": 138,
                  "name": "PayPal",
                  "description": "",
                  "translations": {
                    "name": {
                      "en_GB": "PayPal",
                      "it_IT": "PayPal",
                      "nl_NL": "PayPal"
                    }
                  },
                  "image": "/payment_methods/21.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_138",
              "name": "PayPal",
              "translations": {
                "name": {
                  "en_GB": "PayPal",
                  "it_IT": "PayPal",
                  "nl_NL": "PayPal"
                }
              },
              "image": "/payment_methods/21.svg",
              "paymentMethods": [
                {
                  "id": 138,
                  "name": "PayPal",
                  "description": "",
                  "translations": {
                    "name": {
                      "en_GB": "PayPal",
                      "it_IT": "PayPal",
                      "nl_NL": "PayPal"
                    }
                  },
                  "image": "/payment_methods/21.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_1927",
              "name": "PIN",
              "translations": {
                "name": {
                  "nl_NL": "PIN"
                }
              },
              "image": "/payment_methods/164.svg",
              "paymentMethods": [
                {
                  "id": 1927,
                  "name": "PIN",
                  "description": "",
                  "translations": {
                    "name": {
                      "nl_NL": "PIN"
                    }
                  },
                  "image": "/payment_methods/164.svg",
                  "options": [
                    {
                      "code": "TH-4030-9090",
                      "name": "Terminal_A",
                      "contractStartDate": "2022-07-24",
                      "contractEndDate": "2022-11-01",
                      "paymentTypes": [
                        "SALE"
                      ],
                      "terminalBrands": [
                        {
                          "id": "1003",
                          "name": "V PAY",
                          "image": "/terminal_brands/32.svg"
                        },
                        {
                          "id": "1009",
                          "name": "Maestro",
                          "image": "/terminal_brands/33.svg"
                        },
                        {
                          "id": "3004",
                          "name": "Edenred",
                          "image": "/terminal_brands/180.svg"
                        }
                      ]
                    },
                    {
                      "code": "TH-6180-0000",
                      "name": "Terminal_B",
                      "contractStartDate": "2022-07-18",
                      "contractEndDate": "2022-11-01",
                      "paymentTypes": [
                        "SALE",
                        "REFUND"
                      ],
                      "terminalBrands": [
                        {
                          "id": "1002",
                          "name": "Visa Electron",
                          "image": "/terminal_brands/0.svg"
                        },
                        {
                          "id": "1009",
                          "name": "Maestro",
                          "image": "/terminal_brands/33.svg"
                        },
                        {
                          "id": "2003",
                          "name": "MasterCard",
                          "image": "/terminal_brands/35.svg"
                        },
                        {
                          "id": "2004",
                          "name": "AMEX",
                          "image": "/terminal_brands/36.svg"
                        }
                      ]
                    },
                    {
                      "code": "TH-9070-8090",
                      "name": "Terminal_C",
                      "contractStartDate": "2022-07-19",
                      "contractEndDate": "2022-11-29",
                      "paymentTypes": [
                        "SALE"
                      ],
                      "terminalBrands": []
                    }
                  ],
                  "settings": {
                    "ipFilter": {
                      "exceptionList": [
                        "192.168.1.2",
                        "192.168.2.1",
                        "192.168.3.1"
                      ],
                      "type": "allow"
                    }
                  },
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_436",
              "name": "Bancontact",
              "translations": {
                "name": {
                  "nl_NL": "Bancontact"
                }
              },
              "image": "/payment_methods/2.svg",
              "paymentMethods": [
                {
                  "id": 436,
                  "name": "Bancontact",
                  "description": "",
                  "translations": {
                    "name": {
                      "nl_NL": "Bancontact"
                    }
                  },
                  "image": "/payment_methods/2.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            },
            {
              "tag": "PM_694",
              "name": "Giropay_EN",
              "translations": {
                "name": {
                  "en_GB": "Giropay",
                  "nl_NL": "Giropay"
                }
              },
              "image": "/payment_methods/3.svg",
              "paymentMethods": [
                {
                  "id": 694,
                  "name": "Giropay",
                  "description": "",
                  "translations": {
                    "name": {
                      "en_GB": "Giropay",
                      "nl_NL": "Giropay"
                    }
                  },
                  "image": "/payment_methods/3.svg",
                  "options": [],
                  "settings": [],
                  "minAmount": 0,
                  "maxAmount": 0
                }
              ],
              "requiredFields": []
            }
          ],
          "checkoutSequence": {
            "default": {
              "primary": [
                "PG_2",
                "PG_4",
                "PM_1927",
                "PM_138"
              ],
              "secondary": [
                "PM_10",
                "PM_436",
                "PM_694",
                "PM_136"
              ]
            },
            "NL": {
              "primary": [
                "PM_10",
                "PM_436",
                "PM_694",
                "PG_2",
                "PG_4",
                "PM_138"
              ],
              "secondary": [
                "PM_1927",
                "PM_136"
              ]
            },
            "DE": {
              "primary": [
                "PM_694",
                "PM_10",
                "PM_436",
                "PG_2",
                "PG_4",
                "PM_138"
              ],
              "secondary": [
                "PM_1927",
                "PM_136"
              ]
            },
            "BE": {
              "primary": [
                "PM_436",
                "PM_10",
                "PM_694",
                "PG_2",
                "PG_4",
                "PM_138"
              ],
              "secondary": [
                "PM_1927",
                "PM_136"
              ]
            }
          },
          "checkoutTexts": [],
          "encryptionKeys": [
            {
              "identifier": "L8LKP9XIQ4E2GUYR1V4PF99HN0TPPUVCJ1MPY731IYV9XMIPLALLZQZCADNABFXG",
              "publicKey": "OkFsV2gxMFZ9R3EzJWFDMHIyUjNTPCBsd1MuZSU1MnBuQyo6dV1yRkhKRVZdNX0vZElCS0hLYjJ5andyJTdISGEoPVUpbix4Kzoqa1I1aVlmZG8mJWJZRyp3KkpBa25ZbFpbWyAnZjFtImkibE4lb3ojRigpW0dHVTVEMSEkbT5jMVBFbXhJWzRWQyQsICtuK3t4VikjdnIhW3I5OXB7eT8oY1UiS3Yoc3dhN08vXSp3QjRtb1AwN2hrKywwRy1mVF1iZVEzV1NEVC5lZClxeno6Z2J+fUk3b1ArQGkvdWYpTU56NXJhQ1dkKTBkVSl6eGdRKVtVM2wzaS9cU1BaPHdfM18kLHE+JncsYXZ3SGFBXG93NSY+U143Pm13QVRLayIhQG9OZ0BXfF4gJk4+XyYxL2dNfFJjbChHJktVNiYkV3hzKUJsfklHa1Y/dXxUVF1LWE5qT2cwJ19mV1AwSlZmIll6NlNRZF8pKDYmbVo6ckBsLUc/PGEoSyMkRStHfDFFc3gzeF48eD5Zcys0RCYiQSBCKUUiPyZybSNMZzUjcHRKW3dgayY1cCN3OCh0W3wuIVZHYiEtbz83XVBoTVV3fl0ufkhPbWgrfVkjKGEyVmFuQylUQGtCYU5kMklLSm1UXi92Wi9AS2I4MEx7WVpARnM5SCYkM0xEZHN2JDU5aVJyIi1aKS4zIXhccSBQY2Y2TEljS3w5IFVqVytlVVE0IGJ5YXNIJHxsND1eb1tFa3xAc0RkNTJUPz90X2l7LXtedVE1XjVhYk5+V31BckZiXjJkeWo9O0pATFovPjMpfDRGJUFjdWd1cVZGYURnYCNOJnh3cmJoSU00Qnd9O1VpSWJVKWJSTHs3QlVwejltIj0yUGpzfXU8VSVuOU5dQXNqM3BpVWlqTVRNN19neUZHPUJaL18yTHEmaWAmcUB6I10+ezJHX0NMLy50cz4oOkNga3dZT219WidTazJmQkJoeUtmfDdBa0Y5QFdVNSxKIEhxY11SfSBce217Y1htLio4LWwkZipLXSQxfWRCZEpJRGxEVFJbRF1+aXYsbGo=",
              "createdAt": "2022-03-30T12:06:34+02:00",
              "expiresAt": "2024-03-29T11:36:58+01:00"
            },
            {
              "identifier": "AMWA53TSWKTXXXHMI5U1YSPWXXV4NYP11LSAAROX0PVVJMGRJTZ79WCD6KN1UWRV",
              "publicKey": "RSIoWF1jV1l9Sk9AS3VgXzZLWzN7LysheG5DcCdGRkExM1hiZSNkIV88RWIuNytQXSotRGxhIUhAdnV+S3t1V2p7VHIhWVA3ZU9cSWxmdnA/NX1AP1pcWSNfK3dlKSVubXlTUXxHZTpNQW9rcHRcVyNoOCh0LTxrZVlZNS5xUTNMK1FoQFs+IHVYdT87V206aFEhd0t+V1krKmRHc2p4bnpUanwwZUddWlItLTFzO3cgLG1FUmJlLT5bK2Q7UGU8ZkcjP3N2N357NTtyNyNQJmhZKX5tM1RPQl9aQy9kX1U4aTlnXWNKMChrajkueiQ5N2ZsYyQmJygleyJrUGV+Y0gwNX4nZ00zRz9oRkg0dCZKIVhDVlpLKTFHPVdBWDlJb2tTXEF+NmpCJ18iJyJPYHMiPWJNTEUvJ0V7NW8qX3dgciopNitEWiMmUSpCR3UkMiNgdF5wcDQpYVh0W0kmP2Aga1skN1xSfS85WUd6eUFEOVpBIGBmYEcyeC1MZHJybUglRiY1Uj8/MFtOUHJFcj40NnA8MFVZL14qRCdBIC91VUVKaFk3TlZFU3NJSHEhX25oKFooT0FCX1IxVTN6WGRccXBgSW0nVDY5e1Yya2JsaG1mdlcldGthV0pEdXsnQWlkLmhqIk42NVRLN0VwcWQvKDpKaE9FIS5aWCFoX3okNHJHX0B4K3NKT0RwVkUxTm1vPEE7Y11OJk4mLF40amtZP183SjNuPn5seylCeXovPkAkVHxfVjl0Qi4nRituUW0uRXFkc1VgT0k5X3E9XWY5YVZzcFF+IDQlal0tP2k7VDVOVF1XP2coVk4+Tj5sPXUlY0suK35QSnI/NGFAQjI0LlFQJS1eOGl2SGhtLnltcl83YD1sYkQ4IjI3bEZsJ1dcRi5tYXtTW3JiIj9AL1d1IG86YDU8XjorfSZyNV5iXH45JSp3NDJdZk45RDBebmU4VmhoJlgveTNTJDJkWXhgQ3htKTM9QyI3PllRUyVCKkRqUkx5VX1KQ3trcSh1KDt4PHxbfUJueTJGd0lMSktHMlgqPCg8TjUtZyslWEA=",
              "createdAt": "2021-03-30T11:36:58+02:00",
              "expiresAt": "2023-03-30T11:36:58+02:00"
            }
          ],
          "tguList": [
            {
              "ID": 2,
              "share": 90,
              "domain": "pay.nl",
              "status": "ACTIVE"
            },
            {
              "ID": 52,
              "share": 10,
              "domain": "payments.nl",
              "status": "ACTIVE"
            },
            {
              "ID": 51,
              "share": 0,
              "domain": "achterelkebetaling.nl",
              "status": "INACTIVE"
            }
          ],
          "_links": [
            {
              "href": "/services/config",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TrademarksResponse200Successful": {
        "summary": "Get all trademarks",
        "value": {
          "total": 1,
          "trademarks": [
            {
              "code": "TM-XXXX-XXXX",
              "name": "Cole, Hickle and Boehm",
              "status": "APPROVED",
              "merchant": {
                "code": "M-XXXX-XXXX",
                "status": "INACTIVE",
                "name": "Us B.V."
              },
              "createdAt": "2021-01-04T19:55:59+01:00",
              "createdBy": "A-XXXX-XXXX",
              "modifiedAt": "2021-01-04T19:57:52+01:00",
              "modifiedBy": "A-XXXX-XXXX",
              "deletedAt": null,
              "deletedBy": null,
              "_links": [
                {
                  "href": "/trademarks/TM-XXXX-XXXX",
                  "rel": "trademark",
                  "type": "GET"
                }
              ]
            }
          ],
          "_links": [
            {
              "href": "/trademarks",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TrademarkResponse200Successful": {
        "summary": "Trademark",
        "value": {
          "code": "TM-XXXX-XXXX",
          "name": "El-shop.nl",
          "status": "APPROVED",
          "merchant": {
            "code": "M-XXXX-XXXX",
            "status": "INACTIVE",
            "name": "El's Webwinkel"
          },
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "A-XXXX-XXXX",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/trademarks/TM-XXXX-XXXX",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TrademarkCreateRequest": {
        "summary": "Create a trademark",
        "value": {
          "name": "El-shop.nl",
          "merchantCode": "M-XXXX-XXXX"
        }
      },
      "TrademarkResponse400BadResponse": {
        "summary": "Merchant not found",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "merchantCode: Unable to find merchant",
          "violations": [
            {
              "propertyPath": "merchantCode",
              "message": "Unable to find merchant",
              "code": "PAY-2835"
            }
          ]
        }
      },
      "TransactionRequestMinimum": {
        "summary": "Basic Transaction",
        "value": {
          "serviceId": "SL-####-####",
          "returnUrl": "https://demo.pay.nl/complete/",
          "amount": {
            "value": 10
          }
        }
      },
      "TransactionRequestMinimumIDeal": {
        "summary": "Ideal + ING Transaction",
        "value": {
          "serviceId": "SL-####-####",
          "returnUrl": "https://demo.pay.nl/complete/",
          "amount": {
            "value": 10
          },
          "paymentMethod": {
            "id": 10,
            "subId": "4"
          }
        }
      },
      "TransactionRequestMinimumCreditcard": {
        "summary": "Creditcard Transaction",
        "value": {
          "serviceId": "SL-####-####",
          "returnUrl": "https://demo.pay.nl/complete/",
          "amount": {
            "value": 10
          },
          "paymentMethod": {
            "id": 706
          }
        }
      },
      "TransactionRequestMinimumPin": {
        "summary": "Pin Terminal Transaction",
        "value": {
          "serviceId": "SL-####-####",
          "returnUrl": "https://demo.pay.nl/complete/",
          "amount": {
            "value": 10
          },
          "paymentMethod": {
            "id": 1927,
            "subId": "TH-####-####"
          }
        }
      },
      "TransactionRequestMaximumTestmodeWithCompanydata": {
        "summary": "Extended Transaction iDeal - testmode",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Example description",
          "reference": "12345XXY0123",
          "returnUrl": "https://demo.pay.nl/complete/",
          "exchangeUrl": "https://demo.pay.nl/exchange.php",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": "10",
            "subId": "4"
          },
          "integration": {
            "testMode": true
          },
          "customer": {
            "firstName": "John",
            "lastName": "Doe",
            "phone": "0031612345678",
            "birthDate": "1999-02-15",
            "gender": "m",
            "email": "sandbox@pay.nl",
            "ipAddress": "213.126.82.230",
            "trust": 5,
            "reference": "NL87654321",
            "company": {
              "countryCode": "nl",
              "coc": "12345678",
              "vat": "NL0123456789",
              "name": "CompanyName"
            }
          },
          "order": {
            "countryCode": "NL",
            "deliveryDate": "2022-12-30",
            "invoiceDate": "2022-12-30",
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "streetNumberExtension": "A",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "regionCode": "NL-ZH",
              "countryCode": "NL"
            },
            "invoiceAddress": {
              "firstName": "Samanta",
              "lastName": "Doe - Jones",
              "streetName": "Invoicestreet",
              "streetNumber": "2",
              "streetNumberExtension": "B",
              "zipCode": "SW36LQ",
              "city": "London",
              "regionCode": "NL-ZH",
              "countryCode": "GB"
            },
            "products": [
              {
                "id": "TEST_01",
                "description": "Caramels sweet roll",
                "type": "article",
                "price": {
                  "value": 1,
                  "currency": "EUR"
                },
                "quantity": 2,
                "vatCode": "H"
              },
              {
                "id": "TEST_02",
                "description": "Cookie tart sugar",
                "type": "article",
                "price": {
                  "value": 3,
                  "currency": "EUR"
                },
                "quantity": 1,
                "vatCode": "H"
              },
              {
                "id": "TEST_03",
                "description": "Lollipop chocolate bar",
                "type": "article",
                "price": {
                  "value": 1,
                  "currency": "EUR"
                },
                "quantity": 5,
                "vatCode": "H"
              }
            ]
          },
          "notification": {
            "type": "email",
            "recipient": "sandbox@pay.nl"
          },
          "stats": {
            "info": "Campagne 99",
            "tool": "Google",
            "extra1": "Customer 6985615",
            "extra2": "Invoice 21.3695",
            "extra3": "Shop Amsterdam"
          },
          "transferData": [
            {
              "name": "stat1",
              "value": "pos1992"
            },
            {
              "name": "stat2",
              "value": "ab8827hhc"
            }
          ]
        }
      },
      "TransactionRequestMaximumNoTestmodeNoCompanyData": {
        "summary": "Extended Transaction iDeal",
        "value": {
          "serviceId": "SL-####-####",
          "description": "Example description",
          "reference": "12345XXY0123",
          "returnUrl": "https://demo.pay.nl/complete/",
          "exchangeUrl": "https://demo.pay.nl/exchange.php",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "paymentMethod": {
            "id": "10",
            "subId": "4"
          },
          "integration": {
            "testMode": false
          },
          "customer": {
            "firstName": "John",
            "lastName": "Doe",
            "phone": "0031612345678",
            "birthDate": "1999-02-15",
            "gender": "m",
            "email": "sandbox@pay.nl",
            "ipAddress": "213.126.82.230",
            "trust": 5,
            "reference": "NL87654321"
          },
          "order": {
            "countryCode": "NL",
            "deliveryDate": "2022-12-30",
            "invoiceDate": "2022-12-30",
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "streetNumberExtension": "A",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "regionCode": "NL-ZH",
              "countryCode": "NL"
            },
            "invoiceAddress": {
              "firstName": "Samanta",
              "lastName": "Doe - Jones",
              "streetName": "Invoicestreet",
              "streetNumber": "2",
              "streetNumberExtension": "B",
              "zipCode": "SW36LQ",
              "city": "London",
              "regionCode": "NL-ZH",
              "countryCode": "GB"
            },
            "products": [
              {
                "id": "TEST_01",
                "description": "Caramels sweet roll",
                "type": "article",
                "price": {
                  "value": 1,
                  "currency": "EUR"
                },
                "quantity": 2,
                "vatCode": "H"
              },
              {
                "id": "TEST_02",
                "description": "Cookie tart sugar",
                "type": "article",
                "price": {
                  "value": 3,
                  "currency": "EUR"
                },
                "quantity": 1,
                "vatCode": "H"
              },
              {
                "id": "TEST_03",
                "description": "Lollipop chocolate bar",
                "type": "article",
                "price": {
                  "value": 1,
                  "currency": "EUR"
                },
                "quantity": 5,
                "vatCode": "H"
              }
            ]
          },
          "notification": {
            "type": "email",
            "recipient": "sandbox@pay.nl"
          },
          "stats": {
            "info": "Campagne 99",
            "tool": "Google",
            "extra1": "Customer 6985615",
            "extra2": "Invoice 21.3695",
            "extra3": "Shop Amsterdam"
          },
          "transferData": [
            {
              "name": "stat1",
              "value": "pos1992"
            },
            {
              "name": "stat2",
              "value": "ab8827hhc"
            }
          ]
        }
      },
      "TransactionRequestWithGoogleAnalytics": {
        "summary": "Basic transaction with Google Analytics ",
        "value": {
          "serviceId": "SL-####-####",
          "returnUrl": "https://demo.pay.nl/complete",
          "reference": "12345XXY0123",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "order": {
            "products": [
              {
                "price": {
                  "value": 10,
                  "currency": "EUR"
                },
                "id": "1",
                "description": "Caramels sweet roll",
                "type": "article",
                "quantity": 1,
                "vatCode": "H"
              }
            ]
          },
          "transferData": [
            {
              "name": "gaClientId",
              "value": "707423299.1686737903"
            }
          ]
        }
      },
      "TransactionResponseExample": {
        "summary": "Successful Transaction",
        "value": {
          "id": "EX-1234-1234-1234",
          "serviceId": "SL-1234-1234",
          "description": "Example description",
          "reference": "12345XXY0123",
          "manualTransferCode": "5000 0016 6117 8719",
          "orderId": "1234567891X33ce1",
          "paymentUrl": "https://bankieren.ideal.ing.nl/ideal/betalen/inlog-annuleren/static/detect_mob?trxid=0378827364771217&random=z81d2s6efaf2fcc",
          "statusUrl": "https://rest.pay.nl/v1/transactions/EX-1234-1234-1234/status",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "uuid": "ab14f24d-fd08-ac23-1661-179814c0ad45",
          "hash": "9142aafd4d02c72d006b315eb590b7c2",
          "cancelUrl": "https://instore.pay.nl:9004/api/cancel?hash=9142aafd4d02c72d006b315eb590b7c2&timeout=5",
          "orderStatusUrl": "https://pin.pay.nl:9004/api/status?hash=9142aafd4d02c72d006b315eb590b7c2&timeout=5",
          "expire": 123456789,
          "expiresAt": "2016-06-04T08:15:00+01:00",
          "created": "2016-06-04T08:15:00+01:00",
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modified": "2016-06-04T08:15:00+01:00",
          "modifiedAt": "2016-06-04T08:15:00+01:00",
          "modifiedBy": "A-1234-4321",
          "_links": [
            {
              "href": "/transactions",
              "rel": "self",
              "type": "POST"
            },
            {
              "href": "/transactions/EX-1234-1234-1234",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionStatusResponse200Successful": {
        "summary": "Transaction status",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 0,
            "currency": "EUR"
          },
          "status": {
            "code": 100,
            "action": "PAID",
            "phase": "SUCCESS"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "127.0.0.1",
            "secureStatus": false,
            "paymentVerificationMethod": 16
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3
          },
          "integration": {
            "testMode": false
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/status",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionLoadResponse200Successful": {
        "summary": "Transaction Load",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "0000 0018 0911 7996",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "returnUrl": "https://pay.nl",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "status": {
            "code": 20,
            "action": "PENDING",
            "phase": "PENDING"
          },
          "integration": {
            "testMode": false
          },
          "merchant": {
            "code": "M-3421-2120",
            "name": "Company B.V.",
            "status": "ACTIVE"
          },
          "tradeName": {
            "code": "TM-1740-2882",
            "name": "TradeName"
          },
          "layout": {
            "code": "LY-1080-1010",
            "name": "Eigen look & feel",
            "cssUrl": "https://static.pay.nl/layout/LY-1080-1010/cssfile.css",
            "icon": "",
            "supportingColor": "000000",
            "headerTextColor": "556622",
            "buttonColor": "56EADD",
            "buttonTextColor": "CCCCCC"
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/load",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionCancelResponse200Successful": {
        "summary": "Transaction cancel",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 0,
            "currency": "EUR"
          },
          "status": {
            "code": -90,
            "action": "CANCEL",
            "phase": "CANCELLED"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "127.0.0.1",
            "secureStatus": false
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3
          },
          "integration": {
            "testMode": false
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/cancel",
              "rel": "self",
              "type": "PATCH"
            },
            {
              "href": "/transactions/EX-0171-7899-4460",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionApproveResponse200Successful": {
        "summary": "Transaction approve",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 0,
            "currency": "EUR"
          },
          "status": {
            "code": 100,
            "action": "PAID",
            "phase": "SUCCESS"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "127.0.0.1",
            "secureStatus": false
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3
          },
          "integration": {
            "testMode": false
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/approve",
              "rel": "self",
              "type": "PATCH"
            },
            {
              "href": "/transactions/EX-0171-7899-4460",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionDeclineResponse200Successful": {
        "summary": "Transaction decline",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 0,
            "currency": "EUR"
          },
          "status": {
            "code": -64,
            "action": "CANCEL",
            "phase": "DENIED"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "127.0.0.1",
            "secureStatus": false
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3
          },
          "integration": {
            "testMode": false
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/decline",
              "rel": "self",
              "type": "PATCH"
            },
            {
              "href": "/transactions/EX-0171-7899-4460",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionVoidResponse200Successful": {
        "summary": "Transaction void",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 10,
            "currency": "EUR"
          },
          "status": {
            "code": -90,
            "action": "CANCEL",
            "phase": "CANCELLED"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "127.0.0.1",
            "secureStatus": false
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3
          },
          "integration": {
            "testMode": false
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/void",
              "rel": "self",
              "type": "PATCH"
            },
            {
              "href": "/transactions/EX-0171-7899-4460",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionCaptureResponse200Successful": {
        "summary": "Transaction capture",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 0,
            "currency": "EUR"
          },
          "status": {
            "code": 100,
            "action": "PAID",
            "phase": "SUCCESS"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "127.0.0.1",
            "secureStatus": false
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3
          },
          "integration": {
            "testMode": false
          },
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-0073-4553",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/capture",
              "rel": "self",
              "type": "PATCH"
            },
            {
              "href": "/transactions/EX-0171-7899-4460",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionResponse200Successful": {
        "summary": "Transaction Full",
        "value": {
          "id": "EX-0171-7899-4460",
          "orderId": "1234567891X33ce1",
          "serviceCode": "SL-4878-2340",
          "description": "Example description",
          "reference": "12345XXY0123",
          "ipAddress": "86.83.126.161",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "amountConverted": {
            "value": 10,
            "currency": "EUR"
          },
          "amountPaid": {
            "value": 0,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 0,
            "currency": "EUR"
          },
          "status": {
            "code": 100,
            "action": "PAID",
            "phase": "SUCCESS"
          },
          "paymentData": {
            "method": "iban",
            "customerKey": "07e384a630c97ef7e1f1fb8b2edbf8ac",
            "customerId": "NL91ABNA0417164300",
            "customerName": "John Doe",
            "ipAddress": "213.126.82.230",
            "secureStatus": false,
            "paymentVerificationMethod": 16,
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            }
          },
          "paymentMethod": {
            "id": 10,
            "subId": 3,
            "name": "iDEAL"
          },
          "customer": {
            "firstName": "John",
            "lastName": "Doe",
            "type": "B",
            "birthDate": "1999-02-15",
            "language": "NL",
            "gender": "M",
            "phone": "0031612345678",
            "email": "sandbox@pay.nl",
            "trust": 0,
            "reference": "NL87654321",
            "bankAccount": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            },
            "company": {
              "name": "CompanyName",
              "coc": "12345678",
              "vat": "NL0123456789",
              "countryCode": "NL"
            }
          },
          "order": {
            "countryCode": "NL",
            "deliveryDate": "2022-12-30",
            "invoiceDate": "2022-12-30",
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Deliverylane",
              "streetNumber": 70,
              "streetNumberExtension": "A",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "regionCode": "NH",
              "countryCode": "NL"
            },
            "invoiceAddress": {
              "firstName": "Samanta",
              "lastName": "Doe - Jones",
              "streetName": "Invoicestreet",
              "streetNumber": 2,
              "streetNumberExtension": "B",
              "zipCode": "5211",
              "city": "London",
              "regionCode": "LND",
              "countryCode": "UK"
            },
            "products": [
              {
                "id": "Telefoon",
                "type": "article",
                "description": "iPhone 12 Pro",
                "price": {
                  "value": 5,
                  "currency": "EUR"
                },
                "quantity": 1,
                "vatCode": "H"
              },
              {
                "id": "TV",
                "type": "article",
                "description": "Samsung TV",
                "price": {
                  "value": 5,
                  "currency": "EUR"
                },
                "quantity": 1,
                "vatCode": "H"
              }
            ]
          },
          "stats": {
            "info": "",
            "tool": "",
            "object": "",
            "extra1": "76908",
            "extra2": "",
            "extra3": "",
            "domainId": null
          },
          "transferData": [],
          "expiresAt": "2021-09-04T12:14:01+02:00",
          "createdAt": "2021-09-04T12:14:01+02:00",
          "createdBy": "AT-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/transactions/EX-0171-7899-4460/status",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionResponse400BadRequest": {
        "summary": "Bad request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "transaction.serviceId: Unable to find service location\ntransaction.amount.value: You have entered an invalid amount",
          "violations": [
            {
              "propertyPath": "transaction.serviceId",
              "message": "Unable to find service location",
              "code": "PAY-2852"
            },
            {
              "propertyPath": "transaction.amount.value",
              "message": "You have entered an invalid amount",
              "code": "PAY-2803"
            }
          ]
        }
      },
      "TransactionResponse422UnprocessableEntity": {
        "summary": "Payment option not activated",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Payment option (9999) is not enabled for this service (SL-####-####)",
          "violations": [
            {
              "propertyPath": null,
              "message": "Payment option (9999) is not enabled for this service (SL-####-####)",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "TransactionRefund200Successful": {
        "summary": "Successful refund",
        "value": {
          "orderId": "1661180545X1ca9c",
          "transactionId": "EX-5431-7835-5460",
          "description": "We have refunded € 0,10 by refunding IBAN bankaccount (NL16RABO1822913977) with € 0,10",
          "processDate": "2022-12-01T14:37:58+01:00",
          "amount": {
            "value": 1000,
            "currency": "EUR"
          },
          "amountRefunded": {
            "value": 10,
            "currency": "EUR"
          },
          "refundedTransactions": [
            {
              "amountRefunded": {
                "value": 10,
                "currency": "EUR"
              },
              "refund": {
                "id": "RF-1234-1234-1234-1234"
              },
              "createdAt": "2022-12-01T14:37:58+01:00",
              "createdBy": "AT-1234-4321"
            }
          ],
          "createdAt": "2022-12-01T14:37:58+01:00",
          "createdBy": "AT-1234-4321",
          "_links": [
            {
              "href": "/transactions/EX-5431-7835-5460/refund",
              "rel": "self",
              "type": "PATCH"
            },
            {
              "href": "/transactions/EX-5431-7835-5460",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "TransactionRefundAmountPayload": {
        "summary": "Refund based on an amount",
        "value": {
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "products": [],
          "description": "The product never got delivered",
          "processDate": "2019-01-01T12:00:00+02:00",
          "vatPercentage": "21.0",
          "exchangeUrl": "https://demo.pay.nl/exchange.php"
        }
      },
      "TransactionRefundProductPayload": {
        "summary": "Refund based on a product",
        "value": {
          "amount": null,
          "products": {
            "TEST_01": 1
          },
          "description": "The product never got delivered",
          "processDate": "2019-01-01T12:00:00+02:00",
          "vatPercentage": "21.0",
          "exchangeUrl": "https://demo.pay.nl/exchange.php"
        }
      },
      "TransactionRefund400BadRequestExample": {
        "summary": "Empty Amount",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "amount: Is empty",
          "violations": [
            {
              "propertyPath": "amount",
              "message": "Is empty",
              "code": "PAY-2828"
            }
          ]
        }
      },
      "TransactionRefund422UnprocessableEntity": {
        "summary": "Refund too fast",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Refund too fast",
          "violations": [
            {
              "propertyPath": null,
              "message": "Refund too fast",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "TransactionCaptureAmountPayload": {
        "summary": "Capture based on an amount",
        "value": {
          "amount": 10
        }
      },
      "TransactionCaptureProductPayload": {
        "summary": "Capture based on a product",
        "value": {
          "products": {
            "TEST_01": 1
          }
        }
      },
      "TurnoverGroupResponse200Successful": {
        "summary": "Turnover group",
        "value": {
          "code": "CT-1234-4321",
          "name": "Standaard",
          "default": true,
          "description": "Standaard",
          "paymentDescription": null,
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "bankAccount": {
            "code": "BA-1234-4321",
            "status": "NOT_CHECKED",
            "method": "iban",
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            }
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/turnovergroups/CT-1234-4321",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TurnoverGroupsResponse200Successful": {
        "summary": "Turnover group",
        "value": {
          "total": 1,
          "turnoverGroups": {
            "code": "CT-1234-4321",
            "name": "Standaard",
            "default": true,
            "description": "Standaard",
            "paymentDescription": null,
            "merchant": {
              "code": "M-1234-4321",
              "status": "ACTIVE",
              "name": "CompanyName"
            },
            "bankAccount": {
              "code": "BA-1234-4321",
              "status": "NOT_CHECKED",
              "method": "iban",
              "iban": {
                "iban": "NL69INGB0123456789",
                "bic": "INGBNL2A",
                "owner": "John Doe"
              }
            },
            "createdAt": "2016-06-04T08:15:00+01:00",
            "createdBy": "A-1234-4321",
            "modifiedAt": null,
            "modifiedBy": null,
            "deletedAt": null,
            "deletedBy": null,
            "_links": [
              {
                "href": "/turnovergroups/CT-1234-4321",
                "rel": "turnoverGroup",
                "type": "GET"
              }
            ]
          },
          "_links": [
            {
              "href": "/turnovergroups",
              "rel": "self",
              "type": "GET"
            }
          ]
        }
      },
      "TurnoverGroupCreateResponse200Successful": {
        "summary": "Turnover group",
        "value": {
          "code": "CT-1234-4321",
          "name": "Standaard",
          "default": true,
          "description": "Standaard",
          "paymentDescription": null,
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "bankAccount": {
            "code": "BA-1234-4321",
            "status": "NOT_CHECKED",
            "method": "iban",
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            }
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/turnovergroups/CT-1234-4321",
              "rel": "self",
              "type": "POST"
            }
          ]
        }
      },
      "TurnoverGroupUndeleteResponse200Successful": {
        "summary": "Turnover group",
        "value": {
          "code": "CT-1234-4321",
          "name": "Standaard",
          "default": true,
          "description": "Standaard",
          "paymentDescription": null,
          "merchant": {
            "code": "M-1234-4321",
            "status": "ACTIVE",
            "name": "CompanyName"
          },
          "bankAccount": {
            "code": "BA-1234-4321",
            "status": "NOT_CHECKED",
            "method": "iban",
            "iban": {
              "iban": "NL69INGB0123456789",
              "bic": "INGBNL2A",
              "owner": "John Doe"
            }
          },
          "createdAt": "2016-06-04T08:15:00+01:00",
          "createdBy": "A-1234-4321",
          "modifiedAt": null,
          "modifiedBy": null,
          "deletedAt": null,
          "deletedBy": null,
          "_links": [
            {
              "href": "/turnovergroups/CT-1234-4321",
              "rel": "self",
              "type": "PATCH"
            }
          ]
        }
      },
      "TurnoverGroupCreatePayload": {
        "summary": "Turnover group without bank account",
        "value": {
          "merchantCode": "M-1234-4321",
          "turnoverGroup": {
            "name": "Standaard",
            "default": true,
            "description": "",
            "paymentDescription": ""
          }
        }
      },
      "TurnoverGroupWithBankAccountCreatePayload": {
        "summary": "Turnover group with bank account",
        "value": {
          "merchantCode": "M-1234-4321",
          "turnoverGroup": {
            "name": "Standaard",
            "bankAccountCode": "BA-1234-4321",
            "default": true,
            "description": "",
            "paymentDescription": ""
          }
        }
      },
      "TurnoverGroupsCreate400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "turnoverGroup.name: Is empty",
          "violations": [
            {
              "propertyPath": "turnoverGroup.name",
              "message": "Is empty",
              "code": "PAY-2828"
            }
          ]
        }
      },
      "TurnoverGroupsDelete400BadRequest": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "turnoverGroup: {}",
          "violations": [
            {
              "propertyPath": "turnoverGroup",
              "message": "{}",
              "code": "PAY-404"
            }
          ]
        }
      },
      "VoucherTransactionRequestPOSMin": {
        "summary": "Basic Voucher Transaction POS example",
        "value": {
          "transaction": {
            "type": "POS",
            "serviceId": "SL-####-####",
            "amount": {
              "value": 10
            }
          },
          "voucher": {
            "cardNumber": "####################"
          }
        }
      },
      "VoucherTransactionRequestECOMMin": {
        "summary": "Basic Voucher Transaction ECOM example",
        "value": {
          "transaction": {
            "type": "ECOM",
            "serviceId": "SL-####-####",
            "amount": {
              "value": 10
            }
          },
          "voucher": {
            "cardNumber": "####################",
            "pinCode": "#####"
          }
        }
      },
      "VoucherTransactionRequestPOSMmax": {
        "summary": "Extended Voucher Transaction POS example",
        "value": {
          "transaction": {
            "type": "POS",
            "serviceId": "SL-####-####",
            "description": "Example description",
            "reference": "12345XXY0123",
            "exchangeUrl": "https://demo.pay.nl/exchange.php",
            "amount": {
              "value": 10,
              "currency": "EUR"
            }
          },
          "voucher": {
            "cardNumber": "####################"
          },
          "customer": {
            "firstName": "John",
            "lastName": "Doe",
            "ipAddress": "213.126.82.230",
            "birthDate": "1999-02-15",
            "gender": "m",
            "phone": "0031612345678",
            "email": "sandbox@pay.nl",
            "language": "NL",
            "trustLevel": 5,
            "reference": "NL87654321"
          },
          "order": {
            "countryCode": "NL",
            "deliveryDate": "2022-12-30",
            "invoiceDate": "2022-12-30",
            "deliveryAddress": {
              "firstName": "John",
              "lastName": "Doe",
              "streetName": "Deliverylane",
              "streetNumber": "70",
              "streetNumberExtension": "A",
              "zipCode": "5678CD",
              "city": "Amsterdam",
              "countryCode": "NL"
            },
            "invoiceAddress": {
              "firstName": "Samanta",
              "lastName": "Doe - Jones",
              "streetName": "Invoicestreet",
              "streetNumber": "2",
              "streetNumberExtension": "B",
              "zipCode": "SW36LQ",
              "city": "London",
              "countryCode": "UK"
            },
            "products": [
              {
                "id": "TEST_01",
                "description": "Caramels sweet roll",
                "type": "article",
                "price": {
                  "value": 1,
                  "currency": "EUR"
                },
                "quantity": 2,
                "vatCode": "H"
              },
              {
                "id": "TEST_02",
                "description": "Cookie tart sugar",
                "type": "article",
                "price": {
                  "value": 3,
                  "currency": "EUR"
                },
                "quantity": 1,
                "vatCode": "H"
              },
              {
                "id": "TEST_03",
                "description": "Lollipop chocolate bar",
                "type": "article",
                "price": {
                  "value": 1,
                  "currency": "EUR"
                },
                "quantity": 5,
                "vatCode": "H"
              }
            ]
          },
          "statistics": {
            "info": "Campagne 99",
            "tool": "Google",
            "extra1": "Customer 6985615",
            "extra2": "Invoice 21.3695",
            "extra3": "Shop Amsterdam"
          }
        }
      },
      "VoucherTransactionResponseExample": {
        "summary": "Successful Voucher Transaction",
        "value": {
          "id": "EX-####-####-####",
          "serviceId": "SL-####-####",
          "description": "Example description",
          "reference": "12345XXY0123",
          "orderId": "#########X#####",
          "ipAddress": "213.126.82.230",
          "amount": {
            "value": 10,
            "currency": "EUR"
          },
          "created": "2016-06-04T08:15:00+01:00",
          "modified": "2016-06-04T08:15:00+01:00",
          "_links": [
            {
              "href": "/transactions",
              "rel": "self",
              "type": "POST"
            },
            {
              "href": "/transactions/EX-####-####-####",
              "rel": "details",
              "type": "GET"
            }
          ]
        }
      },
      "VoucherTransaction400BadRequestExample": {
        "summary": "Bad Request",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "transaction.serviceId: Unable to find service location\ntransaction.amount.value: You have entered an invalid amount",
          "violations": [
            {
              "propertyPath": "transaction.serviceId",
              "message": "Unable to find service location",
              "code": "PAY-2852"
            },
            {
              "propertyPath": "transaction.amount.value",
              "message": "You have entered an invalid amount",
              "code": "PAY-2803"
            }
          ]
        }
      },
      "VoucherTransactionResponseInvalidCardExample": {
        "summary": "Invalid cardnumber",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "This is an invalid giftcard, we are unable to find the giftcard brand.",
          "violations": [
            {
              "propertyPath": null,
              "message": "This is an invalid giftcard, we are unable to find the giftcard brand",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "VoucherTransactionResponseInvalidPinCodeExample": {
        "summary": "Invalid pinCode",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "Failed to login",
          "violations": [
            {
              "propertyPath": null,
              "message": "Failed to login",
              "code": "PAY-3000"
            }
          ]
        }
      },
      "VoucherTransactionResponseInvalidInsufficientFundsExample": {
        "summary": "Insufficient Funds",
        "value": {
          "type": "https://developer.pay.nl/docs/error-codes",
          "title": "An error occurred",
          "detail": "The voucher has insufficient funds",
          "violations": [
            {
              "propertyPath": null,
              "message": "The voucher has insufficient funds",
              "code": "PAY-3000"
            }
          ]
        }
      }
    },
    "securitySchemes": {
      "basicAuth": {
        "type": "http",
        "scheme": "basic"
      },
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": ""
    },
    {
      "name": "Core Data",
      "description": ""
    },
    {
      "name": "Directdebits",
      "description": ""
    },
    {
      "name": "Ispay",
      "description": ""
    },
    {
      "name": "Merchant Management",
      "description": ""
    },
    {
      "name": "PersonLicenses",
      "description": ""
    },
    {
      "name": "Refunds",
      "description": ""
    },
    {
      "name": "Payout",
      "description": ""
    },
    {
      "name": "Pin",
      "description": ""
    },
    {
      "name": "Qr",
      "description": ""
    },
    {
      "name": "Services",
      "description": ""
    },
    {
      "name": "Trademarks",
      "description": ""
    },
    {
      "name": "Transactions",
      "description": ""
    },
    {
      "name": "Vouchers",
      "description": ""
    }
  ],
  "externalDocs": {
    "description": "Official PAY. documentation",
    "url": "https://docs.pay.nl"
  }
}